[{"content":"Gostaria de bater um papo sobre uma pergunta bem interessante.\n‚ÄúComo programador, sou obrigado a usar Linux?‚Äú\nObrigado n√£o, por√©m, saber Linux lhe ajudar√° e muito em sua carreira. üòâ\nLinux est√° muito ligado ao desenvolvimento de software, e podemos afirmar que, hoje em dia, est√° muito mais f√°cil utiliz√°-lo. Mesmo voc√™ utilizando Windows em sua m√°quina, pode recorrer ao WSL (Linux no Windows).\nPara determinadas atividades que deseja desempenhar, de fato o Windows se mostrar√° mais pr√°tico como jogos, alguns softwares como Photohop e etc.\nPor muito tempo, no in√≠cio da minha carreira, tive medo do Linux, muito por desconhecimento, at√© que um belo dia quebrei essa barreira e comecei a utilizar, isso faz uns 10 anos.\nUsei v√°rias distribui√ß√µes ao longo desses anos como o Ubuntu, Linux Mint, Zorin OS, Pop_OS, Manjaro e Fedora.\nGosto bastante do Fedora, sendo ela a distro que uso atualmente.\nNo in√≠cio foi desafiador, quebrei diversas vezes as instala√ß√µes por fazer algo errado, tendo que formatar a m√°quia hahaha. Com o tempo e conhecimento tudo foi ficando mais f√°cil.\nMuitas linguagens de programa√ß√£o e ferramentas tem seu funcionamento melhor e mais f√°cil em um ambiente Linux, ao hospedar um sistema, site ou qualquer contato com servidor √© muito comum, e prov√°vel, que esse servidor rode algum sabor de Linux, at√© mesmo por quest√µes financeiras de licen√ßa.\nFato tamb√©m, quando comecei a usar Linux, me aproximei de comunidades, aprendi muita coisa e isso √© algo fant√°stico!\nEm resumo, como disse, n√£o √© obrigat√≥rio, mas lhe trar√° um leque de possibilidades t√£o grande, que trar√° muitas vantagens para a sua carreira.\nMinhas ferramentas do meu dia a dia s√£o praticamente multiplataforma, ajudando muito quando preciso usar Windows, sim, eu tenho uma m√°quina com Windows tamb√©m hahahaha. Hoje em dia, para mim, S.O. √©, e sempre deveria ser, uma ferramenta que me auxilia no meu dia a dia, no qual prefiro Linux.\nPretendo gerar mais conte√∫dos sobre Linux, mas vou listar algumas das ferramentas que uso e que s√£o multiplataformas;\nDocker; VSCode; Sublime; Beekeeper Studio; Mailspring; Draw.io (instalado); Chrome; Firefox; Terminal (no Windows √© WSL); Outro questionamento que pode estar pairando em sua mente.\nNunca usei nenhuma distribui√ß√£o Linux, devo ent√£o formatar meu computador!\nN√£o necessariamente, comece instalando em uma m√°quina virtual, ou instale e configure o WSL, v√° mexendo e explorando, com o tempo vai se familiarizando.\nUma √≥tima fonte de conte√∫do, que recomento fortemente, √© o blog do DioLinux, ele e sua equipe vem fazendo um excelente trabalho h√° anos, trazendo muito conte√∫do sobre Linux.\nMeu workflow √© muito pensado e voltado para as praticidades do Linux, em espec√≠fico com a interface Gnome, toda vez que preciso formatar o computador j√° tenho tudo pr√©-definido, f√°cil de configurar, instalar e usar.\nGostaria de fazer uma provoca√ß√£o para voc√™ refletir e deixar nos coment√°rios.\n‚ÄúSou for√ßado a usar e gostar do Linux?‚Äù\nVou deixar minha vis√£o. N√£o, de maneira alguma! Por√©m, umas das grandes maravilhas de sermos programadores √© poder usar diversas e diferentes ferramentas.\nPermita-se explorar, testar e chegar a suas conclus√µes. Sempre teremos ferramentas que preferimos, resolvendo determinado problema melhor, e com isso vamos construindo a nossa caixa de ferramentas.\nPrograma√ß√£o √© minha profiss√£o e desempenho com muita seriedade, afinco e amor. Permito-me divertir, experimentando novas tecnologias, ferramentas, aprender mais e conhecer pessoas bacanas nessa trajet√≥ria.\nEspero que tenha apreciado esse conversa, convido e incentivo voc√™ a usar o espa√ßo de coment√°rios, para assim continuarmos nossa conversa.\nSucesso em seus projetos!\n","permalink":"https://diegobrocanelli.com.br/linux/como-programador-sou-obrigado-a-usar-linux/","summary":"Gostaria de bater um papo sobre uma pergunta bem interessante.\n‚ÄúComo programador, sou obrigado a usar Linux?‚Äú\nObrigado n√£o, por√©m, saber Linux lhe ajudar√° e muito em sua carreira. üòâ\nLinux est√° muito ligado ao desenvolvimento de software, e podemos afirmar que, hoje em dia, est√° muito mais f√°cil utiliz√°-lo. Mesmo voc√™ utilizando Windows em sua m√°quina, pode recorrer ao WSL (Linux no Windows).\nPara determinadas atividades que deseja desempenhar, de fato o Windows se mostrar√° mais pr√°tico como jogos, alguns softwares como Photohop e etc.","title":"Como programador, sou obrigado a usar Linux?"},{"content":"Ol√°, tudo bem?\nRecentemente tive o enorme prazer em participar de um epis√≥dio do podcast Fechatag, do grande Montanha.\nAcompanho o Montanha desde a √©poca em que era host do podcast Dev Na Estrada, e quando ele anunciou a cria√ß√£o do fechatag fiquei muito feliz, pois √© um material muito rico, diferenciado e prazeroso de acompanhar.\nAdoro o fechatag, pois conecta pessoas por meio da tecnologia que compartilham suas hist√≥rias, aprendizados e sucessos. Acabamos conhecendo por outra √≥tica culturas e aprendizados¬†maravilhosos.\nNeste epis√≥dio batemos um papo muito prazeroso sobre minha vida e como foi minha jornada at√© me tornar um desenvolvedor, e¬†como hoje tenho um enorme prazer em trabalhar como programador.\nBusquei compartilhar a minha hist√≥ria para quem sabe inspirar ou de alguma maneira ajudar quem deseja iniciar sua carreira em TI.\nEspero que voc√™s apreciem o conte√∫do que ficou fant√°stico! N√£o esque√ßam de comentar e dar like no v√≠deo!\nSegue o link para acesso ao v√≠deo espero que apreciem :).\nPara quem tem interesse em conhecer o podcast e apoiar o projeto, seguem os links:\nYoutube Twitter Instagram Ser√° um prazer bater um papo nos coment√°rios.\nEspero que lhe ajude de alguma forma e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/video/participacao-no-podcast-fechatag/","summary":"Ol√°, tudo bem?\nRecentemente tive o enorme prazer em participar de um epis√≥dio do podcast Fechatag, do grande Montanha.\nAcompanho o Montanha desde a √©poca em que era host do podcast Dev Na Estrada, e quando ele anunciou a cria√ß√£o do fechatag fiquei muito feliz, pois √© um material muito rico, diferenciado e prazeroso de acompanhar.\nAdoro o fechatag, pois conecta pessoas por meio da tecnologia que compartilham suas hist√≥rias, aprendizados e sucessos.","title":"Participa√ß√£o no Podcast Fechatag"},{"content":"Ol√°, tudo bem?!\n√â muito comum as pessoas terem d√∫vida de como aprender uma nova tecnologia, visto mais frequentemente nas pessoas iniciantes.\nCom o tempo eu identifiquei a maneira com o qual melhor me ad√©quo para estudar, sugiro que comece a analisar quais maneiras lhe agrada mais, e que trazem melhores resultados. Sabemos que n√£o existe uma maneira universal (bala de prata) para todos, h√° pessoas que gostam de ler, outras de assistir ao conte√∫do desejado, ouvir podcasts ou √°udio books por exemplo, essa diversidade √© natural e individual de cada pessoa.\nA maneira que me agrada √© composta de uma mescla das possibilidades sendo leitura, v√≠deo, podcast e principalmente m√£o na massa!\nLeitura da documenta√ß√£o Independente da tecnologia, busco sua documenta√ß√£o oficial para leitura e compreens√£o do que se prop√µem a fazer e resolver.\nNesse primeiro contato analiso a qualidade da documenta√ß√£o, se √© f√°cil de compreender, bem estruturada e se recebe constantes atualiza√ß√µes.\nBoas documenta√ß√µes s√£o simples, coesas, com bons exemplos de c√≥digo e guia a pessoa para que ele possa ir se familiarizando com a tecnologia.\nImportante saber se a documenta√ß√£o tem profundidade no conte√∫do, para que assim seja poss√≠vel seguir para o pr√≥ximo n√≠vel com mais confian√ßa.\n√â natural que conforme avence nos estudos, pode ser que determinado cen√°rio a documenta√ß√£o n√£o atenda a expectativa, por√©m existem maneiras de sanar isso, e nos t√≥picos a seguir iremos ver essas op√ß√µes.\nBusca por material de apoio Para um r√°pido overview da tecnologia, gosto de acessar o site https://learnxinyminutes.com, seu conte√∫do √© bem interessante que traz um breve resumo da tecnologia. Um ponto que pode ser restritivo √© que nem todo conte√∫do tem sua vers√£o traduzida para portugu√™s, por√©m vale o acesso para leitura do seu conte√∫do.\nBusco posts sobre o conte√∫do desejado e para isso acabo pesquisando termos como, ‚Äúxpto for beginners‚Äù, e filtro os resultados por tempo e se o conte√∫do apresentado faz algum sentido. Com o tempo, vamos identificando pontos em comum entre as tecnologias e esses pontos s√£o mais r√°pidos absorvidos, ou at√© mesmo ignoro pois foco em pontos mais espec√≠ficos.\nAdoro ouvir podcasts, com isso busco no feed dos podcasts que sigo para ver se eles tem material sobre o assunto que desejo, aproveito para seguir as pessoas que participaram do tema. Iremos falar um pouco melhor mais a frente sobre essas referencias üòâ .\nBusco v√≠deos no Youtube, por√©m esse sou mais criterioso, pois dependendo do tema o fator tempo √© crucial. Pois, podemos encontrar um v√≠deo com 5 anos e que pode ter envelhecido mau, que torna o v√≠deo obsoleto. Agora, se o tema que busco for fundamentos, como arquitetura, design de c√≥digo ou temas nessa linha, o fator tempo se torna menos denso, pois s√£o conte√∫dos que se bem apresentados resistem ao passar do tempo.\nDependendo da minha necessidade, busco cursos para encurtar o tempo de aprendizado, pois com isso ser√° mais r√°pido passar pelos desafios iniciais e tamb√©m facilitar√° o aprofundamento quando busco na documenta√ß√£o ou materiais complementares.\nUma fonte de estudos que amo s√£o os livros, por√©m n√£o foco em livros de linguagens, pois √© natural que evoluam rapidamente e com isso o livro se torna obsoleto com a mesma agilidade. Aqui cabe um ‚Äúdisclaimer‚Äù, eu n√£o consumo, por√©m voc√™ pode gostar e ser uma √≥tima fonte de conte√∫do para voc√™, n√£o limite a minha rotina.\nCompro livros focados em conhecimentos base, alguns t√≠tulos de exemplo s√£o,\nArquitetura limpa C√≥digo limpo Domain-Driven Design: atacando as complexidades no cora√ß√£o do software O m√≠tico homem m√™s O Programador Apaixonado; O Programador Pragm√°tico Orienta√ß√£o a Objetos e SOLID para Ninjas Padr√µes de projetos Aqui cabe uma √≥tima indica√ß√£o para quem est√° iniciando sua carreia na tecnologia, o grande Willian Oliveira escreveu um √≥timo livro chamado O universo da programa√ß√£o, focado em auxiliar as pessoas iniciantes na tecnologia.\nTemos hoje uma enxurrada de propagandas sobre cursos, bootcamps ou solu√ß√µes milagrosas para que em um tempo ridiculamente curto voc√™ atinga resultados imposs√≠veis. Pe√ßo que tenha parcim√¥nia ao analisar essas ‚Äúoportunidades‚Äù, pois como mencionado anteriormente, aprender leva tempo, construir uma carreira leva-se anos, e pular etapas ou acreditar em solu√ß√µes milagrosas √© muito perigoso e que pode ser extremamente frustrante. N√£o estou dizendo que todos s√£o assim, h√° empresas s√©rias e excelentes prestando um servi√ßo excepcional, apenas refor√ßo que pesquise e pondere, pois h√° pessoas que depositam todo o dinheiro que tem, em momentos de extremo desespero e isso pode ser muito perigoso.\nCria√ß√£o de projeto teste √â fundamental para o meu fluxo de estudos por em pr√°tica o que estou aprendendo e pesquisando, para isso eu crio um pequeno projeto que ser√° resolvido com a tecnologia que estou estudando.\nEsse projeto tem como ess√™ncia ser muito curto que seja resolvido em 1 semana ou menos, por que isso, para n√£o gerar frustra√ß√µes e que eu n√£o me foque em qual projeto fazer e sim na tecnologia. Tenho um projeto open source chamado Laborat√≥rio de ideias, onde seu foco √© concentrar ideias de projetos para praticar os estudos. Tenho um post que descreve melhor o ideal do projeto.\nEsses projetos eu aproveito e deixo no meu Github, para que assim eu possa revisitar caso deseje e at√© mesmo retomar para praticar novos conhecimentos.\nProfissionais refer√™ncia na tecnologia Uma das maneis que busco me manter atualizado √© por meio do Twitter, sigo profissionais referencias em diversas tecnologias que me interessa, e isso me possibilita acessar materiais e conte√∫dos que s√£o compartilhados.\nCaso a pessoa que sigo tem canal no Youtube, tamb√©m me inscrevo para consumir seus v√≠deo.\nObviamente, nem todo o conte√∫do eu consumo, fa√ßo um filtro do que me √© interessante no momento e o que posso consumir posteriormente.\nComunidade Posso dizer com total tranquilidade, minha carreira deslanchou ap√≥s me envolver com comunidades.\nE gosto muito de ir em eventos, metups e reuni√µes para conhecer pessoas e trocar experi√™ncia. Tenho grandes amigos que conheci em eventos.\nEu n√£o me prendo √° uma √°rea, vou em eventos de front-end, back-end, design e etc. Gosto de consumir e interagir com conte√∫dos e pessoas diversas. N√£o h√° um evento que fui que minha cabe√ßa n√£o tenha explodido com tanto conte√∫do fant√°stico que fui apresentado, com vis√µes que provavelmente sozinho eu n√£o consumiria.\nNewsletter √â uma excelente maneira para receber uma colet√¢nea de conte√∫dos para serem consumidos, essa pluralidade √© muito bom e desperta para conte√∫dos que n√£o estava no meu radar. E o melhor de tudo √© que todo conte√∫do recebe curadoria do mantenedor, com isso a qualidade do material √© elevada.\nP√≥s primeiros passos Para aprofundar o conhecimento acabo focando na documenta√ß√£o oficial da tecnologia e em profissionais refer√™ncia.\nConforme avan√ßamos no uso da tecnologia, as necessidades se tornam espec√≠ficas e menos gen√©ricas, com isso menos conte√∫do.\nPor isso quando solucionou algo fora da curva ou encontre conte√∫do que resolva um problema espec√≠fico, eu compartilho para disseminar na comunidade.\nCursos N√£o descarto comprar cursos, por√©m isso depende do momento, necessidade e qualidade.\nH√° momentos em que o tempo para aprender alguma tecnologia √© curto, e com isso busco cursos para agilizar todo o processo.\nComo analiso a qualidade do curso? Levo em considera√ß√£o os seguintes pontos.\nA ementa do curso; Assisto a v√≠deo aula demonstrativa; Analiso se o som e v√≠deo s√£o bons; Se o material est√° atualizado; Suporte; O conhecimento do instrutor. Ap√≥s localizar um curso que me interessa busco referencias com amigos e colegas para receber feedback da plataforma, curso ou instrutor.\nCompartilhar Um ponto que gosto de fazer √© gerar conte√∫do no meu blog para refor√ßar o aprendizado e compartilhar com a comunidade. Para escrever o post √© necess√°rio pesquisar, estudar e aprender de forma s√≥lida o conte√∫do que deseja partilhar, pois assim ser√° transmitido com muita clareza e assertividade. Mas, h√° diversas maneiras que podemos compartilhar conte√∫do, sendo um tweet, v√≠deo, podcast, meetups, eventos e etc.\nUm ponto que me atra√≠ em compartilhar √© praticar a comunica√ß√£o, e atingir o resultado de uma comunica√ß√£o simples, clara e que agregue valor na vida de outra pessoa, sendo extremamente gratificante.\nTempo Aprender leva tempo, conhecimento necessita de tempo para que seja digerido, processado e compreendido. Dito isso, n√£o se assuste com o conte√∫do que esteja aprendendo, sua absor√ß√£o e entendimento pode levar um tempo, e julgo ser natural isso.\nSempre revisitar conte√∫dos √© uma boa pr√°tica, pois com o tempo e a bagagem adquirida, pois assim temos um outro olhar e com isso nova compreens√£o.\nAuto Cobran√ßa Esse √© um ponto delicado, pois, temos que encontrar um ponto de equil√≠brio para assim ter uma rotina saud√°vel. Por√©m, temos que ter a disciplina de manter a rotina de estudos e n√£o ficar se sabotando.\nObviamente h√° momentos onde temos que exigir mais performance para atingir um objetivo, mas tratar a si mesmo como m√°quina √© a receita para uma sa√∫de mental problem√°tica. Como mencionado anteriormente, tempo √© um fator que considero importante no processo de aprendizado. Ao mesmo tempo, n√£o fique arrumando mil desculpas para n√£o estudar, tenha sempre em mente seus objetivos.\nDevo estudar apenas o que gosto? N√ÉO! Somos profissionais, e teremos momentos onde aprender uma tecnologia que n√£o est√° ligada aos nossos interesses √© fundamental, e quando isso acontecer √© o melhor momento para por em pr√°tica com mais rigor todos os seus processos de estudos.\nAssim voc√™ atinge o resultado desejado o quanto antes e poder voltar ao que realmente deseja estudar. Por√©m, h√° sempre pontos positivos em estudar, sempre haver√° conte√∫do que podemos utilizar com os outros conhecimentos. E no meu caso pessoas novas que conhe√ßo e que enriquecem a experi√™ncia dos estudos.\nFazer sempre o que quisermos, nem sempre √© o caminho. Temos que fazer o que √© necess√°rio, e com isso obter valor em nosso trabalho.\nPara quem est√° iniciando a carreira buscando seu primeiro emprego ou est√°gio, e que est√° com d√∫vida do qu√™ estudar, sempre recomendo que procure se informar quais tecnologias o mercado ao seu redor est√° mais carente e inicie por elas. Pois, ap√≥s empregado, j√° estabelecido e sem o nervosismo do primeiro emprego, voc√™ ter√° a liberdade de escolher para qual tecnologia deseja aprender.\nN√£o se agarre a uma tecnologia Infelizmente ainda √© comum nos depararmos com discuss√µes sobre ‚Äúa tecnologia X √© muito melhor que a Y‚Äù, eu sou privilegiado pois, quando iniciei minha carreira me cerquei de excelentes profissionais, onde esse tipo de vis√£o n√£o fazia parte dessas pessoas.\nIsso √© √≥timo pois, uma das belezas da nossa profiss√£o √© poder usar, testar e brincar com qualquer tecnologia. Poder aprender qualquer coisa √© simplesmente maravilhoso e claro, com o tempo identificar quais lhe agradam mais e quais lhe agradam menos. N√£o existe linguagem melhor que a outra, existe a ferramenta certa para o problema encontrado.\nVoc√™ n√£o ganha nada entrando nessas discuss√µes, pois todas as linguagens sempre ficam de olhos bem abertos nas outras, para assim ver o que elas tem de melhor e trazer para dentro de casa.\nConsidera√ß√µes finais Todo o conte√∫do compartilhado nesse post √© o resumo das maneiras e rotina que uso para aprender e me manter atualizado, refor√ßo a import√¢ncia do auto conhecimento, se d√™ a liberdade de experimentar maneiras diferentes e com isso construir a melhor pr√°tica para voc√™\nEspero que lhe ajude de alguma forma e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/comunidade/como-estudo-uma-nova-tecnologia/","summary":"Ol√°, tudo bem?!\n√â muito comum as pessoas terem d√∫vida de como aprender uma nova tecnologia, visto mais frequentemente nas pessoas iniciantes.\nCom o tempo eu identifiquei a maneira com o qual melhor me ad√©quo para estudar, sugiro que comece a analisar quais maneiras lhe agrada mais, e que trazem melhores resultados. Sabemos que n√£o existe uma maneira universal (bala de prata) para todos, h√° pessoas que gostam de ler, outras de assistir ao conte√∫do desejado, ouvir podcasts ou √°udio books por exemplo, essa diversidade √© natural e individual de cada pessoa.","title":"Como estudo uma nova tecnologia?"},{"content":"Ol√°, tudo bem!\nO que √© GIT? √â uma ferramente para controle de vers√£o descentralizada criada por Linus Torvalds, que possibilita a gest√£o do versionamento de c√≥digos, alias, n√£o necessariamente apenas c√≥digos, sendo a ferramente mais utilizada para a finalidade a que se prop√µem.\nEntretanto, por que sempre √© frisado que para desenvolver software √© fundamental usar uma ferramenta para controle de vers√£o?\nOs projetos est√£o cada vez mais complexos com equipes mais numerosas e entregas cada vez maiores, onde dezenas ou centenas de pessoas est√£o interagindo com o mesmo reposit√≥rio de c√≥digo mandando corre√ß√µes ou novas funcionalidades.¬†Mesmo para pequenas equipes, ter uma metodologia definida para controle de c√≥digo ir√° poupar muitas dores de cabe√ßa, fazendo com que as¬†entregas sejam realizadas com efici√™ncia e o m√≠nimo de dor de cabe√ßa.¬†O GitHub √© uma das principais plataformas para armazenar reposit√≥rios git, por√©m temos o GitLab e Bitbucket.\nSer√° apresentando os principais comandos utilizados, em uma ordem natural dos seus usos. Por√©m use conforme sua necessidade.\nEstou tomando a premissa que todos os comandos ser√£o executados no terminal, no final do post tem uma lista de ferramentas de interface gr√°fica, por√©m convido que realize inicialmente pelo terminal para melhor compreens√£o de cada comando.\ngit config Duas principais configura√ß√µes que devem ser realizadas s√£o, definir seu nome e e-mail, pois ser√£o os identificadores utilizados pelo git.\nCaso deseje verificar o que est√° configurado, basta executar o comando;\n1 2 //respons√°vel por exibir o nome do usu√°rio git config --global user.name 1 2 //respons√°vel por exibir o e-mail do usu√°rio git config --global user.email Para definir globalmente as informa√ß√µes\n1 2 3 4 5 //Respons√°vel por definir o nome de usu√°rio desejado git config --global user.name \u0026#34;Diego Brocanelli\u0026#34; //Respons√°vel por definir o e-mail do usu√°rio git config --global user.email \u0026#34;meu_email@Zteste.com.br\u0026#34; Para definir especificamente em um reposit√≥rio, acesse a raiz do projeto e execute os seguintes comandos.\n1 2 3 4 5 //Respons√°vel por definir o nome de usu√°rio desejado git config user.name \u0026#34;Diego Brocanelli\u0026#34; //Respons√°vel por definir o e-mail do usu√°rio git config user.email \u0026#34;meu_email@Zteste.com.br\u0026#34; Podemos alterar o editor padr√£o do git, particularmente gosto de usar o vim. Entretanto, √© poss√≠vel utilizar o que preferir.\nCaso deseje aprofundar seus conhecimentos nas configura√ß√µes, recomente acessar a documenta√ß√£o oficial.\n1 git config --global core.editor \u0026#34;vim\u0026#34; git init Para criar um reposit√≥rio, acesse por meio do terminal o diret√≥rio desejado e execute o comando abaixo. Ap√≥s execu√ß√£o ser√° criado um diret√≥rio chamado .git.\n1 2 //Respons√°vel por criar um reposit√≥rio git vazio. git init git clone Podemos ao inv√©s de iniciar um reposit√≥rio em nossa m√°quina realizar o clone (c√≥pia)¬†de um reposit√≥rio existente, como por exemplo um reposit√≥rio do GitHub.¬†1 2 //Respons√°vel por clonar o reposit√≥rio money-to-words que encontra-se no GitHub git clone git@github.com:Diego-Brocanelli/money-to-words.git git status Caso deseje verificar a diferen√ßa entre a vers√£o atual do reposit√≥rio e o √∫ltimo commit¬†da¬†HEAD¬†atual.\n1 2 //Respons√°vel por exibir o status atual do reposit√≥rio. git status git branch Respons√°vel por gerenciar os branches do reposit√≥rio, sendo poss√≠vel visualizar, criar, editar ou apagar branches.\nUtilizar este recurso √© fundamental para manter uma organiza√ß√£o e fluidez no desenvolvimento do projeto, possibilitando que m√∫ltiplas funcionalidades possam ser desenvolvidas paralelamente.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //Respons√°vel por listar todos os branches locais do reposit√≥rio. git branch //Respons√°vel por listar todos os branches remotos do reposit√≥rio. git branch -a //Respons√°vel por criar uma novo branch. git branch myNewBranch //Respons√°vel por apagar uma branch local git branch -d myBranch //Respons√°vel por apagar uma branch remoto git push \u0026lt;nome da origem\u0026gt; \u0026lt;nome do branch\u0026gt; --delete //Respons√°vel por alterar o nome da branch git branch -m \u0026lt;nome antigo\u0026gt; \u0026lt;novo nome do branch\u0026gt; //Respons√°vel por editar a descri√ß√£o do branch git branch meu-branch --edit-description \u0026#34;nova descri√ß√£o do branch\u0026#34; git checkout Para atualizar todos os arquivos no diret√≥rio do projeto ou navegar entre as branches.\n1 2 3 4 5 6 7 8 9 //Respons√°vel por realizar o checkout de um reposit√≥rio, por padr√£o para o branch main no cado do GitHub. git checkout //Respons√°vel por alternar de banch indo para o desejado. git checkout feat_send_mail //Respons√°vel por criar um novo branch e j√° realizar o checkout para ele. //este comando √© o equivalente a executar \u0026#34;git branch \u0026lt;name\u0026gt;; git checkout \u0026lt;name\u0026gt;\u0026#34; git checkout -b novo_branch git add Para adicionar o(s) arquivo(s) ao reposit√≥rio, no caso dos arquivos ainda n√£o terem sido adicionados.\n1 2 3 4 5 6 7 8 9 10 11 //Respons√°vel por adicionar apenas o arquivo desejado git add HomeController.php //Respons√°vel por adicionar apenas o arquivo desejado, dentro de um sub-diret√≥rio git add /path/to/file/HomeController.php //Respons√°vel por adicionar apenas arquivos que corresponda a express√£o regular informada. git add ./*.php //Respons√°vel por adicionar todos os arquivos de uma √∫nica vez. git add . git commit Este √© o comando respons√°vel por guardar todos os arquivos modificados e adicionados com o comando add, onde ser√°¬†gerado um novo commit com seu hash de identifica√ß√£o √∫nico. Sendo poss√≠vel navegar entre os commits desejados, utilizando o comando checkout e o hash¬†desejado\n1 2 //Respons√°vel por realizar o commit com sua mensagem de identifica√ß√£o. git commit -m \u0026#34;Realizado a implementa√ß√£o do m√©todo save() na class HomeController.php\u0026#34; Caso n√£o seja informado o par√¢metro -m ser√° aberto o editor de texto configurado, para que seja inserido a mensagem desejada.¬†git diff Respons√°vel por apresentar as diferen√ßas entre as modifica√ß√µes realizadas versus o √∫ltimo commit.\n1 2 3 4 5 //Respons√°vel por exibir as diferen√ßas realizadas em cada arquivo. git diff //Respons√°vel por apresentar as diferen√ßas entre o diret√≥rio atual e o commit mais recente git diff HEAD git log Respons√°vel por exibir todo o log dos commits do reposit√≥rio.\n1 2 3 4 5 6 7 8 //Respons√°vel por exibir todos os commits realizados no reposit√≥rio git log //Respons√°vel por exibir uma quantidade pr√©-definida de commits, no exemplo abaixo ser√£o 10 git log -n 10 //Respons√°vel por exibir as mensagens de commits dos merges git log --merges git merge Respons√°vel por realizar a jun√ß√£o das altera√ß√µes de um determinado branch externo com o branch¬†atual.\n1 2 3 4 5 //Respons√°vel por juntar o branch especificado com o atual git merge nome_do_branch //Respons√°vel por realizar a jun√ß√£o e sempre gerar um commit ao juntar os branches git merge --no-ff nome_do_branch git pull Respons√°vel por puxar as altera√ß√µes de um reposit√≥rio realizando o merge¬†com o branch desejado.\n1 2 3 4 5 6 //Respons√°vel por atualizar o reposit√≥rio local, juntando as novas altera√ß√µes do branch remoto main. //git pull \u0026lt;remote\u0026gt; \u0026lt;branch\u0026gt; git pull origin main //Respons√°vel por juntar as altera√ß√µes do branch remote e fazer rebase dos commits do branch git pull origin main --rebase git push Respons√°vel por enviar os commits de um branch local para seu correspondente no reposit√≥rio remoto.\n1 2 //Respons√°vel por enviar as modifica√ß√µes realizada localmente para o reposit√≥rio remoto. git push origin main git reset Respons√°vel por desfazer as altera√ß√µes realizadas nos¬†arquivos. Permitindo que seja desfeitos merges,¬†pulls,¬†commits,¬†adds e outros. Este comando demanda muita cautela, para que n√£o sejam perdidos os trabalhos realizados.\n1 2 3 4 5 6 7 8 9 10 11 12 //Respons√°vel por restabelecer as modifica√ß√µes para o √∫ltimo commit realizado. git reset //Respons√°vel por restabelecer as modifica√ß√µes e\u0026lt;span class=\u0026#34;c1\u0026#34;\u0026gt; sobrescreve o projeto atual git reset --hard //Respons√°vel por mover a head do branch atual para o commit especificado. git reset 31f2bb1 //Respons√°vel por restabelecer a head do branch atual para o commit especificado //Removendo todos os commits e altera√ß√µes realizadas posterior ao commit especificado. git reset --hard 56a4cr2 git tag Respons√°vel por gerenciar as tags, que s√£o pontos de identifica√ß√£o de modifica√ß√µes.\nEste recurso √© normalmente utilizado para definir pontos de mudan√ßas em softwares (vers√µes), como por exemplo a tag v1.0.0 que indica a primeira vers√£o do software.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 //Respons√°vel por listar todas as tags git tag //Respons√°vel por criar uma tag anotada. //Onde o par√¢metro -m define a mensagem que desejamos atribuir a tag. //Cado seja informado o par√¢metro -m por√©m, sem mensagem, o git abrir√° o editor padr√£o definido nele para que seja inserido uma mensagem. git tag -a v1.0.0 -m \u0026#34;Primeira vers√£o do software de controle financeiro\u0026#34; //Respons√°vel por exibir as informa√ß√µes sobre a tag git show v2.0 //Respons√°vel por enviar a tag para o reposit√≥rio remoto. git push origin v1.0.0 //Respons√°vel por enviar m√∫ltiplas tags para o reposit√≥rio remoto. git push origin --tags git mv Respons√°vel por modificar o nome ou mover um arquivo.\n1 2 3 4 5 6 7 8 //Respons√°vel por alterar o nome de um arquivo git mv Home.php HomeController.php //Respons√°vel por mover apenas um arquivo. git mv HomeController.php ./new/path/Controller.php //Respons√°vel por for√ßar a altera√ß√£o de nome ou mudan√ßa local. CUIDADO! git mv -f HomeController.php BaseController.php git rebase Respons√°vel por coletar todas as altera√ß√µes realizadas e volta a aplic√°-las em outro branch.¬†1 2 //Respons√°vel por realizar o rebase do branch feat_send_mail para o branch main git rebase main feat_send_mail git grep Este comando nos permite procurar facilmente informa√ß√µes em um reposit√≥rio.\nPodemos realizar configura√ß√µes opcionais:\n1 2 3 4 5 //Respons√°vel por exibir as linhas no resultado da pesquisa. git config --global grep.lineNumber true //Respons√°vel por agrupa os resultados da pesquisa, facilitando a leitura. git config --global alias.g \u0026#34;grep --break --heading --line-number\u0026#34; 1 2 //Respons√°vel por realizar a pesquisa pela palavra \u0026#34;create\u0026#34; em todos os arquivos php git grep \u0026#39;create\u0026#39; -- \u0026#39;*.php\u0026#39; Atualizar fork Como dica b√¥nus, escrevi um post explicando o processo de como atualizar o seu fork do GitHub.\nGit por meio de interface gr√°fica Todos os comandos listados no post tomou como premissa o uso do terminal para sua execu√ß√£o. Particularmente uso o terminal em meu dia a dia, por quest√µes de costume e praticidade, pois o terminal √© uma das principais ferramentas que uso. Entretanto h√° ferramentas de interface gr√°fica que possibilita fazer as mesmas a√ß√µes de forma interativa e visual.¬†Acredito que a decis√£o de usar ‚ÄúA‚Äù ou ‚ÄúB‚Äù vai de cada pessoa, usando o que lhe deixa mais confort√°vel e produtivo. Voc√™ n√£o ser√° melhor ou pior por causa disso. Use a ferramenta que melhor agrega para sua produtividade.\nGit Kraken\nUma excelente ferramente multi plataforma, com uma interface elegante e f√°cil de se usar. √â uma ferramenta paga, por√©m com uma op√ß√£o gratuita.¬†Sourcetree\nFerramente propriet√°ria, fornecida pela Atlassian compat√≠vel com Windows e Mac. Sinceramente meu uso dessa ferramente foi breve e a muito tempo, por√©m com boas recorda√ß√µes.\nCaso queira ver mais op√ß√µes acesse a p√°gina de [Git GUI][https://git-scm.com/downloads/guis/].\nMateriais complementares Felizmente √© f√°cil encontrar materiais sobre git, recomento os seguintes:\nRodrigo Branas Git e GitHub para iniciantes ‚Äì Loiane Groner Entendendo GIT (n√£o √© um tutorial!) ‚Äì Fabio Akita Meu foco com post √© auxiliar todos as pessoas que est√£o iniciando suas carreiras em tecnologia, pois independente da √°rea escolhida o Git √© fundamental.\nEspero que o conte√∫do auxilie em sua jornada de aprendizado, caso tenha alguma d√∫vida convido que deixe nos coment√°rios e com isso podemos fomentar ainda mais conhecimento.\nSucesso em seus projetos!\n","permalink":"https://diegobrocanelli.com.br/git/git-seu-guia-de-sobrevivencia/","summary":"Ol√°, tudo bem!\nO que √© GIT? √â uma ferramente para controle de vers√£o descentralizada criada por Linus Torvalds, que possibilita a gest√£o do versionamento de c√≥digos, alias, n√£o necessariamente apenas c√≥digos, sendo a ferramente mais utilizada para a finalidade a que se prop√µem.\nEntretanto, por que sempre √© frisado que para desenvolver software √© fundamental usar uma ferramenta para controle de vers√£o?\nOs projetos est√£o cada vez mais complexos com equipes mais numerosas e entregas cada vez maiores, onde dezenas ou centenas de pessoas est√£o interagindo com o mesmo reposit√≥rio de c√≥digo mandando corre√ß√µes ou novas funcionalidades.","title":"GIT ‚Äì Seu guia de sobreviv√™ncia"},{"content":"N√≥s, profissionais de TI, sempre estamos praticando e estudando novas tecnologias, e fatalmente voc√™ esbarrou na dificuldade em definir o que fazer para por em pr√°tica o que est√° ou pretende estudar.\nTendo isso em mente, criei o projeto Laborat√≥rio de ideias, focado em evitar desperd√≠cio de tempo e trazer maior foco nos estudos.\nSendo uma lista (issues) contendo diversas ideias para ser posta em pr√°tica.\nPara enviar sua ideia √© bem simples, acesse as issues do projeto, analise se a sua ideia n√£o consta na lista, caso n√£o tenha, prossiga criando sua ideia.\nFacilitamos a cria√ß√£o da issue utilizando um template para orientar na elabora√ß√£o da ideia.\nOutro ponto que √© muito interessante, √© contribuir para issues existentes, enriquecendo seu conte√∫do.\nMeu objetivo com esse projeto √© dispor o maior n√∫mero poss√≠vel de ideias, aproximar pessoas e fornecer ferramentas para auxiliar nos estudos.\nPor favor, ajude contribuindo com ideias e compartilhando nas redes sociais. Fazendo assim, que o maior n√∫mero de pessoas poss√≠veis tenham acesso ao conte√∫do do projeto.\nAcesse o reposit√≥rio do projeto para maiores detalhes sobre os cr√©ditos das ideias, o que n√£o √© recomendado e permitido e a divulga√ß√£o dos contribuidores.\nEspero ter auxiliado, e sucesso nos estudos e projetos.\n","permalink":"https://diegobrocanelli.com.br/open-source/laboratorio-de-ideias/","summary":"N√≥s, profissionais de TI, sempre estamos praticando e estudando novas tecnologias, e fatalmente voc√™ esbarrou na dificuldade em definir o que fazer para por em pr√°tica o que est√° ou pretende estudar.\nTendo isso em mente, criei o projeto Laborat√≥rio de ideias, focado em evitar desperd√≠cio de tempo e trazer maior foco nos estudos.\nSendo uma lista (issues) contendo diversas ideias para ser posta em pr√°tica.\nPara enviar sua ideia √© bem simples, acesse as issues do projeto, analise se a sua ideia n√£o consta na lista, caso n√£o tenha, prossiga criando sua ideia.","title":"Laborat√≥rio de ideias"},{"content":"Ol√°!\nPHP √© uma linguagem fant√°stica com in√∫meros recursos nativos que facilitam e entrega alta performance.\nUma dessas fun√ß√µes √© a str_getcsv, respons√°vel por ler um arquivo csv e converter seus valores em um array.\nVers√µes do PHP suportadas: PHP 5 \u0026gt;= 5.3.0 e PHP 7\nAssinatura da fun√ß√£o: 1 str_getcsv ( string $input [, string $delimiter = \u0026#34;,\u0026#34; [, string $enclosure = \u0026#39;\u0026#34;\u0026#39; [, string $escape = \u0026#34;\\\\\u0026#34; ]]] ) Retorno da fun√ß√£o: array\nPar√¢metros da fun√ß√£o: input: Srting a ser analisada. delimiter: Define o delimitador (somente um caractere). enclosure: Define o enclosure (somente um caractere). escape: Define o caractere de escape (no m√°ximo um caractere). O valor padr√£o √© a barra invertida () Uma string vazia (‚Äú‚Äù) desabilita o mecanismo de escape. Exemplo de uso: Para seguir com o exemplo, √© necess√°rio criar um arquivo chamado example.csv na raiz do projeto e inserir o conte√∫do:\n1 2 3 4 line 01 cell 01,line 01 cell 02,line 01 cell 03 line 02 cell 01,line 02 cell 02,line 02 cell 03 line 03 cell 01,line 03 cell 02,line 03 cell 03 line 04 cell 01,line 04 cell 02,line 04 cell 03 Ap√≥s cria√ß√£o do arquivo csv, deve-se criar o arquivo index.php com o seguinte conte√∫do.\n1 2 3 4 5 6 7 8 9 \u0026lt;?php // carregamos o arquivo csv $csv_file = file(\u0026#39;example.csv\u0026#39;); // mapeamos todo o conte√∫do para nossa vari√°vel $array_csv = array_map(\u0026#39;str_getcsv\u0026#39;, $csv_file); // exibimos o conte√∫do da nossa vari√°vel var_dump($array_csv); Para executar o scrtipt, ser√° utilizar o servidor embutido para isso abra o terminal na raiz do projeto e digite o seguinte comando.\n1 php -S localhost:8080 index.php Acesse o navegador de sua prefer√™ncia e insira a url localhost:8080 e como resultado teremos a seguinte exibi√ß√£o**.**\nComo podemos observar, de forma simples obtivemos todo o conte√∫do do arquivo csv em um array, por√©m devo salientar cautela pois deve-se tomar cuidado com a quantidade de informa√ß√µes a serem armazenadas no array, onde deve ser levado em considera√ß√£o as configura√ß√µes do PHP e o hardware da m√°quina ao qual o mesmo encontra-se, para que assim n√£o acarrete em um erro de limite de mem√≥ria ou informa√ß√µes no array.\nEspero que tenham apreciado e que o conte√∫do do post venha ser¬†√∫til em seus projetos.\nAt√© a pr√≥xima e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/php/funcoes-nativas-php-str_getcsv/","summary":"Ol√°!\nPHP √© uma linguagem fant√°stica com in√∫meros recursos nativos que facilitam e entrega alta performance.\nUma dessas fun√ß√µes √© a str_getcsv, respons√°vel por ler um arquivo csv e converter seus valores em um array.\nVers√µes do PHP suportadas: PHP 5 \u0026gt;= 5.3.0 e PHP 7\nAssinatura da fun√ß√£o: 1 str_getcsv ( string $input [, string $delimiter = \u0026#34;,\u0026#34; [, string $enclosure = \u0026#39;\u0026#34;\u0026#39; [, string $escape = \u0026#34;\\\\\u0026#34; ]]] ) Retorno da fun√ß√£o: array","title":"Fun√ß√µes nativas PHP ‚Äì str_getcsv"},{"content":"Ol√°, tudo bem!\nPara facilitar o processo de configura√ß√£o de uma esta√ß√£o de trabalho, criei um projeto open soucer chamado workstation_configuration, respons√°vel por realiza todo o trabalho pesado de download, instala√ß√£o e configura√ß√µes necess√°rias para deixar redondo a nova esta√ß√£o que utilizar√° para desenvolvimento web.\nRequisitos Distribui√ß√£o Linux baseado em Debian. Como funciona Consiste em scripts shell que fazem todo o¬†trabalho de instala√ß√£o e configura√ß√£o conforme informa√ß√µes contidas no arquivo setup.sh.\nPodendo ser instalados ferramentas, editores de c√≥digo, linguagens de programa√ß√£o entre outras possibilidades, visando facilitar o processo de setup de uma nova esta√ß√£o de trabalho.\nComo utilizar Para fazer uso √© bem simples, basta seguir as etapas a seguir.\nAcesse o reposit√≥rio do projeto workstation configuration, realize o download em formato zip. Entre no diret√≥rio onde foi realizado o download e descompacte o arquivo. Acesse o arquivo setup.sh e determine o que deseja que seja instalado, basta marcar como true o que deseja ou false o que n√£o deseja instalar. Em seguida abra o terminal na raiz do projeto. Execute o comando ./install.sh. Ser√° requerido a senha do sudo. Basta aguardar a finaliza√ß√£o do processo. Vale salientar que o tempo para a conclus√£o do processo depender√° da quantidade de itens a serem instalados e a velocidade de conex√£o com a internet.\nTodas as etapas ser√£o exibidas no terminal para que possam ser acompanhadas.\nResultados esperados Ap√≥s finalizado os processos ser√° questionado se deseja reiniciar o sistema, ficando a seu crit√©rio realizar.\n√â gerado um arquivo de log no diret√≥rio log com o nome installation_log.txt, nesse arquivo √© armazenado as informa√ß√µes base dos processos, contendo a lista de softwares que foram instalados marcados com INSTALLED ou NOT INSTALLED.\nO Software pode ser marcado como n√£o instalado por diversos motivos, por isso √© listado para melhor identifica√ß√£o.\nAbaixo temos imagens do resultado aplicado no Ubuntu 19.10.\nConclus√£o Como podemos observar o intuito do software √© facilitar a instala√ß√£o e configura√ß√£o de um ambiente de desenvolvimento web, maximizando o tempo de setup.\nEspero que tenham apreciado, por favor n√£o deixe de comentar o que achou da ferramenta e o que ela lhe foi √∫til.\nSucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/desenvolvimento/configuracao-automatica-de-estacao-de-trabalho/","summary":"Ol√°, tudo bem!\nPara facilitar o processo de configura√ß√£o de uma esta√ß√£o de trabalho, criei um projeto open soucer chamado workstation_configuration, respons√°vel por realiza todo o trabalho pesado de download, instala√ß√£o e configura√ß√µes necess√°rias para deixar redondo a nova esta√ß√£o que utilizar√° para desenvolvimento web.\nRequisitos Distribui√ß√£o Linux baseado em Debian. Como funciona Consiste em scripts shell que fazem todo o¬†trabalho de instala√ß√£o e configura√ß√£o conforme informa√ß√µes contidas no arquivo setup.","title":"Configura√ß√£o autom√°tica de esta√ß√£o de trabalho"},{"content":"Ol√°, tudo bem?!\nNesta edi√ß√£o de n√∫mero 28 do hhbr tivemos uma mega palestra sobre Vue.js com o palestrante William Correa, que explanou em detalhes diversos pontos bacanas da renderiza√ß√£o com Vue.\nDados da palestra Tema: ‚ÄúRenderizando Componentes com Vue.js‚Äù Palestrante: William Correa Twitter: @wilcorrea Github: @wilcorrea Links Comentado https://vuejs.org/ https://br.vuejs.org/ https://template-explorer.vuejs.org ","permalink":"https://diegobrocanelli.com.br/video/hhbr-28-renderizando-componentes-com-vue-js/","summary":"Ol√°, tudo bem?!\nNesta edi√ß√£o de n√∫mero 28 do hhbr tivemos uma mega palestra sobre Vue.js com o palestrante William Correa, que explanou em detalhes diversos pontos bacanas da renderiza√ß√£o com Vue.\nDados da palestra Tema: ‚ÄúRenderizando Componentes com Vue.js‚Äù Palestrante: William Correa Twitter: @wilcorrea Github: @wilcorrea Links Comentado https://vuejs.org/ https://br.vuejs.org/ https://template-explorer.vuejs.org ","title":"hhbr: 28 ‚Äì Renderizando componentes com Vue.js (v√≠deo)"},{"content":"Ol√°, Tudo bem?! Nesta edi√ß√£o 27 do hhbr, tive a oportunidade de bater um papo com Henrique um dev fant√°stico que est√° iniciando seu caminho com a linguagem PHP. Com isso, aproveitamos a oportunidade para refatorar o projeto que o Henrique desenvolveu do grupo de estudos php-poo do Training Center,¬†um grupo focado em fomentar conte√∫do e conhecimento sobre a linguagem PHP e POO. Espero que apreciem o conte√∫do!\nDados da palestra Tema: ‚ÄúRefactoring calculadora de IMC‚Äù Palestrante: Diego Brocanelli Site: http://diegobrocanelli.com.br Twitter: @diego_b2 GitHub: @Diego-Brocanelli Participante: Henrique GitHub: @Henriquefcs Links Comentados http://php.net/ https://phpunit.de/ https://getcomposer.org/ ","permalink":"https://diegobrocanelli.com.br/video/hhbr-27-refactoring-calculadora-de-imc/","summary":"Ol√°, Tudo bem?! Nesta edi√ß√£o 27 do hhbr, tive a oportunidade de bater um papo com Henrique um dev fant√°stico que est√° iniciando seu caminho com a linguagem PHP. Com isso, aproveitamos a oportunidade para refatorar o projeto que o Henrique desenvolveu do grupo de estudos php-poo do Training Center,¬†um grupo focado em fomentar conte√∫do e conhecimento sobre a linguagem PHP e POO. Espero que apreciem o conte√∫do!\nDados da palestra Tema: ‚ÄúRefactoring calculadora de IMC‚Äù Palestrante: Diego Brocanelli Site: http://diegobrocanelli.","title":"hhbr: 27 ‚Äì Refactoring calculadora de IMC (v√≠deo)"},{"content":"Ol√°!\nNesta 26¬∫ edi√ß√£o da comunidade [hhbr][1]¬†tivemos um super bate papo sobre¬†‚ÄúEcossistema Javascript‚Äù com o grande Marco Bruno do CollabCode.\nPudemos conversar sobre passado, presente e futuro da linguagem. Falamos sobre frameworks, tc39, como podemos aprender as novas funcionalidades, tiramos muitas d√∫vidas e muito mais, aperta o play e aproveite o conte√∫do que est√° muito bacana.\nDados da palestra Tema: ‚ÄúEcossistema javascript‚Äù Palestrante: Marco Bruno Twitter: @marcobrunobr Twitter: @collabcodetech Facebook: collabcode Youtube: collabcode Site: medium.com/collabcode GitHub: @MarcoBrunoBR e @CollabCodeTech Links Comentados https://github.com/tc39/proposals https://blog.da2k.com.br/curso-javascript-ninja/ https://prettier.io/ https://code.visualstudio.com/ https://hyper.is/ https://mochajs.org/ https://github.com/casperjs/casperjs https://developer.mozilla.org/pt-BR/ https://git-scm.com/ https://github.com/tc39 https://nodejs.org/en/ https://www.npmjs.com/ https://modernizr.com/ https://yarnpkg.com/pt-BR/ https://www.mozilla.org/pt-BR/firefox/new/ https://kangax.github.io/compat-table/esnext/ https://test262.report/ https://app.impulso.network http://dofrontaoend.collabcode.training/ https://www.saraiva.com.br/abundancia-o-futuro-e-melhor-do-que-voce-imagina-4706194.html ","permalink":"https://diegobrocanelli.com.br/video/hhbr-26-ecossistema-javascript/","summary":"Ol√°!\nNesta 26¬∫ edi√ß√£o da comunidade [hhbr][1]¬†tivemos um super bate papo sobre¬†‚ÄúEcossistema Javascript‚Äù com o grande Marco Bruno do CollabCode.\nPudemos conversar sobre passado, presente e futuro da linguagem. Falamos sobre frameworks, tc39, como podemos aprender as novas funcionalidades, tiramos muitas d√∫vidas e muito mais, aperta o play e aproveite o conte√∫do que est√° muito bacana.\nDados da palestra Tema: ‚ÄúEcossistema javascript‚Äù Palestrante: Marco Bruno Twitter: @marcobrunobr Twitter: @collabcodetech Facebook: collabcode Youtube: collabcode Site: medium.","title":"hhbr: 26 ‚Äì Ecossistema javascript (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta 25¬∫ edi√ß√£o da comunidade hhbr¬†tivemos uma incr√≠vel palestra sobre¬†‚ÄúIntrodu√ß√£o a CQRS e Event Sourcing‚Äù com o monstro da programa√ß√£o Marcelo Santos, abordando de forma pr√°tica todas as etapas para implementa√ß√£o e compreens√£o do CQRS e Event Source em sua aplica√ß√£o, tivemos exemplos de c√≥digo e muitas perguntas respondidas na rodada de perguntas.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúIntrodu√ß√£o a CQRS e Event Sourcing‚Äù Palestrante: Marcelo Santos Twitter: @marcelsud Site: http://marcelsud.com GitHub: @marcelsud Comunidade: http://phpdojeitocerto.tumblr.com Slides: https://www.slideshare.net/marcelsudphp Links Comentados https://leanpub.com/ddd-in-php http://ddd-cqrs-es.slack.com http://verraes.net/#blog ","permalink":"https://diegobrocanelli.com.br/php/hhbr-25-introducao-a-cqrs-e-event-sourcing/","summary":"Ol√°, tudo bem?!\nNesta 25¬∫ edi√ß√£o da comunidade hhbr¬†tivemos uma incr√≠vel palestra sobre¬†‚ÄúIntrodu√ß√£o a CQRS e Event Sourcing‚Äù com o monstro da programa√ß√£o Marcelo Santos, abordando de forma pr√°tica todas as etapas para implementa√ß√£o e compreens√£o do CQRS e Event Source em sua aplica√ß√£o, tivemos exemplos de c√≥digo e muitas perguntas respondidas na rodada de perguntas.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúIntrodu√ß√£o a CQRS e Event Sourcing‚Äù Palestrante: Marcelo Santos Twitter: @marcelsud Site: http://marcelsud.","title":"hhbr: 25 ‚Äì Introdu√ß√£o a CQRS e Event Sourcing (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta 24¬∫ edi√ß√£o da comunidade hhbr¬†tivemos a oportunidade de bater um papo sobre¬†‚ÄúUm bate papo sobre TI‚Äù com o fant√°stico Roberto Achar e comigo, um super bate papo sobre TI seus pontos positivos, negativos, mercado etc e com a participa√ß√£o incr√≠vel da comunidade com muitas perguntas bacanas.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúUm bate papo sobre TI‚Äù Palestrante: Roberto Achar Site: https://showmethecode.com.br Email: robertoachar@showmethecode.com.br Twitter: https://twitter.com/robertoachar LinkedIn: https://br.linkedin.com/in/roberto-achar Facebook: https://www.facebook.com/showmethecode YouTube: https://www.youtube.com/user/robertoachar GitHub: https://github.com/robertoachar Perfil iMasters: https://imasters.com.br/perfil/robertoachar ","permalink":"https://diegobrocanelli.com.br/video/hhbr-24-um-bate-papo-sobre-ti/","summary":"Ol√°, tudo bem?!\nNesta 24¬∫ edi√ß√£o da comunidade hhbr¬†tivemos a oportunidade de bater um papo sobre¬†‚ÄúUm bate papo sobre TI‚Äù com o fant√°stico Roberto Achar e comigo, um super bate papo sobre TI seus pontos positivos, negativos, mercado etc e com a participa√ß√£o incr√≠vel da comunidade com muitas perguntas bacanas.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúUm bate papo sobre TI‚Äù Palestrante: Roberto Achar Site: https://showmethecode.","title":"hhbr: 24 ‚Äì Um bate papo sobre TI (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta 23¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúComo aprender a aprender‚Äù com a fant√°stica Carol Soare, um tema muito em alta na comunidade de TI, pois a pr√°tica do estudo √© uma constante no dia a dia do profissional de TI, aumentar a produtividade e a qualidade far√° total diferen√ßa em nossas carreiras.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúComo aprender a aprender‚Äù Palestrante: Carol Soares Twitter: https://twitter.com/carolcode GitHub: https://github.com/carolcodes\u0026gt; Comunidades: https://www.codamos.club/ e https://www.meetup.com/pt-BR/html-sp Links Mencionados https://discordapp.com/ https://appear.in/ https://zoom.us/ ","permalink":"https://diegobrocanelli.com.br/hhbr/hhbr-23-como-aprender-a-aprender/","summary":"Ol√°, tudo bem?!\nNesta 23¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúComo aprender a aprender‚Äù com a fant√°stica Carol Soare, um tema muito em alta na comunidade de TI, pois a pr√°tica do estudo √© uma constante no dia a dia do profissional de TI, aumentar a produtividade e a qualidade far√° total diferen√ßa em nossas carreiras.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!","title":"hhbr: 23 ‚Äì Como aprender a aprender (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta 22¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúTrabalho Remoto na Vida Real‚Äù com o grande Davi Marcondes Moreira, um tema muito em alta na comunidade de TI, por chamar muito a aten√ß√£o por um estilo que proporciona maior qualidade de vida e produtividade.\nForam abordados os pontos positivos, negativos e muitas dicas para poder se preparar e iniciar sua jornada com o trabalho remoto. Ficou curioso? Ent√£o aperte o play e aprecie mais esta edi√ß√£o do hhbr.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúTrabalho Remoto na Vida Real‚Äù Palestrante: Davi Marcondes Moreira Twitter: https://twitter.com/devdrops Site: http://devdrops.me GitHub: https://github.com/devdrops Comunidade: http://phpdojeitocerto.tumblr.com/ Slides: https://speakerdeck.com/devdrops/trabalho-remoto-na-vida-real Links Mencionados https://discordapp.com/ https://appear.in/ https://zoom.us/ https://medium.com/@emtudo/voc%C3%AA-n%C3%A3o-precisa-aceitar-esta-vaga-de-emprego-c331f43fdf71 Outras edi√ß√µes com o palestrante hhbr : 05 ‚Äì Refatora√ß√£o hhbr : 15 ‚Äì SPL e Estruturas de Dados ","permalink":"https://diegobrocanelli.com.br/php/hhbr-22-trabalho-remoto-na-vida-real/","summary":"Ol√°, tudo bem?!\nNesta 22¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúTrabalho Remoto na Vida Real‚Äù com o grande Davi Marcondes Moreira, um tema muito em alta na comunidade de TI, por chamar muito a aten√ß√£o por um estilo que proporciona maior qualidade de vida e produtividade.\nForam abordados os pontos positivos, negativos e muitas dicas para poder se preparar e iniciar sua jornada com o trabalho remoto.","title":"hhbr: 22 ‚Äì Trabalho Remoto na Vida Real"},{"content":"Ol√°, tudo bem?!\nNesta 20¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar um fant√°stico bate papo sobre faculdade na √°rea da TI.\nDebatemos sobre os pontos positivos, negativos, oportunidades, desafios e respondemos perguntas dos participantes, para que assim de alguma maneira podermos auxiliar quem est√° na d√∫vida sobre fazer ou n√£o uma faculdade.\nDados da palestra Participantes: Vin√≠cius Martins Site: http://viniciusmsantos.github.io Twitter: @vinimarsan Github: @viniciusmsantos Caio Andrade de Sousa Twitter: @CaioAndCafu Linkedin: https://www.linkedin.com/in/caio-andrade-de-sousa-bb206190/ ","permalink":"https://diegobrocanelli.com.br/video/hhbr-20-faculdade-na-area-de-ti/","summary":"Ol√°, tudo bem?!\nNesta 20¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar um fant√°stico bate papo sobre faculdade na √°rea da TI.\nDebatemos sobre os pontos positivos, negativos, oportunidades, desafios e respondemos perguntas dos participantes, para que assim de alguma maneira podermos auxiliar quem est√° na d√∫vida sobre fazer ou n√£o uma faculdade.\nDados da palestra Participantes: Vin√≠cius Martins Site: http://viniciusmsantos.github.io Twitter: @vinimarsan Github: @viniciusmsantos Caio Andrade de Sousa Twitter: @CaioAndCafu Linkedin: https://www.","title":"hhbr: 20 ‚Äì Faculdade na √°rea de TI (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta 19¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúSoft skills para devs‚Äù ministrado pelo grande Leonam Pereira Dias.\nUm conte√∫do fant√°stico que nos faz refletir sobre muito de nossa postura, a ado√ß√£o das dicas e t√©cnicas que o palestrante nos brindou na palestra com certeza agrega muito valor tento em nossa vida pessoal quanto na profissional.\nDados da palestra Tema: ‚ÄúSoft skills para devs‚Äù Palestrante: Leonam Pereira Dias Email: leonam.pd@gmail.com Twitter: @leonampdias LinkedIn: https://www.linkedin.com/in/leonamdias GitHub: @leonampd ","permalink":"https://diegobrocanelli.com.br/video/hhbr-19-soft-skills-para-devs-video/","summary":"Ol√°, tudo bem?!\nNesta 19¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúSoft skills para devs‚Äù ministrado pelo grande Leonam Pereira Dias.\nUm conte√∫do fant√°stico que nos faz refletir sobre muito de nossa postura, a ado√ß√£o das dicas e t√©cnicas que o palestrante nos brindou na palestra com certeza agrega muito valor tento em nossa vida pessoal quanto na profissional.\nDados da palestra Tema: ‚ÄúSoft skills para devs‚Äù Palestrante: Leonam Pereira Dias Email: leonam.","title":"hhbr: 19 ‚Äì Soft skills para devs (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta 18¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúDocker + Kubernetes + Minikube‚Äù ministrado pelo grande Roberto Achar.\nPalestra com conte√∫do pr√°tico e √≥timos exemplos e dicas somados a grande did√°tica do palestrante que consegue prender nossa aten√ß√£o do in√≠cio ao fim da Palestra. Sem mais delongas, abaixo temos o v√≠deo com todo do conte√∫do.\nDados da palestra Tema: ‚ÄúDocker + Kubernetes + Minikube‚Äù Palestrante: Roberto Achar Site: https://showmethecode.com.br Email: robertoachar@showmethecode.com.br Twitter: https://twitter.com/robertoachar LinkedIn: https://www.linkedin.com/in/roberto-achar/ Facebook: https://www.facebook.com/showmethecode YouTube: https://www.youtube.com/user/robertoachar GitHub: https://github.com/robertoachar Perfil iMasters: https://imasters.com.br/perfil/robertoachar/ Links Mencionados https://www.docker.com/ https://kubernetes.io/ https://kubernetes.io/docs/getting-started-guides/minikube/ https://github.com/robertoachar/docker-python-flask https://github.com/robertoachar/docker-go https://github.com/robertoachar/docker-react https://github.com/robertoachar/docker-angular https://github.com/robertoachar/docker-python https://github.com/robertoachar/docker-express-mongodb https://github.com/robertoachar/docker-react-webpack https://github.com/robertoachar/docker-node https://github.com/robertoachar/docker-express https://github.com/robertoachar/kubernetes-express https://github.com/robertoachar/docker-mean https://github.com/robertoachar/docker-rabbitmq-node ","permalink":"https://diegobrocanelli.com.br/docker/hhbr-18-docker-kubernetes-minikube/","summary":"Ol√°, tudo bem?!\nNesta 18¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúDocker + Kubernetes + Minikube‚Äù ministrado pelo grande Roberto Achar.\nPalestra com conte√∫do pr√°tico e √≥timos exemplos e dicas somados a grande did√°tica do palestrante que consegue prender nossa aten√ß√£o do in√≠cio ao fim da Palestra. Sem mais delongas, abaixo temos o v√≠deo com todo do conte√∫do.\nDados da palestra Tema: ‚ÄúDocker + Kubernetes + Minikube‚Äù Palestrante: Roberto Achar Site: https://showmethecode.","title":"hhbr: 18 ‚Äì Docker + Kubernetes + Minikube (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta 17¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúPrimeiros passos com integra√ß√£o cont√≠nua‚Äù ministrado pelo grande Iury Alves.\nDemonstrado na pr√°tica as principais t√©cnicas e conceitos para iniciar com a integra√ß√£o cont√≠nua, abordando ferramentas que facilitam nossa vida. Sem mais delongas, segue abaixo a grava√ß√£o da palestra.\nDados da palestra Tema: ‚ÄúPrimeiros passos com integra√ß√£o cont√≠nua‚Äù Palestrante: Iury Alves Site: https://medium.com/@iurysouza/ Twitter: https://twitter.com/yorix20 GitHub: https://github.com/IuryAlves Links Comentados\nhttps://jenkins-ci.org/ https://www.infoq.com/br/presentations/integracao-discreta-como-melhorar ","permalink":"https://diegobrocanelli.com.br/php/hhbr-17-primeiros-passos-com-integracao-continua/","summary":"Ol√°, tudo bem?!\nNesta 17¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúPrimeiros passos com integra√ß√£o cont√≠nua‚Äù ministrado pelo grande Iury Alves.\nDemonstrado na pr√°tica as principais t√©cnicas e conceitos para iniciar com a integra√ß√£o cont√≠nua, abordando ferramentas que facilitam nossa vida. Sem mais delongas, segue abaixo a grava√ß√£o da palestra.\nDados da palestra Tema: ‚ÄúPrimeiros passos com integra√ß√£o cont√≠nua‚Äù Palestrante: Iury Alves Site: https://medium.com/@iurysouza/ Twitter: https://twitter.com/yorix20 GitHub: https://github.","title":"hhbr: 17 ‚Äì Primeiros passos com integra√ß√£o cont√≠nua (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nNesta d√©cima sexta edi√ß√£o da comunidade hhbr trazemos uma grande palestra com o tema ‚ÄúContribuindo com o PHP e o PHP TestFest 2017‚Äù, ministrado pelo grande Rogerio Prado de Jesus.\nDados da palestra Tema: ‚ÄúContribuindo com o PHP e o PHP TestFest 2017‚Äù Palestrante: Rogerio Prado de Jesus Site: https://rogeriopradoj.com/ Twitter: https://twitter.com/RogerioPradoJ GitHub: https://github.com/RogerioPradoJ Comunidade: https://t.me/PHPTestFestBrasil Link dos slides: https://speakerdeck.com/rogeriopradoj/contribuindo-com-o-php-e-o-php-testfest-2017-hhbr-hackers-house-br-number-16 Links Comentados https://phptestfest.org/\u0026gt; https://3v4l.org/ http://pensandonaweb.com.br/ https://externals.io/ https://www.youtube.com/channel/UCZDace9Yohbdbncpj9Wf_mQ https://qa.php.net/phpt_details.php http://gcov.php.net/PHP_HEAD/lcov_html https://chat.stackoverflow.com/rooms/11/php https://www.youtube.com/watch?v=DyDCz1qYQGU\u0026amp;feature=youtu.be ","permalink":"https://diegobrocanelli.com.br/php/hhbr-16-contribuindo-com-o-php-e-o-php-testfest-2017/","summary":"Ol√°, tudo bem?!\nNesta d√©cima sexta edi√ß√£o da comunidade hhbr trazemos uma grande palestra com o tema ‚ÄúContribuindo com o PHP e o PHP TestFest 2017‚Äù, ministrado pelo grande Rogerio Prado de Jesus.\nDados da palestra Tema: ‚ÄúContribuindo com o PHP e o PHP TestFest 2017‚Äù Palestrante: Rogerio Prado de Jesus Site: https://rogeriopradoj.com/ Twitter: https://twitter.com/RogerioPradoJ GitHub: https://github.com/RogerioPradoJ Comunidade: https://t.me/PHPTestFestBrasil Link dos slides: https://speakerdeck.com/rogeriopradoj/contribuindo-com-o-php-e-o-php-testfest-2017-hhbr-hackers-house-br-number-16 Links Comentados https://phptestfest.org/\u0026gt; https://3v4l.org/ http://pensandonaweb.com.br/ https://externals.io/ https://www.youtube.com/channel/UCZDace9Yohbdbncpj9Wf_mQ https://qa.","title":"hhbr: 16 ‚Äì Contribuindo com o PHP e o PHP TestFest 2017 (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nEm nossa primeira edi√ß√£o da comunidade hhbr trazemos uma grande palestra com o tema ‚ÄúDocker para iniciantes‚Äù, ministrado pelo grande Wellington F. Silva.\nFoi abordado os principais conceitos b√°sicos, com muitos exemplos de uso pr√°tico. Espero que apreceiem o conte√∫do.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúDocker para iniciantes‚Äù Palestrante: Wellington F. Silva Site:¬†http://wfsilva.com Twitter: https://twitter.com/_wsilva LinkedIn: https://linkedin.com/in/wfsilva Facebook: https://facebook.com/silva.tom Link dos slides: https://speakerdeck.com/wsilva/comecando-com-o-docker-hackerhousebr ","permalink":"https://diegobrocanelli.com.br/php/hhbr-01-docker-para-iniciantes/","summary":"Ol√°, tudo bem?!\nEm nossa primeira edi√ß√£o da comunidade hhbr trazemos uma grande palestra com o tema ‚ÄúDocker para iniciantes‚Äù, ministrado pelo grande Wellington F. Silva.\nFoi abordado os principais conceitos b√°sicos, com muitos exemplos de uso pr√°tico. Espero que apreceiem o conte√∫do.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúDocker para iniciantes‚Äù Palestrante: Wellington F. Silva Site:¬†http://wfsilva.com Twitter: https://twitter.com/_wsilva LinkedIn: https://linkedin.","title":"hhbr : 01 ‚Äì Docker para iniciantes"},{"content":"Ol√°, tudo bem?!\nCom previs√£o de lan√ßamento para dezembro de 2019, o PHP 7.4 est√° com novidades muito legais e que temos que estar antenados e acompanhando essa evolu√ß√£o, separei abaixo algumas novas funcionalidades que acredito serem bem bacanas.\nPreloading rfc Preloading √© uma adi√ß√£o incr√≠vel ao core do PHP, o que pode resultar em uma melhora em seu desempenho.\nAtualmente os arquivos PHP s√£o carregados e recompilados a cada requisi√ß√£o.\nCom o preloading o servidor carrega os arquivos PHP na mem√≥ria durante a inicializa√ß√£o, disponibilizando para toda nova requisi√ß√£o.\nPor√©m, temos um custo nessa estrutura, toda vez que for realizado deploy √© necess√°rio que o servidor seja reiniciado, para que assim o preloading fa√ßa novamente o processo de inclus√£o dos arquivos na mem√≥ria.\nTyped properties rfc Inclus√£o de tipos nos atributos da classe.\n1 2 3 4 5 6 class People { public string $name; public int $age; } Gostei muito dessa funcionalidade, muitos podem torcer o nariz ou at√© mesmo voltar com os mesmos argumentos que o PHP est√° ficando muito igual ao Java, por√©m acredito que faz parte do processo de maturidade da linguagem, o PHP evoluiu muito nesses √∫ltimos anos estando em um n√≠vel enterprise, sendo assim √© natural a ado√ß√£o de funcionalidades como est√°.\nNull coalescing assignment operator rfc M√©todo atual:\n1 $data[\u0026#39;date\u0026#39;] = $data[\u0026#39;date\u0026#39;] ?? new DateTime(); M√©todo proposto:\n1 $data[\u0026#39;date\u0026#39;] ??= new DateTime(); Particularmente acredito ser muito interessante, melhorando a legibilidade do c√≥digo, simplificando sua a√ß√£o.\nEssas foram algumas novidades que vem no PHP 7.4, obviamente temos uma lista maior de ado√ß√µes, deprecia√ß√µes e modifica√ß√µes, por√©m como mencionado separei umas que chamaram minha aten√ß√£o.\nEspero que tenham apreciado e que estejam t√£o empolgados quanto eu para essa nova vers√£o.\nGrande abra√ßo e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/php/novidades-do-php-7-4/","summary":"Ol√°, tudo bem?!\nCom previs√£o de lan√ßamento para dezembro de 2019, o PHP 7.4 est√° com novidades muito legais e que temos que estar antenados e acompanhando essa evolu√ß√£o, separei abaixo algumas novas funcionalidades que acredito serem bem bacanas.\nPreloading rfc Preloading √© uma adi√ß√£o incr√≠vel ao core do PHP, o que pode resultar em uma melhora em seu desempenho.\nAtualmente os arquivos PHP s√£o carregados e recompilados a cada requisi√ß√£o.","title":"Novidades do PHP 7.4"},{"content":"Ol√°, tudo bem?!\nA comunidade de TI √© maravilhosa, muitos profissionais trocando conhecimento e informa√ß√µes, comumente tamb√©m utilizamos dessa rede para pedir aux√≠lio em algum problema que estamos enfrentando e a comunidade √© maravilhosa nesse ponto, a colabora√ß√£o √© fant√°stica.\nEntretanto √© comum depararmos com um grande problema pessoas pedindo ajuda, por√©m n√£o sabem como fazer ou pedindo de forma muito ruim, para exemplificar situa√ß√µes em que eu j√° presenciei e vivencie.\nPrincipais pontos negativos encontrados Textos muito gen√©ricos. N√£o mencionar o que j√° fez para tentar resolver o problema. N√£o inserir c√≥digo fonte. Para esse item eu entendo pois, como o c√≥digo √© de propriedade da empresa, em muitos casos n√£o se pode fazer isso, por√©m pode-se gerar um case isolando as regras de neg√≥cio. A pessoa que pede ajuda, faz transparecer que √© de obriga√ß√£o da comunidade resolver o mesmo. Cobran√ßa pela resolu√ß√£o do problema. Falta de respeito. Tal ponto nem preciso explanar √© b√°sico, respeito √© algo que j√° devemos ter para com todos sem exce√ß√£o. Os itens acima s√£o apenas alguns dos pontos que deparamos convivendo nas comunidades. Com isso gostaria de expor minha opini√£o antes da sugest√£o de como pedir ajuda.\nComunidade n√£o √© obrigado a ajudar, ajudam porque gostam e querem fazer. Quando se exp√µem um problema sem explicar em detalhes, fica praticamente imposs√≠vel resolver, pois quem est√° de fora tem que imaginar o cen√°rio em que levou ao erro. N√£o fique cobrando a resolu√ß√£o lembre-se, quem est√° lhe ajudando tem sua vida, rotina, trabalho, fam√≠lia e amigos. A pessoa ao qual est√° dedicando um tempo da vida dela em lhe ajudar, onde a mesma n√£o √© obrigado a fazer, est√° deixando de fazer outras coisas como ficar com a fam√≠lia e amigos para lhe ajudar e isso √© um gesto muito bacana. Sugest√£o para pedir ajuda Abaixo segue um ‚Äútemplate‚Äù para auxiliar na hora de pedir ajuda, acredito que seguindo ir√° aumentar e muito sua chance de sucesso em obter ajuda.\nApresente-se\nInicie se apresentando, seu nome, e o que est√° buscando. Detalhe o problema que est√° enfrentando\nDetalhe todo o problema que est√° enfrentando, coloque a tecnologia que est√° usando, sua vers√£o, framework, arquitetura, sistema operacional. Nesse ponto, pode-se inserir c√≥digo, prints, v√≠deo, link para gist e todo material visual dispon√≠vel para auxiliar no detalhamento do problema. Todas essas informa√ß√µes s√£o importantes para auxiliar na ambienta√ß√£o do problema. Explique suas tentativas para resolu√ß√£o.\nDetalhe como pesquisou a resolu√ß√£o do problema, coloque os links que encontrou por√©m n√£o obteve sucesso. Isso¬†demonstra que voc√™ dedicou tempo para a resolu√ß√£o e n√£o terceirizou para a comunidade. Agradecimento\nAgrade√ßa pela aten√ß√£o de todos que est√£o na comunidade, √© importante a cordialidade. Considera√ß√µes finais Os pontos mencionados acima √© uma maneira de pedir ajuda em qualquer meio GitHub, Slack, Forum etc.\nEspero ter ajudado, n√£o √© foco deste post dar li√ß√£o de moral, apenas ser uma abordagem direta para auxiliar e melhorar a comunica√ß√£o dentro das comunidades.\nComunica√ß√£o √© uma ferramenta muito poderosa, por√©m se utilizada de forma inapropriada se tornar√° um grande problema. Aprenda a se comunicar, a tecnologia cresce em ritmo alucinante, com a ajuda das comunidades acompanhar esse ritmo √© melhorado.\nTem alguma sugest√£o, por favor mande um coment√°rio e vamos dialogar mais sobre o tema e com isso gerar cada vez mais conte√∫do.\nObrigado pela aten√ß√£o e sucesso em seus projetos!\n","permalink":"https://diegobrocanelli.com.br/comunidade/como-pedir-ajuda-em-comunidade-de-ti/","summary":"Ol√°, tudo bem?!\nA comunidade de TI √© maravilhosa, muitos profissionais trocando conhecimento e informa√ß√µes, comumente tamb√©m utilizamos dessa rede para pedir aux√≠lio em algum problema que estamos enfrentando e a comunidade √© maravilhosa nesse ponto, a colabora√ß√£o √© fant√°stica.\nEntretanto √© comum depararmos com um grande problema pessoas pedindo ajuda, por√©m n√£o sabem como fazer ou pedindo de forma muito ruim, para exemplificar situa√ß√µes em que eu j√° presenciei e vivencie.","title":"Como pedir ajuda?"},{"content":"Ol√°, tubo bem?!\nFrequentemente vemos o uso de vari√°veis locais realizarem opera√ß√µes e/ou a√ß√µes.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php $basePrice = $this-\u0026gt;quantity * $this-\u0026gt;itemPrice; if ($basePrice \u0026gt; 1000){ return $basePrice * 0.95; } else{ return $basePrice * 0.98; } Por que devemos refatorar? Abrir√° portas para utilizarmos o Extract Methods. Podemos reutilizar a mesma express√£o em outras partes do sistema. Facilitamos as modifica√ß√µes/implementa√ß√µes de regras de neg√≥cio. Solu√ß√£o para o problema! Devemos extrair a l√≥gica respons√°vel por realizar a opera√ß√£o e limpamos o processo de execu√ß√£o do c√≥digo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;?php if ( $this-\u0026gt;basePrice() \u0026gt; 1000 ){ return $this-\u0026gt;basePrice() * 0.95; } return $this-\u0026gt;basePrice() * 0.98; ... public function basePrice() { return $this-\u0026gt;quantity * $this-\u0026gt;itemPrice; } Benef√≠cios! C√≥digos mais leg√≠veis. C√≥digos mais enxutos. Manuten√≠veis. Reutiliz√°veis. Espero que tenha apreciado o conte√∫do, ele foi inspirado no documento¬†Refactogin Guru.\nConvido a interagir nos coment√°rios e a compartilhar com seus amigos.\nObrigado pela aten√ß√£o e sucesso em seus projetos!\n","permalink":"https://diegobrocanelli.com.br/php/refactoring-replace-temp-with-query/","summary":"Ol√°, tubo bem?!\nFrequentemente vemos o uso de vari√°veis locais realizarem opera√ß√µes e/ou a√ß√µes.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php $basePrice = $this-\u0026gt;quantity * $this-\u0026gt;itemPrice; if ($basePrice \u0026gt; 1000){ return $basePrice * 0.95; } else{ return $basePrice * 0.98; } Por que devemos refatorar? Abrir√° portas para utilizarmos o Extract Methods. Podemos reutilizar a mesma express√£o em outras partes do sistema. Facilitamos as modifica√ß√µes/implementa√ß√µes de regras de neg√≥cio.","title":"Refactoring ‚Äì Replace temp with query"},{"content":"Ol√°, tudo bem?!\nCriar aplica√ß√µes reutiliz√°veis, manuten√≠veis, de f√°cil compreens√£o pelos membros do time √© o desafio do dia a dia.\nSem sombra de d√∫vidas √© o correto e devemos seguir esta linha de pensamento, pois assim temos uma aplica√ß√£o saud√°vel, facilitando novas implementa√ß√µes.\nO Laravel √© um grande framework, onde vem crescendo cada vez mais ao longo dos anos, em minhas pesquisas e estudos encontrei uma maneira de construir aplica√ß√µes de forma modular no framework, e irei compartilhar com voc√™s os resultados dos estudos.\nPara melhor aproveitamento do material a seguir recomenda-se o conhecimento b√°sico sobre Laravel e composer.\nDepend√™ncias Para construirmos nosso exemplo s√£o necess√°rios:\nLaravel 5.6 Laravel-Modules 3 Composer Instala√ß√£o Devemos iniciar instalando o Laravel, execute o seguinte comando pelo terminal:\n1 composer create-project --prefer-dist laravel/laravel modulos-com-laravel Devemos aguardar at√© que todo o processo seja finalizado, em seguida devemos acessar o projeto criado, execute o seguinte comando:\n1 cd modulos-com-laravel Ap√≥s acessar o projeto devemos instalar o componente laravel-modules, para isso execute o seguinte comando:\n1 composer require nwidart/laravel-modules Aguarde o processo de instala√ß√£o do pacote finalizar.\nConfigura√ß√µes √â necess√°rio configurar o provider e alias¬†(apenas para vers√µes inferiores ao Laravel 5.5) do pacote que instalamos para isso acesse o arquivo config/app.php.\nLocalize o array de configura√ß√µes dos providers e inclua a seguinte informa√ß√£o no final do array:\n1 Nwidart\\Modules\\LaravelModulesServiceProvider::class, Em seguida configure o alias, esse array √© declarado logo ap√≥s o provider, inclua a seguinte instru√ß√£o.\n1 \u0026#39;Module\u0026#39; =\u0026gt; Nwidart\\Modules\\Facades\\Modules::class, Com as devidas configura√ß√µes realizadas, devemos publicar o provider do componente, para isso execute o seguinte comando na raiz do projeto por meio do terminal, sendo:\n1 php artisan vendor:publish --provider=\u0026#34;Nwidart\\Modules\\LaravelModulesServiceProvider\u0026#34; Devemos agora registrar a namespace de origem ao nosso diret√≥rio modules que ser√° criado, para isso acesse o arquivo composer.json na raiz do projeto e inclua o seguinte trecho no autoload:\n1 2 3 4 5 6 7 8 9 10 \u0026#34;autoload\u0026#34;: { \u0026#34;classmap\u0026#34;: [ \u0026#34;database/seeds\u0026#34;, \u0026#34;database/factories\u0026#34; ], \u0026#34;psr-4\u0026#34;: { \u0026#34;App\\\\\u0026#34;: \u0026#34;app/\u0026#34;, \u0026#34;Modules\\\\\u0026#34;: \u0026#34;Modules/\u0026#34; // Inclua est√° linha no arquivo, lembre-se da virgula na linha acima. } }, Para finalizar devemos executar o dump do autoload do composer, para que o mesmo registre os m√≥dulos, para¬†isso execute o seguinte comando:\n1 composer dumpautoload Devemos configura o acesso ao banco de dados, para isso crie um banco de dados com o nome laravel_modules, em seguida acesse o arquivo .env localizado na raiz do nosso projeto e configure a se√ß√£o para acesso ao MySQL, abaixo podemos ver um exemplo.\n1 2 3 4 5 6 DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=laravel_modules DB_USERNAME=root DB_PASSWORD=root Criando o modulo Products Para criar o m√≥dulo, devemos executar o seguinte comando no terminal:\n1 php artisan module:make Products Ap√≥s finalizar o processo, ser√° criado o diret√≥rio Modules na raiz do nosso projeto, diret√≥rio ao qual √© respons√°vel por armazenar todos os m√≥dulos que forem criados na aplica√ß√£o. Dentro dele encontraremos o diret√≥rio Products com a seguinte estrutura:\nA estrutura n√£o por acaso √© similar a atual estrutura do Laravel, feito para melhor compreens√£o e correla√ß√£o dos diret√≥rios e suas fun√ß√µes.\nCriando Model Devemos criar nossa model que ir√° representar a tabela products, execute o seguinte comando:\n1 php artisan module:make-model Products Products Ap√≥s finaliza√ß√£o, o arquivo encontra-se em Modules\\Products\\Entities.\nNo atributo fillable devemos inserir dois par√¢metros, title e description.\n1 protected $fillable = [\u0026#39;title\u0026#39;, \u0026#39;description\u0026#39;]; Vamos inserir tamb√©m¬†o atributo table.\n1 protected $table = \u0026#39;products\u0026#39;; Criando Migrations Para criar a migration, referente a tabela products devemos executar o seguinte comando:\n1 php artisan module:make-migration products Products O comando acima se assemelha ao nativo do Laravel, por√©m √© necess√°rio informar o nome do m√≥dulo no final determinando o local de cria√ß√£o da migration.\nAp√≥s execu√ß√£o podemos acessar o diret√≥rio modules\\Products\\Database\\Migrations para visualizar o arquivo.\nDemos agora criar a estrutura da tabela no m√©todo up, sendo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 /** * Run the migrations. * * @return void */ public function up() { Schema::create(\u0026#39;products\u0026#39;, function (Blueprint $table) { $table-\u0026gt;;increments(\u0026#39;id\u0026#39;); $table-\u0026gt;;string(\u0026#39;title\u0026#39;); $table-\u0026gt;;string(\u0026#39;description\u0026#39;); $table-\u0026gt;;timestamps(); }); } Com isso criamos uma estrutura simples para a tabela products, por√©m suficiente para nosso exemplo.\nPara executar nossa migration, execute o seguinte comando:\n1 php artisan module:migrate Ap√≥s finaliza√ß√£o nossa tabela products ser√° criada.\nCriando Seed Podemos tamb√©m popular previamente nossa tabela de produtos, pois quando um novo integrante do projeto for configurar o projeto ele j√° ter√° tudo funcionando, sem ter que ficar criando registros para usar o sistema, para criar o seeder devemos executar o seguinte comando:\n1 php artisan module:make-seed products Products Nossa seed encontra-se no diret√≥rio Modules\\Database\\Seeders\\ProductsDatabaseSeeder.\nCom o arquivo criado basta seguir os mesmos processo de um a aplica√ß√£o laravel para inser√ß√£o dos dados no seeder.\nConsidera√ß√µes finais Como podemos observar o recurso √© robusto,¬†de f√°cil compreens√£o, sua curva de aprendizagem √© baixa e facilita a modulariza√ß√£o das aplica√ß√µes Laravel.\nEspero que tenham apreciado o conte√∫do, convido a todos que deixem um coment√°rio e que compartilhe o conte√∫do com seus colegas.\nGrande abra√ßo e sucesso em seus projetos!\n","permalink":"https://diegobrocanelli.com.br/php/laravel-module/","summary":"Ol√°, tudo bem?!\nCriar aplica√ß√µes reutiliz√°veis, manuten√≠veis, de f√°cil compreens√£o pelos membros do time √© o desafio do dia a dia.\nSem sombra de d√∫vidas √© o correto e devemos seguir esta linha de pensamento, pois assim temos uma aplica√ß√£o saud√°vel, facilitando novas implementa√ß√µes.\nO Laravel √© um grande framework, onde vem crescendo cada vez mais ao longo dos anos, em minhas pesquisas e estudos encontrei uma maneira de construir aplica√ß√µes de forma modular no framework, e irei compartilhar com voc√™s os resultados dos estudos.","title":"Modularizando Sua Aplica√ß√£o Laravel"},{"content":"Ol√°, tudo bem?!\nVoc√™ j√° deve ter esbarrado ou feito manuten√ß√£o em c√≥digos que o m√©todo tem muitas a√ß√µes, como bem sabemos isso √© muito ruim, pois aumenta a complexidade da leitura, manuten√ß√£o, acoplamento e dificulta seu reuso. Abaixo podemos observar um exemplo:\n1 2 3 4 5 6 7 8 9 \u0026lt;?php public function printOwing() { $this-\u0026gt;printBanner(); //print details print(\u0026#34;name: \u0026#34; . $this-\u0026gt;name); print(\u0026#34;amount \u0026#34; . $this-\u0026gt;getOutstanding()); Por que refatorar? Quanto mais linhas um m√©todo tiver, mais dif√≠cil ser√° localizar bugs, prestar manuten√ß√£o, implementar novas funcionalidades e reutilizar a solu√ß√£o.\nExtrair m√©todos √© um pontap√© inicial em muitas outras abordagens de refatora√ß√£o.\nSolu√ß√£o para o problema! Podemos extrair essa complexidade para m√©todos isolados, para isso devemos analisar as a√ß√µes do m√©todo e decompor em pequenos m√©todos auxiliares, como podemos observar abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php public function printOwing() { $this-\u0026gt;printBanner(); $this-\u0026gt;printDetails(); } public function printDetails() { print(\u0026#34;name: \u0026#34; . $this-\u0026gt;name); print(\u0026#34;amount \u0026#34; . $this-\u0026gt;getOutstanding()); } Benef√≠cios! C√≥digo mais leg√≠vel! Menos duplica√ß√£o de c√≥digo. C√≥digo manutenivel. Facilita novas implementa√ß√µes. Possibilita o reuso dos recursos. Espero que tenha apreciado o conte√∫do, ele foi inspirado no documento do¬†Refactogin Guru.\nConvido a interagir nos coment√°rios e a compartilhar com seus amigos.\nObrigado pela aten√ß√£o e sucesso em seus projetos!\n","permalink":"https://diegobrocanelli.com.br/php/refactoring-extract-method/","summary":"Ol√°, tudo bem?!\nVoc√™ j√° deve ter esbarrado ou feito manuten√ß√£o em c√≥digos que o m√©todo tem muitas a√ß√µes, como bem sabemos isso √© muito ruim, pois aumenta a complexidade da leitura, manuten√ß√£o, acoplamento e dificulta seu reuso. Abaixo podemos observar um exemplo:\n1 2 3 4 5 6 7 8 9 \u0026lt;?php public function printOwing() { $this-\u0026gt;printBanner(); //print details print(\u0026#34;name: \u0026#34; . $this-\u0026gt;name); print(\u0026#34;amount \u0026#34; . $this-\u0026gt;getOutstanding()); Por que refatorar?","title":"Refactoring ‚Äì Extract Method"},{"content":"Ol√°, tubo bem?!\nRefatorar √© um processo que faz parte do dia a dia do desenvolvedor, existem diversos motivos e t√©cnicas para isso.\nUm problema comum que deparamos s√£o condicionais complexas, dificultando sua legibilidade e a manuten√ß√£o, abaixo podemos observar um exemplo.\n1 2 3 4 5 6 7 8 9 \u0026lt;?php if ( ($platform-\u0026gt;toUpperCase()-\u0026gt;indexOf(\u0026#34;MAC\u0026#34;) \u0026gt; -1) \u0026amp;\u0026amp; ($browser-\u0026gt;toUpperCase()-\u0026gt;indexOf(\u0026#34;IE\u0026#34;) \u0026gt; -1) \u0026amp;\u0026amp; $this-\u0026gt;wasInitialized() \u0026amp;\u0026amp; $this-\u0026gt;resize \u0026gt; 0 ) { // implementa√ß√£o da regra de neg√≥cio } Por que devemos refatorar? Eliminamos longas linhas com multipartes, fragmentando as partes e diminuindo a complexidade na leitura do processo como um todo. Trazendo como benef√≠cio um c√≥digo mais leg√≠vel!\nCuidado com o processo de extra√ß√£o, pois devemos manter limpo e simples os nomes das vari√°veis, deixando claro a finalidade da mesma, para que n√£o gere mais d√∫vidas na cabe√ßa do desenvolvedor.\nSolu√ß√£o para o problema! Uma das solu√ß√µes que podemos aplicar para melhorar a legibilidade √© a extra√ß√£o para vari√°veis, como observado abaixo.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php $isMacOs = $platform-\u0026gt;toUpperCase()-\u0026gt;indexOf(\u0026#34;MAC\u0026#34;) \u0026gt; -1; $isIE = $browser-\u0026gt;toUpperCase()-\u0026gt;indexOf(\u0026#34;IE\u0026#34;) \u0026gt; -1; $wasResized = $this-\u0026gt;resize \u0026gt; 0; $wasInitialized = $this-\u0026gt;wasInitialized() if ( $isMacOs \u0026amp;\u0026amp; $isIE \u0026amp;\u0026amp; $wasInitialized \u0026amp;\u0026amp; $wasResized) { // implementa√ß√£o da regra de neg√≥cio } Benef√≠cios! Maior legibilidade do c√≥digo. Organiza√ß√£o. Espero que tenha apreciado o conte√∫do, ele foi inspirado no documento Refactogin Guru.\nConvido a interagir nos coment√°rios e a compartilhar com seus amigos.\nObrigado pela aten√ß√£o e sucesso em seus projetos!\n","permalink":"https://diegobrocanelli.com.br/engenharia-de-software/refactoring-extract-variable/","summary":"Ol√°, tubo bem?!\nRefatorar √© um processo que faz parte do dia a dia do desenvolvedor, existem diversos motivos e t√©cnicas para isso.\nUm problema comum que deparamos s√£o condicionais complexas, dificultando sua legibilidade e a manuten√ß√£o, abaixo podemos observar um exemplo.\n1 2 3 4 5 6 7 8 9 \u0026lt;?php if ( ($platform-\u0026gt;toUpperCase()-\u0026gt;indexOf(\u0026#34;MAC\u0026#34;) \u0026gt; -1) \u0026amp;\u0026amp; ($browser-\u0026gt;toUpperCase()-\u0026gt;indexOf(\u0026#34;IE\u0026#34;) \u0026gt; -1) \u0026amp;\u0026amp; $this-\u0026gt;wasInitialized() \u0026amp;\u0026amp; $this-\u0026gt;resize \u0026gt; 0 ) { // implementa√ß√£o da regra de neg√≥cio } Por que devemos refatorar?","title":"Refactoring ‚Äì Extract Variable"},{"content":"Ol√°, tudo bem?!\nNesta 21¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúProjeto Statik Stack‚Äù com o grande Roberto Achar, apresentando seu projeto e comunidade que visa fornecer started kits para iniciantes darem um ponta p√© inicial em seus projetos.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúProjeto Statik Stack‚Äù Palestrante: Roberto Achar Site: https://showmethecode.com.br Email: robertoachar@showmethecode.com.br Twitter: https://twitter.com/robertoachar LinkedIn: https://br.linkedin.com/in/roberto-achar Facebook: https://www.facebook.com/showmethecode YouTube: https://www.youtube.com/user/robertoachar GitHub: https://github.com/robertoachar Perfil iMasters: https://imasters.com.br/perfil/robertoachar Links Mencionados https://discordapp.com/ https://appear.in/ https://zoom.us/ https://medium.com/@emtudo/voc%C3%AA-n%C3%A3o-precisa-aceitar-esta-vaga-de-emprego-c331f43fdf71 Outras edi√ß√µes com o palestrante hhbr : 05 ‚Äì Refatora√ß√£o hhbr : 15 ‚Äì SPL e Estruturas de Dados ","permalink":"https://diegobrocanelli.com.br/php/hhbr-21-projeto-statik-stack/","summary":"Ol√°, tudo bem?!\nNesta 21¬∫ edi√ß√£o da comunidade hhbr pudemos apreciar uma fant√°stica palestra sobre ‚ÄúProjeto Statik Stack‚Äù com o grande Roberto Achar, apresentando seu projeto e comunidade que visa fornecer started kits para iniciantes darem um ponta p√© inicial em seus projetos.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúProjeto Statik Stack‚Äù Palestrante: Roberto Achar Site: https://showmethecode.com.br Email: robertoachar@showmethecode.com.br Twitter: https://twitter.com/robertoachar LinkedIn: https://br.","title":"hhbr: 21 ‚Äì Projeto Statik Stack"},{"content":"Ol√°, tudo bem?!\nO problema Calcular a diferen√ßa entre duas datas no MySQL √© algo muito simples e f√°cil de se aplicar, recentemente tive a necessidade de realizar esta task, por√©m excluindo do total de dias os finais de semana. Ap√≥s algumas horas de pesquisa e testes, cheguei ao resultado desejado e irei compartilhar com voc√™s.\nResolu√ß√£o e demonstra√ß√£o pr√°tica Para aplica√ß√£o pr√°tica devemos inicialmente criar nosso banco de dados teste. Para a estrutura da tabela utilize o modelo abaixo.\n1 2 3 4 5 6 CREATE TABLE `produtos` ( `id` int(11) NOT NULL AUTO_INCREMENT, `data_cadastro` datetime NOT NULL, `data_retirada` datetime NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci; Devemos agora realizar a inser√ß√£o de dados para testes.\n1 2 3 4 INSERT INTO `produtos` VALUES (1,\u0026#39;2018-06-05 00:00:00\u0026#39;,\u0026#39;2018-06-11 00:00:00\u0026#39;), (2,\u0026#39;2018-06-01 00:00:00\u0026#39;,\u0026#39;2018-06-30 00:00:00\u0026#39;), (3,\u0026#39;2018-04-01 00:00:00\u0026#39;,\u0026#39;2018-06-30 00:00:00\u0026#39;); Com o ambiente de testes configurado, podemos agora executar a query para busca de dados.¬†Inicialmente faremos a pesquisa da forma tradicional com o datediff. Execute o seguinte comando MySQL.\n1 2 3 4 5 SELECT data_cadastro, data_retirada, DATEDIFF(data_retirada, data_cadastro) as total_dias FROM produtos; Como resultados devemos obter:\ndata_cadastro data_retirada total_dias 2018-06-05 00:00:00 2018-06-11 00:00:00 6 2018-06-01 00:00:00 2018-06-30 00:00:00 29 2018-04-01 00:00:00 2018-06-30 00:00:00 90 Como podemos observar, foi realizado a totaliza√ß√£o do intervalo de datas como previmos.\nDevemos agora realizar a cria√ß√£o de uma function para se encarregar do c√°lculo que desejamos, abaixo segue os c√≥digos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 CREATE FUNCTION GetDiasUteis(date2 DATETIME, date1 DATETIME) RETURNS INTEGER DETERMINISTIC BEGIN DECLARE dt1 DATETIME; DECLARE i INT; DECLARE wd INT UNSIGNED; SET i = 0; SET wd = DAYOFWEEK(date1); SET dt1 = date1; IF DATEDIFF(date2, dt1) \u0026gt; 0 THEN WHILE DATEDIFF(date2, dt1) \u0026gt; 0 DO SET dt1:=DATE_ADD(dt1, INTERVAL 1 DAY); SET wd:=DAYOFWEEK(dt1); CASE WHEN wd in(2,3,4,5,6) THEN SET i:=i+1; ELSE SET i:=i; END CASE; END WHILE; ELSEIF DATEDIFF(date2, dt1) \u0026lt; 0 THEN WHILE DATEDIFF(date2, dt1) \u0026lt; 0 DO SET dt1:=DATE_SUB(dt1, INTERVAL 1 DAY); SET wd:=DAYOFWEEK(dt1); CASE WHEN wd in(2,3,4,5,6) THEN SET i:=i-1; ELSE SET i:=i; END CASE; END WHILE; END IF; RETURN i; END; Observa√ß√£o: O c√≥digo da fun√ß√£o n√£o √© de minha autoria, foi com base em pesquisa, por√©m decidi escrever o post algum tempo depois, com isso n√£o localizei a fonte de origem. Caso encontre irei atualizar o post.\nPodemos agora atualizar nossa query SQL, fazendo uso da fun√ß√£o criada.\n1 2 3 4 5 6 SELECT data_cadastro, data_retirada, DATEDIFF(data_retirada, data_cadastro) as total_dias, GetDiasUteis(data_retirada, data_cadastro) `dias_uteis` FROM produtos; Como resultado devemos obter:\ndata_cadastro data_retirada total_dias dias_uteis 2018-06-05 00:00:00 2018-06-11 00:00:00 6 4 2018-06-01 00:00:00 2018-06-30 00:00:00 29 20 2018-04-01 00:00:00 2018-06-30 00:00:00 90 64 Tendo a fun√ß√£o como base, podemos futuramente criar uma tabela com as datas de feriados ou dias a serem exclu√≠dos e subtrair dos dias √∫teis, bastando apenas atualizar a fun√ß√£o. Deixe um coment√°rio caso tenha interesse que eu escreva um post sobre o assunto.\nConsidera√ß√µes finais Fazendo uso de uma fun√ß√£o pudemos obter o resultado desejado, facilitando seu uso e centralizando a a√ß√£o.\nAgradecimentos Espero que tenham apreciado esta dica, pois levei um bom tempinho para chegar nessa solu√ß√£o, al√©m de tudo espero que seja √∫til em seu dia a dia.\nAgrade√ßo pela sua aten√ß√£o e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/sql/calculando-intervalo-entre-datas-excluindo-os-finais-de-semana-mysql/","summary":"Ol√°, tudo bem?!\nO problema Calcular a diferen√ßa entre duas datas no MySQL √© algo muito simples e f√°cil de se aplicar, recentemente tive a necessidade de realizar esta task, por√©m excluindo do total de dias os finais de semana. Ap√≥s algumas horas de pesquisa e testes, cheguei ao resultado desejado e irei compartilhar com voc√™s.\nResolu√ß√£o e demonstra√ß√£o pr√°tica Para aplica√ß√£o pr√°tica devemos inicialmente criar nosso banco de dados teste.","title":"Calculando intervalo entre datas excluindo os finais de semana ‚Äì MySQL"},{"content":"Ol√°, tudo bem?!\nO grande Roberto Achar apresentou sua ideia de projeto open source chamado Statik Stack.\nO projeto tem como meta criar estruturas base para o start do desenvolvimento de projetos, fornecendo uma estrutura base, padronizada, de f√°cil compreens√£o e uso para que todos que desejam iniciar um projeto, por√©m sem saber por onde dar o primeiro passo ou at√© mesmo para profissionais mais experientes que desejam iniciar um projeto j√° com toda a base implementada.\nRolou uma live no Youtube onde o Roberto explanou e tirou todas as d√∫vidas da comunidade a cerca do projeto, recomendo muito que assista, por meio desse v√≠deo voc√™ ter√° no√ß√£o da grandeza dos objetivos do projeto.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nInicialmente focaremos no desenvolvimento de stack‚Äôs para tecnologias front end, entretanto temos planos para abranger mais tecnologias incluindo back end.\nAbro o convite a todos que desejem participar do projeto para que contribuam, pode ser com c√≥digo, documenta√ß√£o, testes, compartilhando com a comunidade, todo aux√≠lio ser√° muito bem vindo.\nLeiam o c√≥digo de conduta da comunidade, para que entendam os valores pregados e seguidos por todos que contribuem com o projeto.\nN√£o precisa ser veterano para poder contribuir, toda ajuda √© muito bem vinda, front end, back end, designer e etc. Toda opini√£o¬†√© levada em considera√ß√£o e respeitada, pois nosso foco √© o crescimento do projeto, onde todos podem contribuir e aprender durante o percorrer do caminho.\nEspero que tenham ficado empolgados como fiquei quando fui convidado a participar do projeto, pois o mesmo vem para resolver um dos maiores problemas do desenvolvimento que √© iniciar um projeto de forma s√≥lida, robusta e padronizada.\nDesde j√° agrade√ßo a aten√ß√£o de todos, e conto com a colabora√ß√£o de voc√™s.\nGrande abra√ßo e sucesso nos projetos.\n","permalink":"https://diegobrocanelli.com.br/open-source/projeto-statik-stack/","summary":"Ol√°, tudo bem?!\nO grande Roberto Achar apresentou sua ideia de projeto open source chamado Statik Stack.\nO projeto tem como meta criar estruturas base para o start do desenvolvimento de projetos, fornecendo uma estrutura base, padronizada, de f√°cil compreens√£o e uso para que todos que desejam iniciar um projeto, por√©m sem saber por onde dar o primeiro passo ou at√© mesmo para profissionais mais experientes que desejam iniciar um projeto j√° com toda a base implementada.","title":"hhbr: 21 ‚Äì Projeto Statik Stack"},{"content":"Ol√°, tudo bem?!\nArmazenar dados html ou at√© mesmo manipular √© importante, pois devemos nos preocupar com a seguran√ßa e tamb√©m com a integridade dos dados.\nH√° momentos que desejamos armazenar a string HTML, um exemplo √© quando temos um textarea que contem a estrutura similar ao word.\nDevemos tratar os dados para serem armazenados ou exibidos, para nossa felicidade o PHP traz um recurso nativo para nos auxiliar, a fun√ß√£o htmlentities, onde ir√° converter os caracteres aplic√°veis em entidades HTML, vamos para um exemplo pr√°tico:\n1 $html = \u0026#39;\u0026lt;a href=\u0026#34;https://www.diegobrocanelli.com.br/\u0026#34;\u0026gt;Link para acesso\u0026lt;/a\u0026gt;\u0026#39;; Acima dispomos uma string simples, representando um link de acesso ao site, tendo posse da string devemos utilizar a fun√ß√£o para o tratamento da string.\n1 2 3 4 5 6 7 8 // print da string sem tratamento echo $html.PHP_EOL; // tratamento da string. $htmlEntities = htmlentities($html).PHP_EOL; // print da string, j√° com tratamento. echo $htmlEntities; Para executar o c√≥digo, basta acessar via terminal o local do arquivo e executar com o PHP, por exemplo:\n1 php htmlentities.php O resultado esperado √© similar o demonstrado abaixo.\n1 2 3 4 // string pura sem tratamento. \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Link access\u0026lt;/a\u0026gt; // string, ap√≥s uso da fun√ß√£o para tratamento. \u0026lt;a href=\u0026amp;quot;#\u0026amp;quot;\u0026gt;Link access\u0026lt;/a\u0026gt; Como pudemos observar, foi extremamente simples realizarmos o tratamento da string, ap√≥s isso podemos seguir nosso caminho da aplica√ß√£o com a valida√ß√£o e sanitiza√ß√£o dos dados para posterior armazenamento em um banco de dados por exemplo.\nEspero que tenham apreciado e que o conte√∫do agregue valor em seu dia a dia.\nGrande abra√ßo e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/php/tratamento-de-html-dentro-de-uma-string-com-php/","summary":"Ol√°, tudo bem?!\nArmazenar dados html ou at√© mesmo manipular √© importante, pois devemos nos preocupar com a seguran√ßa e tamb√©m com a integridade dos dados.\nH√° momentos que desejamos armazenar a string HTML, um exemplo √© quando temos um textarea que contem a estrutura similar ao word.\nDevemos tratar os dados para serem armazenados ou exibidos, para nossa felicidade o PHP traz um recurso nativo para nos auxiliar, a fun√ß√£o htmlentities, onde ir√° converter os caracteres aplic√°veis em entidades HTML, vamos para um exemplo pr√°tico:","title":"Tratamento de HTML dentro de uma string com PHP"},{"content":"Ol√°, tudo bem?!\nRealizar uma requisi√ß√£o AJAX n√£o precisa ser uma coisa de outro mundo, muito pelo contr√°rio √© algo bem comum e amplamente utilizado.\nNormalmente √© realizado a implementa√ß√£o fazendo uso de alguma biblioteca Javascript.\nNeste post irei demonstrar de forma simples uma requisi√ß√£o AJAX para a API SWAPI (Star Wars API) e consumir seu retorno na p√°gina HTML.\nCrie um arquivo HTML com o nome ajax-javascript.html, dentro do mesmo insira a seguinte estrutura de c√≥digo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;pt-BR\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Requisi√ß√£o AJAX\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;input class=\u0026#39;input-id\u0026#39; type=\u0026#34;text\u0026#34; name=\u0026#39;id\u0026#39; placeholder=\u0026#34;1-15\u0026#34;\u0026gt; \u0026lt;button onclick=\u0026#34;sendRequest()\u0026#34;\u0026gt;Send Request\u0026lt;/button\u0026gt; \u0026lt;p id=\u0026#39;error-container\u0026#39; style=\u0026#39;color:red;\u0026#39;\u0026gt; \u0026lt;p\u0026gt; Name: \u0026lt;span id=\u0026#39;name\u0026#39;\u0026gt; \u0026lt;p\u0026gt; Gravity: \u0026lt;span id=\u0026#39;gravity\u0026#39;\u0026gt; \u0026lt;p\u0026gt; Population: \u0026lt;span id=\u0026#39;population\u0026#39;\u0026gt; \u0026lt;p\u0026gt; Rotation Period: \u0026lt;span id=\u0026#39;rotation-period\u0026#39;\u0026gt; \u0026lt;script\u0026gt; // os c√≥digos javascript ser√£o inser√≠dos aqui! \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Dentro da tag script devemos criar a fun√ß√£o sendRequest(), onde ser√° executado com o click do bot√£o.\n1 2 3 function sendRequest(){ // implementa√ß√£o aqui dentro. } Devemos capturar o input, pois por meio dele iremos obter o valor num√©rico para pesquisa na API.\n1 var id = document.querySelector(\u0026#39;.input-id\u0026#39;); Daremos in√≠cio a request AJAX, e para isso ser√° utilizado a API XMLHttpRequest.\n1 2 // uso da API para fornecer acesso a realizar requests ao servidor var xhttp = new XMLHttpRequest(); Agora temos acesso ao m√©todo onreadystatechange,¬†ele √© executado sempre que o atributo readyState for alterado, lembrando que durante a request AJAX ele passa por diversos states.\n1 2 3 xhttp.onreadystatechange = function() { // implementa√ß√£o do tratamento da request. } Devemos validar agora o status code e o state de retorno para poder executar as a√ß√µes somente ap√≥s ‚ÄúOK‚Äù.\n1 2 3 4 5 // readyState = 4 - referente a request concluida // status = 200 - referente ao status code http \u0026#39;OK\u0026#39; if (this.readyState == 4 \u0026amp;\u0026amp; this.status == 200) { // implementa√ß√µes do tratamento aqui. } Para coletar a response √© simples, veja abaixo a implementa√ß√£o.\n1 2 3 // respons√°vel por coletar a resposta. var response = this.responseText; var result = JSON.parse(response); O parse do json √© necess√°rio para que possamos manipular o retorno, devemos agora inserir o resultado em seus respectivos lugares no¬†HTML.\n1 2 3 4 5 // preenchimento do resultado no HTML document.getElementById(\u0026#34;name\u0026#34;).innerHTML = result.name; document.getElementById(\u0026#34;gravity\u0026#34;).innerHTML = parseInt(result.gravity); document.getElementById(\u0026#34;population\u0026#34;).innerHTML = result.population; document.getElementById(\u0026#34;rotation-period\u0026#34;).innerHTML = result.rotation_period; Em seguida devemos configurar o tipo de request e seu envio, para isso devemos inserir os c√≥digo a seguir fora da estrutura xhttp.onreadystatechange.\n1 2 3 4 5 6 // URL da API var url = \u0026#39;https://swapi.co/api/planets/\u0026#39;+id.value; // configura√ß√£o para request xhttp.open(\u0026#34;GET\u0026#34;, url, true); // envio da request xhttp.send(); Preparamos a URL da API, abrimos a request informando que ser√° utilizado o m√©todo GET, por fim disparamos a a√ß√£o.\nSomente com as implementa√ß√µes acima nosso sistema encontra-se pronto para uso, abra o arquivo HTML em seu navegador de prefer√™ncia e teste o resultado obtido.\nPodemos aplicar um requinte de eleg√¢ncia e tratar quando a request n√£o for ‚ÄúOK‚Äù, ou seja, n√£o retorna o esperado.\nDevemos implementar dentro da estrutura xhttp.onreadystatechange ao final de sua implementa√ß√£o a seguinte estrutura de c√≥digo.\n1 2 3 4 // Respons√°vel por tratar o retorno que n√£o for bem sucedido if (this.readyState == 4 \u0026amp;\u0026amp; this.status !== 200){ document.getElementById(\u0026#34;error-container\u0026#34;).innerHTML = \u0026#39;Data not found!\u0026#39;; } O c√≥digo acima basicamente valida qualquer request que n√£o seja bem sucedida, inserindo a mensagem de erro que desejamos.\nAbaixo segue o c√≥digo completo para consulta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 function sendRequest(){ var id = document.querySelector(\u0026#39;.input-id\u0026#39;); // uso da API para fornecer acesso a realizar requests ao servidor var xhttp = new XMLHttpRequest(); // esta fun√ß√£o √© chamado sempre que o atributo readyState sofre altera√ß√£o xhttp.onreadystatechange = function() { // readyState = 4 - referente a request concluida // status = 200 - referente ao status code http \u0026#39;OK\u0026#39; if (this.readyState == 4 \u0026amp;\u0026amp; this.status == 200) { // respons√°vel por coletar a resposta. var response = this.responseText; var result = JSON.parse(response); // preenchimento do resultado no HTML document.getElementById(\u0026#34;name\u0026#34;).innerHTML = result.name; document.getElementById(\u0026#34;gravity\u0026#34;).innerHTML = parseInt(result.gravity); document.getElementById(\u0026#34;population\u0026#34;).innerHTML = result.population; document.getElementById(\u0026#34;rotation-period\u0026#34;).innerHTML = result.rotation_period; } // Respons√°vel por tratar o retorno que n√£o for bem sucedido if (this.readyState == 4 \u0026amp;\u0026amp; this.status !== 200){ document.getElementById(\u0026#34;error-container\u0026#34;).innerHTML = \u0026#39;Data not found!\u0026#39;; } }; // URL da API var url = \u0026#39;https://swapi.co/api/planets/\u0026#39;+id.value; // configura√ß√£o para request xhttp.open(\u0026#34;GET\u0026#34;, url, true); // envio da request xhttp.send(); } Com poucas linhas de c√≥digo, foi realizado uma fun√ß√£o para requisi√ß√£o AJAX e inserindo o resultado dentro da p√°gina HTML.\nAs valida√ß√µes implementadas foram superficiais, por√©m √© poss√≠vel ampliar a camada conforme a necessidade do projeto.\nEspero que tenham apreciado o conte√∫do, e que agregue valor em seu dia a dia.\nGrande abra√ßo e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/javascript/realizando-um-request-ajax-sem-framework-javascript/","summary":"Ol√°, tudo bem?!\nRealizar uma requisi√ß√£o AJAX n√£o precisa ser uma coisa de outro mundo, muito pelo contr√°rio √© algo bem comum e amplamente utilizado.\nNormalmente √© realizado a implementa√ß√£o fazendo uso de alguma biblioteca Javascript.\nNeste post irei demonstrar de forma simples uma requisi√ß√£o AJAX para a API SWAPI (Star Wars API) e consumir seu retorno na p√°gina HTML.\nCrie um arquivo HTML com o nome ajax-javascript.html, dentro do mesmo insira a seguinte estrutura de c√≥digo.","title":"Realizando uma requisi√ß√£o AJAX sem framework Javascript"},{"content":"Ol√°, tudo bem?!\nQuantas vezes utilizamos bibliotecas como JQuery para a√ß√µes b√°sicas com Javascript? Eu mesmo por diversas vezes, acabamos tomando essa a√ß√£o por falta de conhecimento.\nPor exemplo, para selecionar algum elemento no HTML um exemplo pr√°tico seria utilizar o $(‚Äòelemento‚Äô) do JQuery e a partir disso manipular o elemento. Entretanto, podemos fazer esta a√ß√£o de forma nativa utilizando document.querySelector(‚Äòelemento‚Äô).\nVamos para um exemplo pr√°tico, abaixo temos um p√°gina HTML com um bot√£o, no qual desejamos inserir um atributo data-value=‚ÄùValor do atributo‚Äù.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Query Selector\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;button class=\u0026#39;my-button\u0026#39;\u0026gt; click me \u0026lt;/button\u0026gt; \u0026lt;script\u0026gt; // c√≥digo javascript \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Crie um arquivo HTML contendo a estrutura acima, pode utilizar o nome e o navegador de sua prefer√™ncia. Como observado, dispomos de um bot√£o com uma classe definida, n√£o necessariamente devemos utilizar class, podemos utilizar a tag ou id, entretanto foi uma escolha utilizar.\nPara selecionar o elemento podemos realizar da seguinte maneira;\n1 var button = document.querySelector(\u0026#39;.my-button\u0026#39;); Ao analisar o retorno na aba console, obtemos o seguinte resultado.\n1 console.log(button); Para inclus√£o do atributo, ser√° utilizado o comando .setAttribute(key, value).\n1 2 3 var button = document.querySelector(\u0026#39;.my-button\u0026#39;); button.setAttribute(\u0026#34;data-value\u0026#34;, \u0026#34;Button Value\u0026#34;); Ap√≥s implementa√ß√£o pressione a tecla F5 para atualizar a p√°gina e visualizar o resultado no console.\nPodemos observar na imagem acima, o resultado da implementa√ß√£o para inclus√£o do atributo. Outra possibilidade √© de coletar o valor de atributos a partir do mesmo elemento, para isso pode-se utilizar button.getAttribute(atributo));.\n1 2 3 var dataValue = button.getAttribute(\u0026#39;data-value\u0026#39;); console.log(dataValue); Foi muito simples a manipula√ß√£o do elemento, inserindo e coletando valores de atributos. O exemplo foi b√°sico, para demonstrar como √© simples e r√°pido sem a necessidade de um componente ou framework para realizar a a√ß√£o.\nAgrade√ßo pela aten√ß√£o de todos, espero que o post agregue valor em seu dia a dia.\nGrande abra√ßo e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/javascript/utilizando-queryselector-do-javascript/","summary":"Ol√°, tudo bem?!\nQuantas vezes utilizamos bibliotecas como JQuery para a√ß√µes b√°sicas com Javascript? Eu mesmo por diversas vezes, acabamos tomando essa a√ß√£o por falta de conhecimento.\nPor exemplo, para selecionar algum elemento no HTML um exemplo pr√°tico seria utilizar o $(‚Äòelemento‚Äô) do JQuery e a partir disso manipular o elemento. Entretanto, podemos fazer esta a√ß√£o de forma nativa utilizando document.querySelector(‚Äòelemento‚Äô).\nVamos para um exemplo pr√°tico, abaixo temos um p√°gina HTML com um bot√£o, no qual desejamos inserir um atributo data-value=‚ÄùValor do atributo‚Äù.","title":"Utilizando query Selector do Javascript"},{"content":"Ol√°, tudo bem?!\nTodas aplica√ß√µes que desenvolvemos necessita de entradas e sa√≠das de dados, isso √© muito comum, por√©m cada desenvolvedor acaba implementando a ‚Äúsua solu√ß√£o‚Äù para esse problema. Definitivamente essa n√£o √© uma boa pr√°tica por diversos motivos.\nO mais recomendado √© a utiliza√ß√£o de componentes criados pela comunidade, porque devo usar um componente? Simples, irei listar algumas das principais vantagens, sendo:\nGrande volume de contribuidores. Maior corre√ß√£o de bugs. Implementa√ß√µes de melhorias contantes. Solu√ß√£o robusta. Testada por diversos usu√°rios (programadores). O componente zend-validator Neste post irei apresentar um poderoso componente criado pela Zend e mantido pela comunidade, seu nome √© zend-validator.\nEle suporta uma lista de validadores, que cobre grande parte das nossas necessidades do dia a dia, a seguir podemos observar a lista de validadores.\nValidadores Barcode Between Callback CreditCard Date Db\\RecordExists and Db\\NoRecordExists Digits EmailAddress Explode GreaterThan Hex Hostname Iban Identical InArray Ip Isbn IsCountable IsInstanceOf LessThan NotEmpty Regex Sitemap Step StringLength Timezone Uri Uuid File Validators Intro Count Crc32 ExcludeExtension ExcludeMimeType Exists Extension FilesSize Hash ImageSize IsCompressed IsImage Md5 MimeType NotExists Sha1 Size Upload UploadFile WordCount Como podemos observar, o componente disp√µem de uma vasta lista a nossa disposi√ß√£o. Caso ocorra de n√£o conter¬†um validador que voc√™ necessite, pode ser criado validadores, eu mesmo criei um pacote¬†validators_zf, respons√°vel por validar CPF, CNPJ e Data (pt-BR).\nDemonstra√ß√£o pr√°tica Ser√° implementado uma estrutura simples, para que possamos realizar a valida√ß√£o dos dados submetidos por meio de um formul√°rio.\nLembrando que neste exemplo utilizaremos um formul√°rio, por√©m os princ√≠pios s√£o os mesmos para validar qualquer entrada de dados.\nVamos emular o seguinte cen√°rio, sendo:\nTeremos um formul√°rio com nome, e-mail, e idade. Ao realizar o submit (POST) devemos capturar e validar cada input. Ap√≥s valida√ß√£o devemos analisar o resultado. Regras de valida√ß√£o para cada input. nome M√°ximo de caracteres 150. M√≠nimo de caracteres 05. Campo obrigat√≥rio. email M√°ximo de caracteres 200. M√≠nimo de caracteres 10. Campo obrigat√≥rio. Deve ser um e-mail v√°lido. idade Entre 0 e 120 anos. Campo obrigat√≥rio. Deve aceitar somente n√∫meros. Para agilizar a realiza√ß√£o do projeto, fa√ßa o download da estrutura base que preparei diegobrocanelli-post-zend-validator.\ndiegobrocanelli-post-zend-validator src Validator User.php view form.html composer.json index.php Ap√≥s download realizado, descompacte o projeto no diret√≥rio desejado, acesse sua raiz pelo terminal e execute o comando abaixo para valida√ß√£o do projeto:\n1 php -S localhost:8080 index.php Ap√≥s execu√ß√£o do servidor embutido do PHP, acesse um navegador de sua prefer√™ncia inserindo a seguinte URL, sendo:\n1 localhost:8080 Estou utilizando a vers√£o 7.2 do PHP, por√©m a adapta√ß√£o para projetos inferiores √© simples. Neste pacote que foi realizado o download j√° consta os componentes devidamente instalados, onde pode ser observado no arquivo composer.json.\nNo arquivo composer.json foi definido a namespace base DiegoBrocanelli, utilizaremos ela para criar nossa classe de valida√ß√£o mais a frente.\nAbra o projeto no seu editor de preferencia e acesse a classe src/Validator/User.php.\nDevemos definir a namespace da classe, para isso insira o seguinte c√≥digo.\n1 2 3 \u0026lt;?php namespace DiegoBrocanelli\\Validator; Agora deve ser importado os pacotes que ser√£o utilizados, sendo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Componente base. use Zend\\InputFilter\\InputFilter; // Respons√°vel por filtrar os dados para inteiro. use Zend\\Filter\\ToInt; // Respons√°vel por filtrar tags HTML. use Zend\\Filter\\StripTags; // Respons√°vel por remover espa√ßos no in√≠cio e fim da string. use Zend\\Filter\\StringTrim; // Respons√°vel por validar intervalo entre valores. use Zend\\Validator\\Between; // Respons√°vel por validar o e-mail. use Zend\\Validator\\EmailAddress; // Respons√°vel por validar o comprimento da string. use Zend\\Validator\\StringLength; Deve-se ser declarado a estrutura da classe, sendo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 /** * Respons√°vel por validar os dados de usu√°rio * * @author Diego Brocanelli \u0026lt;contato@diegobrocanelli.com.br\u0026gt; */ class User extends Inputfilter { // Ser√° por meio do construtor que iremos consumir os validadores. public function __construct() { // Ser√° implementado aqui a estrutura de valida√ß√£o. } } Ap√≥s a cria√ß√£o do m√©todo construtor, ser√° implementado o primeiro validador referente ao para o campo nome, para isso como a classe User herda a classe InputFilter a mesma disp√µes do m√©todo add() onde ser√° definido o validador .\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Validador do campo nome. $this-\u0026gt;add([ \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;nome\u0026#39;, // Defini o nome do campo esperado (deve ser igual ao do input do form). \u0026#39;required\u0026#39; =\u0026gt; true, // defini se o campo √© obrigat√≥rio TRUE ou n√£o FALSE. \u0026#39;filters\u0026#39; =\u0026gt; [ // Dentro desse array √© onde definimos todos os filtros desejados [ \u0026#39;name\u0026#39; =\u0026gt; StringTrim::class ], // Filtro para remo√ß√£o de espa√ßos em branco. [ \u0026#39;name\u0026#39; =\u0026gt; StripTags::class ], // Filtro para remo√ß√£o de tags HTML. ], \u0026#39;validators\u0026#39; =\u0026gt; [ // dentro desse array √© inserido todos os validadores desejado. [ \u0026#39;name\u0026#39; =\u0026gt; StringLength::class, \u0026#39;options\u0026#39; =\u0026gt; [ \u0026#39;encoding\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, // Aqui √© definido o encoding da string \u0026#39;min\u0026#39; =\u0026gt; 5, // aqui √© definido o m√≠nimo de caracteres desejado. \u0026#39;max\u0026#39; =\u0026gt; 150, // aqui √© definido o m√°ximo de caracteres permitido ], ], ], ]); Devemos agora implementar o validador para campo de e-mail.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // Validador do campo email. $this-\u0026gt;add([ \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;email\u0026#39;, // Defini o nome do campo esperado (deve ser igual ao do input do form). \u0026#39;required\u0026#39; =\u0026gt; true, // defini se o campo √© obrigat√≥rio TRUE ou n√£o FALSE. \u0026#39;filters\u0026#39; =\u0026gt; [ // Dentro desse array √© onde definimos todos os filtros desejados [ \u0026#39;name\u0026#39; =\u0026gt; StringTrim::class ], // Filtro para remo√ß√£o de espa√ßos em branco. [ \u0026#39;name\u0026#39; =\u0026gt; StripTags::class ], // Filtro para remo√ß√£o de tags HTML. ], \u0026#39;validators\u0026#39; =\u0026gt; [ // dentro desse array √© inserido todos os validadores desejado. [ \u0026#39;name\u0026#39; =\u0026gt; StringLength::class, \u0026#39;options\u0026#39; =\u0026gt; [ \u0026#39;encoding\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, // Aqui √© definido o encoding da string \u0026#39;min\u0026#39; =\u0026gt; 5, // aqui √© definido o m√≠nimo de caracteres desejado. \u0026#39;max\u0026#39; =\u0026gt; 150, // aqui √© definido o m√°ximo de caracteres permitido ], ], [ \u0026#39;name\u0026#39; =\u0026gt; EmailAddress::class, // Aqui √© difinido o validador de e-mail ], ], ]); Por √∫ltimo, implementar o validador para o campo idade.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;?php // Validador do campo idade. $this-\u0026gt;add([ \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;idade\u0026#39;, // Defini o nome do campo esperado (deve ser igual ao do input do form). \u0026#39;required\u0026#39; =\u0026gt; true, // defini se o campo √© obrigat√≥rio TRUE ou n√£o FALSE. \u0026#39;filters\u0026#39; =\u0026gt; [ // Dentro desse array √© onde definimos todos os filtros desejados [ \u0026#39;name\u0026#39; =\u0026gt; StringTrim::class ], // Filtro para remo√ß√£o de espa√ßos em branco. [ \u0026#39;name\u0026#39; =\u0026gt; StripTags::class ], // Filtro para remo√ß√£o de tags HTML. ], \u0026#39;validators\u0026#39; =\u0026gt; [ // dentro desse array √© inserido todos os validadores desejado. [ \u0026#39;name\u0026#39; =\u0026gt; Between::class, \u0026#39;options\u0026#39; =\u0026gt; [ \u0026#39;encoding\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, // Aqui √© definido o encoding da string \u0026#39;min\u0026#39; =\u0026gt; 0, // aqui √© definido o valor m√≠nimo. \u0026#39;max\u0026#39; =\u0026gt; 120, // aqui √© definido o valor m√°ximo. ], ], ], ]); Como resultado a implementa√ß√£o deve ficar semelhante ao apresentado abaixo, sendo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 \u0026lt;?php namespace DiegoBrocanelli\\Validator; // Componente base. use Zend\\InputFilter\\InputFilter; // Respons√°vel por filtrar os dados para inteiro. use Zend\\Filter\\ToInt; // Respons√°vel por filtrar tags HTML. use Zend\\Filter\\StripTags; // Respons√°vel por remover espa√ßos no in√≠cio e fim da string. use Zend\\Filter\\StringTrim; // Respons√°vel por validar intervalo entre valores. use Zend\\Validator\\Between; // Respons√°vel por validar o e-mail. use Zend\\Validator\\EmailAddress; // Respons√°vel por validar o comprimento da string. use Zend\\Validator\\StringLength; /** * Respons√°vel por validar os dados de usu√°rio * * @author Diego Brocanelli \u0026lt;contato@diegobrocanelli.com.br\u0026gt; */ class User extends Inputfilter { // Ser√° por meio do construtor que iremos consumir os validadores. public function __construct() { // Validador do campo nome. $this-\u0026gt;add([ \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;nome\u0026#39;, // Defini o nome do campo esperado (deve ser igual ao do input do form). \u0026#39;required\u0026#39; =\u0026gt; true, // defini se o campo √© obrigat√≥rio TRUE ou n√£o FALSE. \u0026#39;filters\u0026#39; =\u0026gt; [ // Dentro desse array √© onde definimos todos os filtros desejados [ \u0026#39;name\u0026#39; =\u0026gt; StringTrim::class ], // Filtro para remo√ß√£o de espa√ßos em branco. [ \u0026#39;name\u0026#39; =\u0026gt; StripTags::class ], // Filtro para remo√ß√£o de tags HTML. ], \u0026#39;validators\u0026#39; =\u0026gt; [ // dentro desse array √© inserido todos os validadores desejado. [ \u0026#39;name\u0026#39; =\u0026gt; StringLength::class, \u0026#39;options\u0026#39; =\u0026gt; [ \u0026#39;encoding\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, // Aqui √© definido o encoding da string \u0026#39;min\u0026#39; =\u0026gt; 5, // aqui √© definido o m√≠nimo de caracteres desejado. \u0026#39;max\u0026#39; =\u0026gt; 150, // aqui √© definido o m√°ximo de caracteres permitido ], ], ], ]); // Validador do campo email. $this-\u0026gt;add([ \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;email\u0026#39;, // Defini o nome do campo esperado (deve ser igual ao do input do form). \u0026#39;required\u0026#39; =\u0026gt; true, // defini se o campo √© obrigat√≥rio TRUE ou n√£o FALSE. \u0026#39;filters\u0026#39; =\u0026gt; [ // Dentro desse array √© onde definimos todos os filtros desejados [ \u0026#39;name\u0026#39; =\u0026gt; StringTrim::class ], // Filtro para remo√ß√£o de espa√ßos em branco. [ \u0026#39;name\u0026#39; =\u0026gt; StripTags::class ], // Filtro para remo√ß√£o de tags HTML. ], \u0026#39;validators\u0026#39; =\u0026gt; [ // dentro desse array √© inserido todos os validadores desejado. [ \u0026#39;name\u0026#39; =\u0026gt; StringLength::class, \u0026#39;options\u0026#39; =\u0026gt; [ \u0026#39;encoding\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, // Aqui √© definido o encoding da string \u0026#39;min\u0026#39; =\u0026gt; 5, // aqui √© definido o m√≠nimo de caracteres desejado. \u0026#39;max\u0026#39; =\u0026gt; 150, // aqui √© definido o m√°ximo de caracteres permitido ], ], [ \u0026#39;name\u0026#39; =\u0026gt; EmailAddress::class, // Aqui √© difinido o validador de e-mail ], ], ]); // Validador do campo idade. $this-\u0026gt;add([ \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;idade\u0026#39;, // Defini o nome do campo esperado (deve ser igual ao do input do form). \u0026#39;required\u0026#39; =\u0026gt; true, // defini se o campo √© obrigat√≥rio TRUE ou n√£o FALSE. \u0026#39;filters\u0026#39; =\u0026gt; [ // Dentro desse array √© onde definimos todos os filtros desejados [ \u0026#39;name\u0026#39; =\u0026gt; StringTrim::class ], // Filtro para remo√ß√£o de espa√ßos em branco. [ \u0026#39;name\u0026#39; =\u0026gt; StripTags::class ], // Filtro para remo√ß√£o de tags HTML. ], \u0026#39;validators\u0026#39; =\u0026gt; [ // dentro desse array √© inserido todos os validadores desejado. [ \u0026#39;name\u0026#39; =\u0026gt; Between::class, \u0026#39;options\u0026#39; =\u0026gt; [ \u0026#39;encoding\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, // Aqui √© definido o encoding da string \u0026#39;min\u0026#39; =\u0026gt; 0, // aqui √© definido o valor m√≠nimo. \u0026#39;max\u0026#39; =\u0026gt; 120, // aqui √© definido o valor m√°ximo. ], ], ], ]); } } Apos implementa√ß√£o da camada de valida√ß√£o, ser√° implementado as regras no arquivo index.php para consumo da classe de valida√ß√£o.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 \u0026lt;?php // importa√ß√£o do autoload. require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; // inport do componente de valida√ß√£o. use DiegoBrocanelli\\Validator\\User; // capturo o conte√∫do do form.html $view = file_get_contents(__DIR__.\u0026#39;/view/form.html\u0026#39;); // recuperar o mehod da rquest $request = filter_input(INPUT_SERVER, \u0026#39;REQUEST_METHOD\u0026#39;); // somente requisi√ß√£o POST if($request === \u0026#39;POST\u0026#39;){ $nome = filter_input(INPUT_POST, \u0026#39;nome\u0026#39;); $email = filter_input(INPUT_POST, \u0026#39;email\u0026#39;); $idade = filter_input(INPUT_POST, \u0026#39;idade\u0026#39;); // realizado a cria√ß√£o do objeto User $validator = new User(); // Por meio do m√©todo setData, √© passado um array com os valores a serem validados. // as keys devem ser as mesmas configuradas no validator. $validator-\u0026gt;setData([ \u0026#39;nome\u0026#39; =\u0026gt; $nome, \u0026#39;email\u0026#39; =\u0026gt; $email, \u0026#39;idade\u0026#39; =\u0026gt; $idade, ]); // Por meio do m√©todo isValid(), √© validado os dados informados. if(!$validator-\u0026gt;isValid()){ // O m√©todo getMessages() √© o respons√°vel por retornar as mensagens de erro do input. var_dump($validator-\u0026gt;getMessages()); } } // respons√°vel por renderizar o formul√°rio. echo $view; Basicamente √© se a request √© POST, em seguida capturamos os valores do formul√°rio.\nEm seguida √© instanciado o validador User e por meio do m√©todo setData() passado os valores obtidos do formul√°rio.\nPara validar os dados basta chamar o m√©todo isValid() do validador.\nPara recuperar as mensagens de erro deve ser utilizado o m√©todo getMessages().\nO projeto encontra-se finalizado e pronto para seu uso.\n1 php -S localhost:8080 index.php Considera√ß√µes finais Pudemos observar na pr√°tica como foi simples criar a camada de valida√ß√£o e consumi-lo.\nAs mensagens por padr√£o s√£o em ingl√™s, √© poss√≠vel traduzi-las de forma autom√°tica, caso tenham interesse deixem nos coment√°rios.\nPodemos tamb√©m somar o uso do validator com o zend-form e zend-view, onde por exemplo as mensagens de erro j√° s√£o inseridos abaixo do seu respectivo input.\nValidar dados √© fundamental e toda aplica√ß√£o necessita de ser feita, com o zend validator essa tarefa fica muito mas simples e descomplicada.\nAgrade√ßo pela aten√ß√£o, espero que o conte√∫do do post agregue valor em seu dia a dia.\nAt√© a pr√≥xima e sucesso nos projetos.\n","permalink":"https://diegobrocanelli.com.br/php/validando-os-dados-do-formulario-com-zend-validator/","summary":"Ol√°, tudo bem?!\nTodas aplica√ß√µes que desenvolvemos necessita de entradas e sa√≠das de dados, isso √© muito comum, por√©m cada desenvolvedor acaba implementando a ‚Äúsua solu√ß√£o‚Äù para esse problema. Definitivamente essa n√£o √© uma boa pr√°tica por diversos motivos.\nO mais recomendado √© a utiliza√ß√£o de componentes criados pela comunidade, porque devo usar um componente? Simples, irei listar algumas das principais vantagens, sendo:\nGrande volume de contribuidores. Maior corre√ß√£o de bugs.","title":"Validando os dados do formul√°rio com Zend-Validator"},{"content":"Ol√°, tudo bem!\nQue o Composer √© uma ferramenta sensacional isso n√≥s j√° sabemos, por√©m o que poucos sabem √© que ele disp√µem de recursos de execu√ß√£o de scripts para nos auxiliar na automatiza√ß√£o de tarefas.\nAcredite, ap√≥s conhecer esse recurso voc√™ vai adot√°-lo em seu dia a dia, pois ir√° lhe economizar um bom tempo em seu dia a dia.\nO que √© um script? Em uma tradu√ß√£o livre podemos encontrar a seguinte defini√ß√£o na documenta√ß√£o do composer.\nUm script, nos termos do Compositor, pode ser um retorno de chamada do PHP (definido como um m√©todo est√°tico) ou qualquer comando execut√°vel de linha de comando.¬†Os scripts s√£o √∫teis para executar o c√≥digo personalizado do pacote ou comandos espec√≠ficos do pacote durante o processo de execu√ß√£o do Composer.\nE para definir os scripts eles devem ser declarados no arquivo composer.json.\nDefinindo nosso primeiro script. Para demonstrar como definir os scripts dentro do arquivo composer.json irei utilizar como base o projeto Calculadora de IMC este √© o projeto de n√≠vel iniciante do grupo de estudos que lidero de PHP/POO do Training Center, aqui vai um jaba, caso voc√™ tenha interesse em aprender/aperfei√ßoar ou transmitir seu conhecimento, seja ele em PHP, Java, Cloujure, React, Ruby, Frontend e muito muitas, venha participar dos nosso projetos e grupos de estudos que s√£o excelentes e disp√µem de uma comunidade gigante com muita vontade de colaborar e ajudar a crescermos juntos.\nCaso voc√™ n√£o conhe√ßa nada sobre o composer, recomendo os seguintes materiais que disponho no meu blog, sendo:\nPost sobre Iniciando com Composer. V√≠deo da 14¬∫ edi√ß√£o do projeto hhbr que foi sobre Iniciando com Composer. Ap√≥s cria√ß√£o do clone do projetoCalculadora de IMC, abra o mesmo em um editor de c√≥digo de sua prefer√™ncia. No meu caso ser√° o VSCode.\nEm seguida abra o arquivo composer.json que se encontra na raiz do diret√≥rio, onde podemos visualizar toda sua estrutura, veja o conte√∫do abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \u0026#34;name\u0026#34;: \u0026#34;DiegoBrocanelli/CalculadoraIMC\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Projeto para realiza√ß√£o de c√°lculo do IMC\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;MIT\u0026#34;, \u0026#34;authors\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Diego Brocanelli\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;diegod2@msn.com\u0026#34; } ], \u0026#34;minimum-stability\u0026#34;: \u0026#34;dev\u0026#34;, \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;: { \u0026#34;DiegoBrocanelli\\\\\u0026#34;: \u0026#34;src/\u0026#34; } }, \u0026#34;require\u0026#34;: { \u0026#34;PHP\u0026#34;:\u0026#34;\u0026gt;=7.0.0\u0026#34;, \u0026#34;phpunit/phpunit\u0026#34;: \u0026#34;^6.5\u0026#34; }, \u0026#34;scripts\u0026#34;:{ \u0026#34;server\u0026#34;:\u0026#34;php -S localhost:8080 public/index.php\u0026#34;, \u0026#34;tests\u0026#34;:\u0026#34;vendor/bin/phpunit test/\u0026#34; } } As informa√ß√µes que iremos focar s√£o os descritos na sess√£o scripts, sendo:\n1 2 3 4 \u0026#34;scripts\u0026#34;:{ \u0026#34;server\u0026#34;:\u0026#34;php -S localhost:8080 public/index.php\u0026#34;, \u0026#34;tests\u0026#34;:\u0026#34;vendor/bin/phpunit test/\u0026#34; } Como podemos observar, para que possamos definir scripts para execu√ß√£o do composer devemos declarar no arquivo composer.json uma sess√£o denominada ‚Äòscripts‚Äô sendo dentro desta onde devemos descrever todos os scripts que desejamos executar.\nCada script √© definido e executado de forma individual, entretanto mais a frente veremos como referenciar scripts.\nExecutando nossos scripts Script para executar o servidor embutido do PHP Como primeiro exemplo de script, temos:\n1 \u0026#34;server\u0026#34;:\u0026#34;php -S localhost:8080 public/index.php\u0026#34;, A estrutura do script √© simples tendo chave¬†como nome do script e valor o script em si.\nO script acima √© respons√°vel por executar o servidor embutido do PHP, e para execut√°-lo devemos executar o seguinte comando no terminal, sendo:\n1 composer server Com isso sabemos que o servidor embutido do PHP est√° em execu√ß√£o.\nScript para executar os testes unit√°rios 1 \u0026#34;tests\u0026#34;:\u0026#34;vendor/bin/phpunit test/\u0026#34; O script acima √© respons√°vel por executar os testes unit√°rios criados com o PHPUnit.\nPara execut√°-lo, devemos rodar o seguinte comando no terminal, sendo:\n1 composer tests Podemos observar que a cria√ß√£o de scripts para o composer √© simples e nos auxilia muito na execu√ß√£o de tarefas repetitivas poupando muito tempo.\nEsses dois exemplos s√£o simples, por√©m muito √∫teis. Voc√™ pode criar o script que desejar e com isso dispor de um leque de recursos para o seu dia a dia.\nNos pr√≥ximos passos irei detalhar um pouco mais dos recursos dispon√≠veis para a cria√ß√£o de scripts mais avan√ßados.\nEventos Eventos s√£o recursos poderosos que podem nos auxiliar a deixar nossos scripts muito mais robustos e completos, eles s√£o disparados conforme processo executado.\nNota: Os textos dos eventos s√£o tradu√ß√µes livres realizados com base na documenta√ß√£o oficial do composer.\nEventos de comando pre-install-cmd: ocorre antes do comando¬†install ser executado com um arquivo de bloqueio presente. post-install-cmd: ocorre ap√≥s o comando¬†install ter sido executado com um arquivo de bloqueio presente. pre-update-cmd: ocorre antes do comando update ser executado ou antes do comando install ser executado sem um arquivo de bloqueio presente. post-update-cmd: ocorre ap√≥s o comando¬†update ter sido executado ou ap√≥s o comando install ter sido executado sem um arquivo de bloqueio presente. post-status-cmd: ocorre ap√≥s o comando status ser sido executado. pre-archive-cmd: ocorre antes do comando archive ser executado. post-archive-cmd: ocorre ap√≥s o comando archive ter sido executado. pre-autoload-dump: ocorre antes que o carregador autom√°tico seja despejado, durante¬†install/¬†update, ou atrav√©s do comando \u0026gt;dump-autoload. post-autoload-dump: ocorre ap√≥s o carregador autom√°tico ter sido despejado, durante¬†install/update, ou atrav√©s do comando dump-autoload. post-root-package-install: ocorre ap√≥s o pacote raiz foi instalado, durante o comando create-project. post-create-project-cmd: ocorre ap√≥s o comando create-project ter sido executado. Eventos de instala√ß√£o pre-dependencies-solving: ocorre antes que as depend√™ncias sejam resolvidas. post-dependencies-solving: ocorre ap√≥s as depend√™ncias terem sido resolvidas. Eventos de pacotes pre-package-install: ocorre antes que um pacote esteja instalado. post-package-install: ocorre ap√≥s o pacote ter sido instalado. pre-package-update: ocorre antes que um pacote seja atualizado. post-package-update: ocorre depois que um pacote foi atualizado. pre-package-uninstall: ocorre antes que um pacote seja desinstalado. post-package-uninstall: ocorre depois que um pacote foi desinstalado. Plugins init: ocorre depois que uma inst√¢ncia do Composer √© feita inicializando. comando: ocorre antes que qualquer comando Composer seja executado na CLI.¬†Ele fornece acesso aos objetos de entrada e sa√≠da do programa. pre-file-download: ocorre antes que os arquivos sejam baixados e permite que voc√™ manipule o¬†RemoteFileSystemobjeto antes de baixar os arquivos com base no URL a ser baixado. Referenciando scripts Um recurso muito poderoso e que nos auxilia a n√£o duplicar scripts √© poder referenciar um script em outro.\nPara referenciar um script basta cham√°-lo inserindo um @ antes do seu nome, por exemplo:\n1 2 3 4 5 6 7 \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: [ \u0026#34;@clearCache\u0026#34;, \u0026#34;phpunit\u0026#34; ], \u0026#34;clearCache\u0026#34;: \u0026#34;rm -rf cache/*\u0026#34; } No exemplo acima podemos visualizar dois scripts, sendo que no script de test temos a refer√™ncia o script clearCache, como podemos observar foi declarado utilizando o @clearCache.\nQuando o comando composer test for executado ele ir√° executar o clearCache em seguida o phpunit.\nCom este recurso fica livre a cria√ß√£o de m√∫ltiplos scripts, onde somente sua imagina√ß√£o e criatividade ser√° limite.\nConsidera√ß√µes finais Como podemos observar neste post o composer √© uma ferramenta que disp√µem de recursos incr√≠veis, convido que voc√™ leia a documenta√ß√£o pois neste post sintetizei os pontos que acredito serem os principais para iniciar no uso de scripts.\nToda ferramenta deve ser utilizada com parcim√¥nia, obviamente incentivo que fa√ßa seus testes crie seus scripts, pois somente assim voc√™ encontrar√° os recursos que lhe auxiliam mais em seu dia a dia.\nEspero que este post tenha agregado valor e conhecimento em seu dia.\nGrande abra√ßo e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/php/composer-automatizando-tarefas-com-scripts/","summary":"Ol√°, tudo bem!\nQue o Composer √© uma ferramenta sensacional isso n√≥s j√° sabemos, por√©m o que poucos sabem √© que ele disp√µem de recursos de execu√ß√£o de scripts para nos auxiliar na automatiza√ß√£o de tarefas.\nAcredite, ap√≥s conhecer esse recurso voc√™ vai adot√°-lo em seu dia a dia, pois ir√° lhe economizar um bom tempo em seu dia a dia.\nO que √© um script? Em uma tradu√ß√£o livre podemos encontrar a seguinte defini√ß√£o na documenta√ß√£o do composer.","title":"Composer ‚Äì Automatizando tarefas com Scripts"},{"content":"Ol√°, tudo bem!\nRecentemente fui abordado com o seguinte questionamento, ‚Äú√© poss√≠vel gerar QR Codes com PHP e MySQL‚Äù.\nMinha resposta foi sim!\nBom, dito isso, a pessoa ao qual me fez essa pergunta relatou que estava tentando, por√©m sem sucesso.\nA mesma est√° utilizando PHP + MySQL + PHP QR Code uma biblioteca que auxilia na constru√ß√£o das imagens.\nPara poder auxiliar da melhor maneira, separei o problema em partes, sendo:\nO Problema Realizar consulta SQL em uma tabela no banco de dados, retornar os registros encontrados e com posse dos dados realizar a cria√ß√£o dos QR Codes.\nBanco de dados Para que possamos realizar este exemplo do post √© necess√°rio que realize o download do banco de dados de exemplo.\nCrie o banco de dados ‚Äòpost_qr_code‚Äô.\nPara importa√ß√£o do script que acabou de fazer o download, execute por meio do terminal o comando abaixo no mesmo diret√≥rio onde realizou o download, sendo:\n1 mysql -u root -p post_qr_code \u0026lt; post_qr_code.sql O comando ir√° solicitar a senha de acesso ao banco de dados referente ao usu√°rio ‚Äòroot‚Äô.\nA estrutura √© simples tendo apenas uma tabela chamada cadastro, onde a mesma cont√©m duas colunas, sendo id e matr√≠cula.\nN√£o se preocupe com configura√ß√£o nem nada disso, esse banco √© o mais simples poss√≠vel para podermos executar nossa tarefa.\nCaso voc√™ deseje mais informa√ß√µes na tabela, basta fazer a modelagem e cria√ß√£o dos dados desejados, por√©m como mencionado esse n√£o √© o objetivo do post.\nBiblioteca PHP QR Code Essa biblioteca tem como objetivo auxiliar na constru√ß√£o de QR Codes, particularmente n√£o conhecia a mesma e n√£o me agradou muito, pelo simples fato de ter que fazer o download da ferramenta para utilizar.\nHoje em dia uma biblioteca que n√£o se encontra no packagist eu n√£o fa√ßo uso, pois com isso eu n√£o poderia utilizar o composer para gerenciar essa depend√™ncia e hoje projeto que n√£o usa composer √© invi√°vel de se manter.\nCaso voc√™ desconhe√ßa o composer, tenho um post que ensina como inciar com composer.\nE caso voc√™ tenha interesse, disponho de outro post que ensina a gerar QR Code de utilizando um componente que √© instalado via composer.\nC√≥digos PHP de implementa√ß√£o Para realizar a implementa√ß√£o do c√≥digo, devemos construir a estrutura de diret√≥rios necess√°ria, seguindo os seguintes passos:\nCrie o diret√≥rio ‚Äúpost_qr_code‚Äù Importe para dentro do diret√≥rio rec√©m criado o download da bliblioteca PHP QR Code descompacte a mesma e remova o zip que n√£o se faz mais necess√°rio. Crie o arquivo index.php. Ap√≥s realiza√ß√£o dos passos acima, sua estrutura deve ficar igual a demonstrada abaixo:\npost_qr_code phpqrcode index.php Nosso foco agora √© no arquivo index.php, dito isso abra o mesmo no editor de sua preferencia, pois daremos inicio ao processo de codifica√ß√£o.\nNota: Para usar o PHP QR Code, o mesmo faz uso da extens√£o gd do PHP!\nVamos importar a biblioteca PHP QR code, veja abaixo o resultado.\n1 2 3 \u0026lt;?php // Realizamos a importa√ß√£o da biblioteca para gerar QR Code. require_once(\u0026#39;phpqrcode/qrlib.php\u0026#39;); Ap√≥s importa√ß√£o, devemos realizar a conex√£o com o banco de dados, veja resultado abaixo:\n1 2 3 4 5 6 7 8 9 // Credenciais de acesso ao banco de dados. $servidor = \u0026#34;localhost\u0026#34;; $usuario = \u0026#34;SEU USU√ÅRIO DO BANCO DE DADOS\u0026#34;; $senha = \u0026#34;SUA SENHA DO BANCO DE DADOS\u0026#34;; $dbname = \u0026#34;post_qr_code\u0026#34;; // Realizamos a conex√£o com o banco de dados. $conn = new PDO( \u0026#39;mysql:host=\u0026#39;.$servidor.\u0026#39;;dbname=\u0026#39;.$dbname, $usuario, $senha); Nota: NUNCA devemos realizar conex√£o com banco de dados diretamente no arquivo de implementa√ß√£o, estou fazendo isso para agilizar e simplificar o post, por favor siga todas as boas pr√°ticas de c√≥digo e seguran√ßa!\nAp√≥s conex√£o realizada, podemos executar a consulta dos dados na tabela ‚Äòcadastro‚Äô.\n1 2 3 4 5 // Constru√≠mos nossa query de consulta. $queryString = \u0026#39;SELECT * FROM cadastro\u0026#39;; // Executamos a pesquisa, retornando todos os registros da tabela cadastro. $data = $conn-\u0026gt;query($queryString); Ap√≥s consulta dos dados desejados, devemos realizar um la√ßo de repeti√ß√£o para percorrer todos os dados encontrados e gerar nossos QR Codes.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Realizamos um la√ßo de repeti√ß√£o para percorrer cada registro retornado do DB. foreach ($data as $value) { // Configuramos um nome √∫nico para o QR Code com base no n√∫mero da matr√≠cula. $qrCodeName = \u0026#34;imagem_qrcode_{$value[\u0026#39;matricula\u0026#39;]}.png\u0026#34;; /** * Realizamos a cria√ß√£o da imagem PNG, sendo passado as seguintes informa√ß√µes: * 1¬∫ - A string que desejamos inserir no QR Code. * 2¬∫ - O nome da imagem que criamos no passo anterior. */ QRcode::png($value[\u0026#39;matricula\u0026#39;], $qrCodeName); // Para finalizar realizamos a exibi√ß√£o da imagem no navegador. echo \u0026#34;\u0026lt;img src=\u0026#39;{$qrCodeName}\u0026#39;\u0026gt;\u0026#34;; } Para executarmos nosso projeto, faremos uso do servidor embutido do PHP. Acesse a raiz do projeto e execute o seguinte comando, sendo:\n1 php -S localhost:8080 Abra o navegador de sua prefer√™ncia e insira a seguinte URL:\n1 localhost:8080 Ap√≥s realizado o acesso, teremos o seguinte resultado.\nObtemos 10 imagens de QR Code referente a 10 registros contidos no banco de dados.\nNota: As imagens est√£o sendo armazenadas na raiz do projeto, por√©m nada impede que possa ser armazenadas onde desejar.\nEspero que tenham apreciado e que o post tenha agregado valor.\nConvido que deixem sua opini√£o, d√∫vidas e elogios nos coment√°rios.\nGrande abra√ßo e sucesso nos projetos.\n","permalink":"https://diegobrocanelli.com.br/php/gerando-qr-codes-com-php-mysql-php-qr-code/","summary":"Ol√°, tudo bem!\nRecentemente fui abordado com o seguinte questionamento, ‚Äú√© poss√≠vel gerar QR Codes com PHP e MySQL‚Äù.\nMinha resposta foi sim!\nBom, dito isso, a pessoa ao qual me fez essa pergunta relatou que estava tentando, por√©m sem sucesso.\nA mesma est√° utilizando PHP + MySQL + PHP QR Code uma biblioteca que auxilia na constru√ß√£o das imagens.\nPara poder auxiliar da melhor maneira, separei o problema em partes, sendo:","title":"Gerando QR Codes com PHP + MySQL + PHP QR Code"},{"content":"Ol√°, tudo bem!\nPode parecer simples, por√©m quem nunca teve a necessidade de realizar parse da query string para obter seus valores?\nPrincipalmente quando n√£o estamos utilizando um framework, micro framework ou componente para isso.\nVou lhe demostrar que n√£o precisamos de nada disso para realizar essa tarefa!\nO que √© query String? √â parte da URL, onde cont√©m dados sendo transmitidos.\nExemplo: 1 http://meusite.com.br/produto?chave=valor\u0026amp;outraChave=outroValor Como podemos analisar no exemplo acima, para que possamos informar os valores desejados na URL iniciamos com o caractere ‚Äò? ‚Äò seguido de chave e seu valor.\nCaso desejamos informar mais valores, basta inserir o caractere ‚Äò\u0026amp;‚Äò e repetir o processo.\nPodemos informas quantos valores forem necess√°rios, normalmente essa passagem de par√¢metros √© comumente utilizada em requisi√ß√µes do tipo ‚ÄòGET ‚Äò, por√©m nada impede de ser utilizado em outros tipos de requisi√ß√µes (request).\nPrincipal erro ao ler query string Como observado no exemplo acima, podemos informar quantos valores desejarmos, em decorr√™ncia normalmente nos deparamos com implementa√ß√µes similares ao demonstrado abaixo.\n1 2 3 $page = $_GET[\u0026#39;page\u0026#39;]; $column = $_GET[\u0026#39;column\u0026#39;]; $order = $_GET[\u0026#39;order\u0026#39;]; Essa abordagem N√ÉO √© recomendada, pois n√£o se deve fazer uso de super globais.\nTemos tamb√©m o acr√©scimo exponencial de vari√°veis, pois para cada par√¢metro da URL √© criado sua vari√°vel refer√™ncia, com isso o c√≥digo fica mais complexo e verboso, dificultando sua leitura e manuten√ß√£o.\nSolu√ß√£o para o problema Crie um diret√≥rio chamado \u0026ldquo;parse_query_string\u0026rdquo;, em seguida dentro do mesmo crie o arquivo index.php.\nPara que possamos recuperar os valores da query string, podemos utilizar o seguinte processo:\n1 2 3 4 5 6 7 \u0026lt;?php // Capturamos toda a query string $queryString = filter_input(INPUT_SERVER, \u0026#39;QUERY_STRING\u0026#39;); // Respons√°vel por exibir os dados na tela. var_dump($queryString); Para realizar o primeiro teste, acesse o diret√≥rio do projeto por meio do terminal e execute o servidor embutido do PHP, conforme demonstrado abaixo:\n1 php -S localhost:8080 -t . index,php Ap√≥s execu√ß√£o do servidor, acesse o navegador de sua prefer√™ncia e insira a seguinte URL, sendo:\n1 localhost:8080/products?page=2\u0026amp;column=title\u0026amp;order=ASC Como resultado obtemos a seguinte string.\n1 string(29) \u0026#34;page=2\u0026amp;column=title\u0026amp;order=ASC\u0026#34; Ok, conseguimos obter todos os dados, por√©m n√£o √© nada pr√°tico seu consumo ou utiliza√ß√£o da maneira em que se encontra.\nPara isso devemos realizar o parser da string, vamos realizar a seguinte implementa√ß√£o.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;?php // Capturamos toda a query string $queryString = filter_input(INPUT_SERVER, \u0026#39;QUERY_STRING\u0026#39;); /** * Realizamos o parse da string * * Passamos a query string como primeiro par√¢metro. * Como segundo par√¢metro informamos a vari√°vel * que desejamos armazenar os valores. */ parse_str($queryString, $parseQueryString); // Resultado do parse da query string echo \u0026#39;\u0026lt;pre\u0026gt;\u0026#39;; var_dump($parseQueryString); echo \u0026#39;\u0026lt;/pre\u0026gt;\u0026#39;; Ap√≥s a implementa√ß√£o do c√≥digo acima, podemos atualizar o navegador e observar o resultado.\n1 2 3 4 5 6 7 8 array(3) { [\u0026#34;page\u0026#34;]=\u0026gt; string(1) \u0026#34;2\u0026#34; [\u0026#34;column\u0026#34;]=\u0026gt; string(5) \u0026#34;title\u0026#34; [\u0026#34;order\u0026#34;]=\u0026gt; string(3) \u0026#34;ASC\u0026#34; } De forma simples e pr√°tica obtemos um array contendo todos os valores informados em nossa query string!\nCom praticamente 2 linhas de c√≥digo implementamos nossa estrutura para parse.\nAqui cabe um lembrete, SEMPRE filtre e valide input e output!\nNunca devemos manipular, utilizar ou armazenar dados sem o devido tratamento, pois n√£o sabemos as inten√ß√µes do usu√°rio, podendo causar s√©rios danos!\nComo resultado final, o c√≥digo deve ficar semelhante ao descrito abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;?php // Capturamos toda a query string $queryString = filter_input(INPUT_SERVER, \u0026#39;QUERY_STRING\u0026#39;); /** * Realizamos o parse da string * * Passamos a query string como primeiro par√¢metro. * Como segundo par√¢metro informamos a vari√°vel que desejamos * inserir o resultado. */ parse_str($queryString, $parseQueryString); // Resultado da query string var_dump($queryString); // Resultado do parse da query string echo \u0026#39;\u0026lt;pre\u0026gt;\u0026#39;; var_dump($parseQueryString); echo \u0026#39;\u0026lt;/pre\u0026gt;\u0026#39;; Considera√ß√µes finais De forma simples foi implementado uma estrutura para captura e parse dos dados informados na query string.\nEspero que o post tenha sido √∫til e que tenha agregado valor, por favor deixe um coment√°rio dizendo o que achou ou caso tenha alguma d√∫vida, pois assim podemos aprender muito mais.\nGrande abra√ßo e sucesso nos projetos.\n","permalink":"https://diegobrocanelli.com.br/php/realizar-parse-da-query-string-de-forma-simples/","summary":"Ol√°, tudo bem!\nPode parecer simples, por√©m quem nunca teve a necessidade de realizar parse da query string para obter seus valores?\nPrincipalmente quando n√£o estamos utilizando um framework, micro framework ou componente para isso.\nVou lhe demostrar que n√£o precisamos de nada disso para realizar essa tarefa!\nO que √© query String? √â parte da URL, onde cont√©m dados sendo transmitidos.\nExemplo: 1 http://meusite.com.br/produto?chave=valor\u0026amp;outraChave=outroValor Como podemos analisar no exemplo acima, para que possamos informar os valores desejados na URL iniciamos com o caractere ‚Äò?","title":"Como realizar parse da query string de forma simples com PHP"},{"content":"YAGNI √© um acr√¥nimo para ‚ÄúYou Aren‚Äôt Gonna Need It‚Äù (Voc√™ n√£o vai precisar disso) mantra pregado pela Extreme Programming (XP) onde se diz que n√£o devemos adicionar poss√≠veis novas funcionalidades ao software a n√£o ser que seja necess√°rio.\nN√≥s desenvolvedores de software temos a p√©ssima mania de tentar prever o futuro, implementando \u0026ldquo;aquele recurso\u0026rdquo; que economizar√° muito tempo, que convenhamos quase nunca usamos.\nToda \u0026ldquo;futurologia\u0026rdquo; empregada por mim s√≥ renderam dores de cabe√ßa, pois quase nunca s√£o utilizados, al√©m da manuten√ß√£o que ser√° aplicado no c√≥digo, sendo uma carga desnecess√°ria ao projeto.\nQuando inflamos o escopo da implementa√ß√£o geramos mais camadas e dimensionamos de forma err√¥nea o esfor√ßo, impactando diretamente no tempo de desenvolvimento do projeto.\nCom o tempo elevado no projeto temos consecutivamente um gasto maior ($$$), muitos desenvolvedores n√£o visualizam por esse √¢ngulo, por√©m convido a refletir sobre esse ponto.\nEstou plenamente convencido que devemos focar em entregar solu√ß√µes s√≥lidas, eficazes e bem constru√≠das.\nDevemos deixar os problemas do futuro para o futuro, pois muito provavelmente o escopo do projeto sofrer√° altera√ß√µes, o que √© urgente hoje amanh√£ pode n√£o ser mais. üòâ\nO custo para refatorar o c√≥digo √© amplo e depende de diversos fatores dentre eles quando ser√° executado, por exemplo;\nRefatorar c√≥digo em desenvolvimento sempre ser√° mais tranquilo, menos custoso e estressante do que em homologa√ß√£o e principalmente em produ√ß√£o, pois est√£o em camadas muito diferentes.\nQuero deixar claro que implementar apenas o necess√°rio √© diferente de fazer uma boa implementa√ß√£o, sempre devemos nos preocupar em escrever c√≥digos simples, reutiliz√°veis, coesos, seguindo padr√µes etc.\nAp√≥s ado√ß√£o do YAGNI a forma como soluciono os problemas mudou, aumentando o foco, escrevendo menos c√≥digo consecutivamente mais leg√≠vel e menos verboso. üôÇ\n√â importante que o time siga esse princ√≠pio, por√©m caso n√£o siga voc√™ certamente encontrar√° resist√™ncia, siga implementando aos poucos e ressaltando as vantagens e benef√≠cios do YAGNI e com o tempo a ado√ß√£o ser√° natural.\nConsidera√ß√µes finais: Podemos observar que o princ√≠pio YAGNI √© um conceito simples, por√©m como quase tudo que √© simples sua compreens√£o e ado√ß√£o √© complexo, por√©m com ganhos significativos.\nPrincipais erros cometidos sem o uso do YAGNI:\nC√≥digos mais verbosos; Mais c√≥digo para manter; Funcionalidades desnecess√°rias; C√≥digos dif√≠ceis de se manter. Pontos positivos do YAGNI:\nEconomia de tempo; Economia de dinheiro; Menos estresse; üôÇ Menos c√≥digo para manter; Melhor qualidade de c√≥digo. Convido a todos a deixar seu coment√°rio, descrevendo seu ponto de vista e/ou sua experi√™ncia com¬†o princ√≠pio.\nEspero que o post tenha sido √∫til e que tenha lhe agregado valor.\nGrande abra√ßo e sucesso nos projetos.\n","permalink":"https://diegobrocanelli.com.br/php/yagni-voce-nao-vai-precisar-disso/","summary":"YAGNI √© um acr√¥nimo para ‚ÄúYou Aren‚Äôt Gonna Need It‚Äù (Voc√™ n√£o vai precisar disso) mantra pregado pela Extreme Programming (XP) onde se diz que n√£o devemos adicionar poss√≠veis novas funcionalidades ao software a n√£o ser que seja necess√°rio.\nN√≥s desenvolvedores de software temos a p√©ssima mania de tentar prever o futuro, implementando \u0026ldquo;aquele recurso\u0026rdquo; que economizar√° muito tempo, que convenhamos quase nunca usamos.\nToda \u0026ldquo;futurologia\u0026rdquo; empregada por mim s√≥ renderam dores de cabe√ßa, pois quase nunca s√£o utilizados, al√©m da manuten√ß√£o que ser√° aplicado no c√≥digo, sendo uma carga desnecess√°ria ao projeto.","title":"YAGNI ‚Äì Voc√™ n√£o vai precisar disso"},{"content":"Ol√°, tudo bem?!\n√â¬†comum atualizar o fork do projeto que contribuirmos no GitHub.\nPois conforme contribu√≠mos outros contribuidores tamb√©m fazem o mesmo, com isso o fork fica desatualizado.\nNeste momento podemos ficar com receio de contribuir, por n√£o dominar o Git e GitHub.\nPara atualizar o fork o processo √© muito simples e iremos aprender neste post. Para realizar a atualiza√ß√£o ser√° utilizado o upstream.\nObs: Todos os comandos abaixo devem ser executados via terminal na raiz do seu fork.\nAdicionando um reposit√≥rio remoto Devemos adicionar um reposit√≥rio remoto, no caso devemos adicionar o reposit√≥rio base original!\n1 git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git Atualizando o upstream Ap√≥s adicionarmos o reposit√≥rio devemos atualizar o upstream. Para isso execute o comando abaixo.\n1 git fetch upstream Realizando o commit das informa√ß√µes Com o upstream atualizado e supondo que estamos no branch master, devemos realizar o merge ou rebase das informa√ß√µes obtidas na atualiza√ß√£o.\n1 git rebase upstream/master master Aqui cabe uma nota, fiz uso do rebase, por√©m poderia ser utilizado o merge. Obviamente h√° diferen√ßas entre o rebase e o merge, entretanto cabe em um post a parte para melhor detalhamento.\nEnviando para o GitHub Para que possamos atualizar o GitHub basta executar o comando abaixo.\n1 git push Considera√ß√µes Viram como √© simples atualizar o fork, com poucos comandos foi realizado todo o processo.\nEspero que tenham apreciado o conte√∫do e que o mesmo agregue em seu dia a dia.\nCaso tenha alguma d√∫vida, dica, sugest√£o deixe nos coment√°rios, para que possamos aprender cada vez mais.\nGrande abra√ßo e sucesso nos projetos.\n","permalink":"https://diegobrocanelli.com.br/git/atualizando-seu-fork-no-github/","summary":"Ol√°, tudo bem?!\n√â¬†comum atualizar o fork do projeto que contribuirmos no GitHub.\nPois conforme contribu√≠mos outros contribuidores tamb√©m fazem o mesmo, com isso o fork fica desatualizado.\nNeste momento podemos ficar com receio de contribuir, por n√£o dominar o Git e GitHub.\nPara atualizar o fork o processo √© muito simples e iremos aprender neste post. Para realizar a atualiza√ß√£o ser√° utilizado o upstream.\nObs: Todos os comandos abaixo devem ser executados via terminal na raiz do seu fork.","title":"Atualizando seu fork no GitHub"},{"content":"Ol√°, Tudo bem?!\nQuem nunca dedicou tempo para analisar como seria o controle da vers√£o do seu sistema, ou teve problemas com ‚Äúaquela solu√ß√£o infal√≠vel‚Äù, tem tamb√©m quem nunca se preocupou com isso, por√©m, j√° deve ter sofrido pois aquela lib favorita que utiliza no projeto quebrou a compatibilidade ap√≥s um simples update?!\nAo desenvolvermos algum sistema/componente/lib/framework seja l√° o que for, um ponto importante √©, como ser√° controlada a sua vers√£o?\nUm bom controle de vers√£o deixar√° o sistema mais confi√°vel, devidamente documentado para a comunidade e tamb√©m para quem est√° desenvolvendo, seja um time ou individual.\n√â legal quando voc√™ cria algo em sua casa somente para estudos, por√©m, se o objetivo √© maior, dur√°vel e de confian√ßa devemos desde o inicio adotar um sistema de vers√£o.\nNeste post iremos abordar os seguintes t√≥picos:\nA solu√ß√£o Pontos Positivos; Os tr√™s pilares; Exemplo de uso real; Considera√ß√µes. A Solu√ß√£o Tenho gostado muito do Semantic Version, um padr√£o para controlar a vers√£o dos¬†softwares, simples e eficaz.\nPontos positivos F√°cil compreens√£o; Leitura simples; Evita ‚Äúdependency hell‚Äù (Inferno de depend√™ncia); Permite que o pacote seja distribu√≠do corretamente pelos gerenciadores de pacotes; Mant√©m um hist√≥rico sem√¢ntico do componente. Ok, por√©m, como uso isso?\nOs tr√™s pilares Basicamente composto por tr√™s grupos num√©ricos, sendo:\nMAJOR (Maior)\nNeste n√≠vel de controle √© permitido quebra de compatibilidade, onde s√£o implementados mudan√ßas ou features que ir√£o quebrar em rela√ß√£o a ver√£o anterior. Cabe salientar que n√£o necessariamente deve haver quebra de compatibilidade, pois se poss√≠vel a melhor abordagem √© evitar quebras.\nEx: v.1.0.0 MINOR (Menor)\nQuando √© adicionado novos recursos ao componente, por√©m, n√£o havendo quebra de compatibilidade. N√£o se √© permitido quebrar compatibilidade neste n√≠vel.\nEx: v.0.0.0 PATCH (Corre√ß√µes)\nNeste n√≠vel s√£o implementados apenas corre√ß√µes no componente, n√£o deve ocorrer quebra de compatibilidade.\nEx: v.0.0.1 Para melhor compreens√£o, a Semantic Version disp√µem de 12 t√≥picos que auxilia no processo de controle, tentarei sintetizar em alguns pontos principais, sendo:\nNunca quebrar vers√£o que n√£o seja¬†na MAJOR; Cada incremento deve ser de 1 em 1; Toda corre√ß√£o de bug, n√£o deve quebrar de compatibilidade; Cada nova feature deve incrementar a MINOR version. Exemplo de uso real Suponhamos que estamos criando uma lib para converter string em CSV e lan√ßamos nossa API na vers√£o v.1.0.0.\nEm seguida, implementamos uma feture onde permite converter os dados tabelados em um documento PDF. Com isso agora temos a vers√£o v.1.1.0.\nAp√≥s a comunidade fazer uso da lib, foram reportados bugs a serem corrigidos, totalizando 6 bugs. Ap√≥s corre√ß√£o e¬†lan√ßamento do patch de corre√ß√µes temos a vers√£o v.1.1.6.\nComo observado, o controle da vers√£o tornou o uso do componente simples e a comunidade n√£o teve dores de cabe√ßa para atualizar a vers√£o. üôÇ\nConsidera√ß√µes O uso de componente de terceiros √© praticamente inevit√°vel no desenvolvimento de softwares hoje em dia. Podemos tamb√©m lan√ßar componentes que outros desenvolvedores ir√£o consumir. Seguindo as defini√ß√µes do Semantic Version evitamos o ‚Äúdependency hell‚Äù e deixamos nosso componente confi√°vel e devidamente versionado para a comunidade/cliente.\nNeste post abordei o tema tomando como base o mundo Open Source, por√©m, as boas pr√°ticas e defini√ß√µes que foram listados no post podem e devem ser introduzidos nos softwares distribu√≠dos comercialmente. No meu ponto de vista √© imposs√≠vel manter um projeto dur√°vel sem ter bem definido v√°rios pilares e um deles com certeza √© o controle da sua vers√£o.\nEspero que tenham apreciado e que o conte√∫do tenha agregado conhecimento, convido que deixe suas d√∫vidas, elogios ou sugest√µes nos coment√°rios, pois assim podemos aprender cada vez mais.\nUm grande abra√ßo e sucesso em seus projetos üôÇ\n","permalink":"https://diegobrocanelli.com.br/semantic-version/controlando-a-versao-do-software-like-a-boss/","summary":"Ol√°, Tudo bem?!\nQuem nunca dedicou tempo para analisar como seria o controle da vers√£o do seu sistema, ou teve problemas com ‚Äúaquela solu√ß√£o infal√≠vel‚Äù, tem tamb√©m quem nunca se preocupou com isso, por√©m, j√° deve ter sofrido pois aquela lib favorita que utiliza no projeto quebrou a compatibilidade ap√≥s um simples update?!\nAo desenvolvermos algum sistema/componente/lib/framework seja l√° o que for, um ponto importante √©, como ser√° controlada a sua vers√£o?","title":"Como controlar a vers√£o do software like a boss com Semantic Version"},{"content":"Ol√°, tudo bem?!\nRolou a 15 edi√ß√£o do hhbr, nesta edi√ß√£o trago para voc√™s uma palestra super bacana apresentada pelo mestre Davi Marcondes sobre Estrutura de dados com SPL no PHP.\nUma palestra recheada de muito conte√∫do e exemplos pr√°ticos das estruturas de dados implementadas utilizando SPL.\nVoc√™ que quer aprender a utilizar de forma correta e aumentar a performance dos seus algoritmos, ent√£o aperte o play e aproveite o mega conte√∫do üôÇ\nDados da palestra Tema: ‚ÄúSPL e Estruturas de Dados‚Äù Palestrante: Davi Marcondes Moreira Site:¬†http://devdrops.me Twitter: https://twitter.com/devdrops GitHub: https://github.com/devdrops Comunidade: http://phpdojeitocerto.tumblr.com/ Link dos slides: https://speakerdeck.com/devdrops/spl-estruturas-de-dados-hhbr Espero que tenham apreciado, lembrando que todo m√™s temos uma nova edi√ß√£o com uma super palestra com temas diversos sobre o mundo da TI.\nQualquer d√∫vida, convido que deixem nos coment√°rios tanto do Post quanto do v√≠deo, para podermos aprender cada vez mais!\nGrande abra√ßo!\n","permalink":"https://diegobrocanelli.com.br/php/hhbr-15-spl-e-estruturas-de-dados/","summary":"Ol√°, tudo bem?!\nRolou a 15 edi√ß√£o do hhbr, nesta edi√ß√£o trago para voc√™s uma palestra super bacana apresentada pelo mestre Davi Marcondes sobre Estrutura de dados com SPL no PHP.\nUma palestra recheada de muito conte√∫do e exemplos pr√°ticos das estruturas de dados implementadas utilizando SPL.\nVoc√™ que quer aprender a utilizar de forma correta e aumentar a performance dos seus algoritmos, ent√£o aperte o play e aproveite o mega conte√∫do üôÇ","title":"hhbr: 15 ‚Äì SPL e Estruturas de Dados (v√≠deo)"},{"content":"Ol√°, tudo bem?!\nRolou a 14 edi√ß√£o do hhbr, nesta edi√ß√£o trago para voc√™s uma talk bacana que produzi apresentando o Composer, a ferramenta de gest√£o de depend√™ncias do PHP.\nUma talk voltada para o p√∫blico iniciante, por√©m, focado em incentivar a ado√ß√£o da ferramentas pelos desenvolvedores PHP, demonstrando os principais recursos da ferramenta.\nDados da palestra Tema: \u0026ldquo;Iniciando com Composer\u0026rdquo; Palestrante: Diego Brocanelli Site: http://diegobrocanelli.com.br Twitter: https://twitter.com/diego_b2 GitHub: https://github.com/Diego-Brocanelli Links comentados https://getcomposer.org/ http://www.php-fig.org/ Espero que tenham apreciado, lembrando que todo m√™s temos uma nova edi√ß√£o com uma super palestra com temas diversos sobre o mundo da TI.\nQualquer d√∫vida, convido que deixem nos coment√°rios tanto do Post quanto do v√≠deo, para podermos aprender cada vez mais!\nGrande abra√ßo!\n","permalink":"https://diegobrocanelli.com.br/php/hhbr-14-iniciando-com-composer-video/","summary":"Ol√°, tudo bem?!\nRolou a 14 edi√ß√£o do hhbr, nesta edi√ß√£o trago para voc√™s uma talk bacana que produzi apresentando o Composer, a ferramenta de gest√£o de depend√™ncias do PHP.\nUma talk voltada para o p√∫blico iniciante, por√©m, focado em incentivar a ado√ß√£o da ferramentas pelos desenvolvedores PHP, demonstrando os principais recursos da ferramenta.\nDados da palestra Tema: \u0026ldquo;Iniciando com Composer\u0026rdquo; Palestrante: Diego Brocanelli Site: http://diegobrocanelli.com.br Twitter: https://twitter.com/diego_b2 GitHub: https://github.com/Diego-Brocanelli Links comentados https://getcomposer.","title":"HHBR: 14 ‚Äì Iniciando com Composer (v√≠deo)"},{"content":"Ol√° pessoal, tudo bem?!\nRolou a 13 edi√ß√£o do HHBR com o grande Henrique Bastos, foi uma edi√ß√£o fant√°stica, onde rolou um super bate papo recheado de perguntas feitas pela comunidade durante a grava√ß√£o.\nNesta edi√ß√£o abordamos diversos temas como carreira , programa√ß√£o, estilo de vida e muito mais.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Palestrante: Henrique Bastos Site: http://henriquebastos.net/ Site: http://welcometothedjango.com.br/ Canal: https://www.youtube.com/henriquebastosnet Twitter: https://twitter.com/henriquebastos GitHub: https://github.com/henriquebastos Links comentados http://smallactsmanifesto.org/ Espero que tenham apreciado, lembrando que todo m√™s temos uma nova edi√ß√£o com uma super palestra com temas diversos sobre o mundo da TI.\nGrande abra√ßo!\n","permalink":"https://diegobrocanelli.com.br/video/henrique-bastos/","summary":"Ol√° pessoal, tudo bem?!\nRolou a 13 edi√ß√£o do HHBR com o grande Henrique Bastos, foi uma edi√ß√£o fant√°stica, onde rolou um super bate papo recheado de perguntas feitas pela comunidade durante a grava√ß√£o.\nNesta edi√ß√£o abordamos diversos temas como carreira , programa√ß√£o, estilo de vida e muito mais.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Palestrante: Henrique Bastos Site: http://henriquebastos.net/ Site: http://welcometothedjango.com.br/ Canal: https://www.","title":"HHBR: 13 ‚Äì Henrique Bastos (v√≠deo)"},{"content":"Uma forma simples e r√°pida de gerar imagens QR Code.\nRecentemente tive a oportunidade de implementar QR Code em uma aplica√ß√£o. Com isso iniciei uma s√©rie de pesquisa de libs que facilitariam essa minha tarefa.\nAp√≥s testar diversas libs encontrei a BaconQrCode e para meu prop√≥sito encaixou perfeitamente.\nCom isso resolvi compartilhar a experi√™ncia com voc√™s por meio deste post.\nRequisitos PHP \u0026gt;= 7.1 Ext-gd Para este post, gostaria de simular uma nova implementa√ß√£o em um sistema existente, para isso criei uma estrutura simples com Silex e Twig para servir como alicerse de aplica√ß√£o, ap√≥s clonar o reposit√≥rio ou baixar o zip basta executar o comando pelo terminal na raiz do projeto para instalar suas depend√™ncias.\n1 composer install Aguarde o processo de instala√ß√£o finalizar, em seguida execute o comando abaixo para iniciar a aplica√ß√£o.\n1 php -S localhost:8080 -t public public/index.php Abra seu navegador e acesse a url localhost:8080, como resultado teremos uma representa√ß√£o similar ao exibido abaixo.\nUma breve explica√ß√£o dos diret√≥rios do sistema: config Cont√©m as configura√ß√µes b√°sicas da aplica√ß√£o. public Destinado ao nosso arquivo index.php para inicializa√ß√£o da aplica√ß√£o. public/img Diret√≥rio onde iremos armazenar nossos QR Codes. routes Cont√©m as regras de configura√ß√£o da nossa rota. Iremos utilizar o arquivo contido nele. views Todas as views da aplica√ß√£o est√£o contidas nesse diret√≥rio. Antes de iniciarmos a ‚Äúcodar‚Äù como se n√£o houvesse o amanh√£, antes vamos planejar nosso processo e alinhar nosso objetivo.\nTemos uma aplica√ß√£o onde devemos implementar um gerador de QR Code, onde no final deve ser exibido na view para o usu√°rio poder consultar, sendo assim temos:\nDevemos criar a estrutura de diret√≥rios para conter nossos c√≥digos. Implementar a regra de neg√≥cio para gerar QR Codes. Passar para a view o resultado, para que assim o usu√°rio possa consultar a imagem. Sem mais delongas, vamos iniciar a implementa√ß√£o do novo recurso.\n1. Configura√ß√£o e cria√ß√£o de estrutura de diret√≥rio Na raiz do projeto abra o arquivo composer.json e vamos incluir nossa regra de autoload.\n1 2 3 4 5 \u0026#34;autoload\u0026#34;:{ \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\\u0026#34;: \u0026#34;src//\u0026#34; } } Ap√≥s cria√ß√£o do autoloader, vamos incluir a lib respons√°vel por gerar o QR Code, inclua a seguinte linha no ‚Äúrequire‚Äù, sendo:\n1 \u0026#34;bacon/bacon-qr-code\u0026#34;: \u0026#34;dev-master\u0026#34; O composer.json deve ficar como o exibido abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 { \u0026#34;name\u0026#34;: \u0026#34;diego/post-qrcode\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Estrutura de projeto para auxiliar no post sobre QR Code\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;BSD-3-Clause\u0026#34;, \u0026#34;authors\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Diego Brocanelli\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;diegod2@msn.com\u0026#34; } ], \u0026#34;minimum-stability\u0026#34;: \u0026#34;dev\u0026#34;, \u0026#34;require\u0026#34;: { \u0026#34;silex/silex\u0026#34;: \u0026#34;^2.2\u0026#34;, \u0026#34;twig/twig\u0026#34;: \u0026#34;^2.4\u0026#34;, \u0026#34;phpunit/phpunit\u0026#34;: \u0026#34;^6.4@dev\u0026#34;, \u0026#34;bacon/bacon-qr-code\u0026#34;: \u0026#34;dev-master\u0026#34; }, \u0026#34;autoload\u0026#34;:{ \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\\u0026#34;:\u0026#34;src//\u0026#34; } } } Com as devidas inclus√µes realizadas devemos atualizar as depend√™ncias do projeto, no terminal na raiz do projeto execute o seguinte comando:\n1 composer update Devemos agora criar a estrutura de diret√≥rio, na raiz do projeto crie um diret√≥rio chamado ‚Äúsrc‚Äù e dentro dele um diret√≥rio chamado ‚ÄúQRCode‚Äù.\nNossa arquitetura est√° completa, definimos que nossas regras para gera√ß√£o de QRCode ser√° armazenado dentro do diret√≥rio ‚Äúsrc/QRCode‚Äù.\n2. Implementa√ß√£o da estrutura de c√≥digo Devemos criar nossa estrutura de c√≥digo, para que assim torne-se f√°cil consumido o recurso, facilitando tamb√©m que qualquer membro da nossa equipe possa dar manuten√ß√£o ou novas implementa√ß√µes.\nPodemos iniciar a construir nossa classe, correto? N√£o!!!\nAntes vamos implementar a camada de testes, caso voc√™ n√£o conhe√ßa ou tenha h√°bito de testar suas aplica√ß√µes recomendo fortemente que adote esta pr√°tica, estude sobre, pois √© outra vida quando passamos a testar nossas aplica√ß√µes, trazendo maior qualidade e garantia de funcionamento üôÇ\nO projeto j√° disp√µem do PHPUnit em sua depend√™ncia, uma excelente ferramenta para testar nossa aplica√ß√£o.\nNa raiz do projeto crie o diret√≥rio ‚Äútests‚Äù e dentro dele crie a classe ‚ÄúQRCodeTests.php‚Äù, nossa¬†implementa√ß√£o dos testes deve ficar como o demonstrado abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 \u0026lt;?php declare(strict_types=1); use PHPUnit\\Framework\\TestCase; \u0026#34;src/QRCode\u0026#34; use DiegoBrocanelli\\QRCode\\QRCode; class QRCodeTest extends TestCase { protected $qrCode; public function setUp() { $this-\u0026gt;qrCode = new QRCode(); } public function testGenerateQRCodesuccessfully() : void { $this-\u0026gt;assertTrue( $this-\u0026gt;qrCode-\u0026gt;generate(\u0026#39;content\u0026#39;, 200, \u0026#39;my_qr_code.png\u0026#39;) ); } public function testFailGenerateQRCode() { $this-\u0026gt;assertFalse( $this-\u0026gt;qrCode-\u0026gt;generate(\u0026#39;my name\u0026#39;, 300, \u0026#39;\u0026#39;) ); } /** * @expectedException TypeError */ public function testTypeErrorGenerateQRCode() { $this-\u0026gt;assertFalse( $this-\u0026gt;qrCode-\u0026gt;generate(12, \u0026#39;120\u0026#39;, \u0026#39;\u0026#39;) ); } } Analisando nossa classe de teste, podemos observar que a mesma tem uma implementa√ß√£o simples, por√©m, abordamos casos de sucesso e falha na cria√ß√£o de QR Code.\nPara rodar nossos testes, execute pelo terminal o comando abaixo.\n1 vendor/bin/phpunit --verbose tests/ Aqui cabe uma observa√ß√£o, foi incluso o par√¢metro ‚Äúverbose‚Äù para exibir com maior detalhe o resultado dos nossos testes.\nE como pudemos observar os testes falharam, pois n√£o implementamos nossa regra de neg√≥cio, este processo √© parte da cultura de testes que estamos seguindo.\nPodemos agora implementar nossa classe que ir√° gerar os QR Codes, dentro do diret√≥rio ‚Äúsrc/QRCode‚Äù crie a classe ‚ÄúQRCode.php‚Äù e dentro da classe vamos criar o m√©todo ‚Äúgenerate‚Äù, seguindo nossa estrutura de testes este m√©todo recebe tr√™s par√¢metro e retorna boolean, veja o resultado da implementa√ß√£o logo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 \u0026lt;?php declare(strict_types=1); namespace DiegoBrocanelli\\QRCode; use BaconQrCode\\Renderer\\Image\\Png; use BaconQrCode\\Writer; use Exception; class QRCode { private $fullPath = __DIR__.\u0026#39;/../../public/img/\u0026#39;; /** * Respons√°vel por gerar a imagem do QR Code e armazenar no diret√≥rio: * ./public/img * * @param string $content * @param int $dimension * @param string $imgName * @return boolean */ public function generate(string $content, int $dimension, string $imgName) : bool { try{ $renderer = new Png(); $renderer-\u0026gt;setHeight($dimension); $renderer-\u0026gt;setWidth($dimension); $writer = new Writer($renderer); $writer-\u0026gt;writeFile($content, $this-\u0026gt;fullPath.$imgName); if(!file_exists($this-\u0026gt;fullPath.$imgName)){ throw new Exception(); } return true; }catch(Exception $exc){ return false; } } } Vamos analisar as implementa√ß√µes realizadas acima.\nLinhas 7, 8 e 9. Realizamos as importa√ß√µes dos recursos ser√£o utilizados. Linha 13. Definimos o path absoluto onde as imagens ser√£o armazenadas. Linha27 Instanciamos a classe Png, respons√°vel por gerar o arquivo .png. Linhas 28 e 29 Definimos as dimens√µes que a imagem ter√°, no caso, definimos que sempre ser√° uma imagem quadrada. Linha 31 Instanciamos o componente respons√°vel por gerar e armazenar a imagem no diret√≥rio especificado. Linha 32 Aqui passamos 2 par√¢metros, sendo: O conte√∫do que ser√° incluso no QR Code, este conte√∫do que os leitores ir√£o exibir. Lembrando que pode ser qualquer string, por exemplo URL. Passamos o path absoluto da imagem juntamente com seu nome, para armazenar o arquivo .png. Linha 34 Verificamos se de fato a imagem foi gerada. Como observado a implementa√ß√£o √© simples, visando seu uso de forma descomplicada.\nVamos executar nossos testes? Execute novamente o comando do phpunit no terminal para rodar os testes.\nSUCESSO!!! Todos os nossos testes passaram! üôÇ\n√â fant√°stico ver os testes passarem, pois temos maior confian√ßa que nossas implementa√ß√µes est√£o corretas.\nVamos agora implementar nosso c√≥digo para que quando o usu√°rio acione o bot√£o ‚ÄúGerar‚Äù seja gerado e exibido o QR Code.\nPara isso abra o arquivo ‚Äúroutes/routes.php‚Äù e vamos consumir nossa implementa√ß√£o, o arquivo deve ficar semelhante ao demonstrado abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;?php declare(strict_types=1); require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; use DiegoBrocanelli\\QRCode\\QRCode; $app-\u0026gt;match(\u0026#39;/\u0026#39;, function() use($app) { $request = $search_html = filter_input(INPUT_SERVER, \u0026#39;REQUEST_METHOD\u0026#39;); $img = \u0026#39;\u0026#39;; if($request === \u0026#39;POST\u0026#39;){ $qrCode = new QRCode(); $img = \u0026#39;my_first_qrcode.png\u0026#39;; $qrCode-\u0026gt;generate(\u0026#39;Hello World with QR Code\u0026#39;, 400, $img); } return $app[\u0026#39;twig\u0026#39;]-\u0026gt;render(\u0026#39;index.html\u0026#39;, [\u0026#39;img\u0026#39; =\u0026gt; $img]); }); Ao receber uma ‚Äúrequest POST‚Äù √© instanciado a classe que criamos e passamos as informa√ß√µes para o m√©todo ‚Äúgenerate‚Äù.\nPara validarmos nossa aplica√ß√£o, volte ao navegador e pressione F5 em seguida acionar o bot√£o ‚ÄúGerar‚Äù.\nE temos nosso QR Code!!!\nPara ler o QR Code abra uma app em seu smartphone e aponte para a imagem, onde ser√° exibido a mensagem que inserimos no corpo do QR Code.\nFinalizamos nossa implementa√ß√£o, seguimos nosso planejamento, temos cobertura de testes e o usu√°rio est√° gerando e visualizando ZR Codes.\nEspero que este post possa lhe ajudar, e que facilite seu dia a dia.\nCaso tenha alguma d√∫vida deixe um coment√°rio, ser√° fant√°stico podermos conversar e aprender cada vez mais üôÇ\nGrande abra√ßo e sucesso em seus projetos.\n","permalink":"https://diegobrocanelli.com.br/php/qr-code-php/","summary":"Uma forma simples e r√°pida de gerar imagens QR Code.\nRecentemente tive a oportunidade de implementar QR Code em uma aplica√ß√£o. Com isso iniciei uma s√©rie de pesquisa de libs que facilitariam essa minha tarefa.\nAp√≥s testar diversas libs encontrei a BaconQrCode e para meu prop√≥sito encaixou perfeitamente.\nCom isso resolvi compartilhar a experi√™ncia com voc√™s por meio deste post.\nRequisitos PHP \u0026gt;= 7.1 Ext-gd Para este post, gostaria de simular uma nova implementa√ß√£o em um sistema existente, para isso criei uma estrutura simples com Silex e Twig para servir como alicerse de aplica√ß√£o, ap√≥s clonar o reposit√≥rio ou baixar o zip basta executar o comando pelo terminal na raiz do projeto para instalar suas depend√™ncias.","title":"QR Code com PHP"},{"content":"Recentemente lancei um post Como usar Traits no PHP, com isso surgiu uma duvida nos coment√°rios realizado pelo Paulo Dias, onde questionou como poderia utilizar a mesma implementa√ß√£o porem fazendo uso de namespace.\nNeste post vou implementar o mesmo conceito do post anterior demonstrando o uso de namespace.\nPara nossa implementa√ß√£o devemos criar o diret√≥rio com o nome ‚Äòtraits_com_namespace‚Äô, ap√≥s sua cria√ß√£o devemos acessar a raiz do diret√≥rio pelo terminal e executar o seguinte comando:\n1 composer init Como observado acima, iremos utilizar o composer para que o mesmo fa√ßa o autoload do nosso projeto. Caso n√£o conhe√ßa o composer recomendo a leitura do meu post Iniciando com composer.\nAo executar o comando, basta seguir o passo a passo solicitado pelo composer e gerar o arquivo composer.json.\nAp√≥s¬†a finaliza√ß√£o, abra o arquivo composer.json e vamos incluir nossa regra para autoload, veja o trecho de c√≥digo abaixo.\n1 2 3 4 5 \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\\u0026#34;:\u0026#34;src//\u0026#34; } } Devemos incluir o trecho de c√≥digo no arquivo composer.json ap√≥s a chave ‚Äòminimum-stability‚Äô, como demonstrado abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 { \u0026#34;name\u0026#34;: \u0026#34;diego-brocanelli/traits-autoloader\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Traits com autoloader\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;BSD-3-Clause\u0026#34;, \u0026#34;authors\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Diego Brocanelli\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;diegod2@msn.com\u0026#34; } ], \u0026#34;minimum-stability\u0026#34;: \u0026#34;dev\u0026#34;, \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\\u0026#34;:\u0026#34;src//\u0026#34; } } } Vamos detalhar o que configuramos de autoload:\nEstamos utilizando PSR-4 e definimos que nossa namespace iniciar√° com ‚ÄòDiegoBrocanelli‚Äô¬†e nosso c√≥digo ficar√° dentro do diret√≥rio src. Para que nosso autoload seja gerado devemos executar o seguinte comando pelo terminal:\n1 composer dumpautoload Ao finalizar a geran√ß√£o do autoload ser√° criado o diret√≥rio vnedor e teremos o seguinte retorno no terminal.\n1 Generating autoload files Devemos agora criar nossa estrutura de c√≥digo, uma boa pratica √© separar nossos c√≥digos com isso vamos criar um diret√≥rio App dentro de src.\nPodemos agora criar a classe ShopCar.php dentro do diret√≥rio App e importar a implementa√ß√£o do post anterior, veja como ficou a implementa√ß√£o abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;?php namespace DiegoBrocanelli\\App; /** * @author Diego Brocanelli \u0026lt;diegod2@msn.com\u0026gt; */ class ShopCar { /** * Buy product */ public function Buy() { return \u0026#34;Product purchase finish...\u0026#34;; } } A implementa√ß√£o acima est√° 99.9% id√™ntica ao post anterior, porem, se repararmos na linha 3 foi definido a namespace, onde seguiu conforme configura√ß√µes anteriores definindo a raiz DiegoBrocanelli seguido do diret√≥rio onde a classe encontra-se.\nVamos agora implementar nossa trait LogTrait.php dentro do diret√≥rio APP, veja abaixo a implementa√ß√£o.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;?php namespace DiegoBrocanelli\\App; /** * @author Diego Brocanelli \u0026lt;diegod2@msn.com\u0026gt; */ trait LogTrait { /** * Log info. * * @return string */ public function info() { return \u0026#39;Included a new log...\u0026#39;; } } Novamente o c√≥digo acima est√° 99.9% id√™ntico ao do post original, porem, na linha 03 definimos a namespace da nossa trait. Que como encontra-se no mesmo diret√≥rio da classe ShopCar mant√©m-se o mesmo.\nPor fim, devemos atualizar nossa classe ShopCar para consumir nossa trait, veja implementa√ß√£o abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;?php namespace DiegoBrocanelli\\App; /** * @author Diego Brocanelli \u0026lt;diegod2@msn.com\u0026gt; */ class ShopCar { use LogTrait; /** * Buy product */ public function Buy() { return \u0026#34;Product purchase finish... {$this-\u0026gt;info()}\u0026#34;; } } Viram como foi simples! Como ambos os c√≥digos encontram-se na mesma namespace, apenas utilizamos o comando ‚Äòuse‚Äô para chamar nossa trait e assim termos o¬†acesso ao m√©todo info().\nPara validar nosso projeto vamos criar um arquivo index.php na raiz do projeto e implementar a chamada da classe ShopCar, veja resultado da implementa√ß√£o¬†abaixo:\n1 2 3 4 5 6 7 8 9 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\App\\ShopCar; $shopCar = new ShopCar(); echo $shopCar-\u0026gt;buy(); Podemos observar, logo no in√≠cio do arquivo importamos o autoload do composer, para temos acesso as nossas classes.\nEm seguida importamos a classe ShopCar, utilizando o comando ‚Äòuse‚Äô.\nA partir deste momento podemos instanciar a classe ShopCar¬†e acessar o m√©todo buy().\nAbra o terminal e acesse a raiz do projeto e execute o seguinte comando:\n1 php -S localhost:8080 index.php Abra seu navegador e acesse a url:\n1 localhost:8080 Como resultado, devemos obter o mesmo resultado obtido no post anterior, veja abaixo o retorno esperado.\n1 Product purchase finish... Included a new log... Com isso finalizamos nossa implementa√ß√£o. De forma simples e pr√°tica implementamos o mesmo conceito utilizando namespaces.\nFoi uma implementa√ß√£o sem uso de framework, porem, o conceito de namespace √© aplicado em todos os frameworks do ecossistema PHP.\nEspero que este conte√∫do tenha sanado a d√∫vida do nosso amigo Paulo Dias e todos que possam vir a utilizar e est√£o com d√∫vidas.\nCaso voc√™ tenha alguma d√∫vida fa√ßa como o Paulo, deixe nos coment√°rios, com isso podemos ir gerando cada vez mais conte√∫do com um debate saud√°vel, ficarei muito feliz em poder ajudar na medida do poss√≠vel.\nGrande abra√ßo e at√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/como-usar-traits-no-php-com-namespace/","summary":"Recentemente lancei um post Como usar Traits no PHP, com isso surgiu uma duvida nos coment√°rios realizado pelo Paulo Dias, onde questionou como poderia utilizar a mesma implementa√ß√£o porem fazendo uso de namespace.\nNeste post vou implementar o mesmo conceito do post anterior demonstrando o uso de namespace.\nPara nossa implementa√ß√£o devemos criar o diret√≥rio com o nome ‚Äòtraits_com_namespace‚Äô, ap√≥s sua cria√ß√£o devemos acessar a raiz do diret√≥rio pelo terminal e executar o seguinte comando:","title":"Como usar Traits no PHP com namespace"},{"content":"Traits no PHP √© um recurso que pode nos auxiliar e muito em nossos projetos, melhorando o reuso de c√≥digo.\nAntes de iniciarmos esse aprendizado, √© interessante ressaltar que Traits √© um recurso disponibilizado no PHP desde sua vers√£o 5.4 lan√ßada em 01/03/2012, com o intuito de melhorar o reuso de c√≥digos.\nBasicamente Traits s√£o pequenos trechos de c√≥digos, muito similar a classes abstratas onde n√£o podemos instanciar uma trait, por√©m, com a diferen√ßa que podemos utiliza-lo em diversas classes ao mesmo tempo de forma independente.\nPara nosso exemplo, utilizaremos a seguinte estrutura, crie um diret√≥rio chamado ecommerce.\nEm seguida devemos criar a classe ShopCar.php, com a seguinte estrutura.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php /** * @author Diego Brocanelli \u0026lt;diegod2@msn.com\u0026amp;\u0026gt; */ class ShopCar { /** * Buy product */ public function Buy() { return \u0026#34;Product purchase finish...\u0026#34;; } } Como podemos observar, criamos uma classe simples com a finalidade comprar produtos.\nVamos rodar nosso projeto para analisar o resultado do c√≥digo implementado at√© o momento.\nCrie um arquivo chamado ‚Äúindex.php‚Äù, dentro dele devemos importar nossa classe e chamar o m√©todo buy(), veja o resultado da implementa√ß√£o abaixo:\n1 2 3 4 5 6 7 \u0026lt;?php require_once __DIR__.\u0026#39;/ShopCar.php\u0026#39;; $shopCar = new ShopCar(); echo $shopCar-\u0026amp;\u0026gt;buy(); Acesse com o terminal a raiz do projeto e insira o seguinte c√≥digo:\n1 php -S localhost:8080 index.php Por final abra um navegador e acesse o projeto:\n1 localhost:8080 Como resultado temos:\n1 Product purchase finish... Ap√≥s validarmos nosso c√≥digo, devemos agora criar nossa Trait com o seguinte nome ‚ÄòLogTrait.php‚Äô, onde ser√° respons√°vel por armazenar os logs necess√°rios em nossa aplica√ß√£o.\nObserva√ß√£o: Apenas inclu√≠mos ‚ÄúTrait‚Äù em seu nome para¬†fins did√°ticos, n√£o sendo obrigat√≥rio o uso dessa pr√°tica.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;?php /** * @author Diego Brocanelli \u0026lt;diegod2@msn.com\u0026amp;\u0026gt; */ trait LogTrait { /** * Log info. * * @return string */ public function info() { return \u0026#39;Included a new log...\u0026#39;; } } Como podemos observar, iniciamos com a palavra reservada ‚Äútrait‚Äù e criamos nosso m√©todo info().\ncom isso nossa primeira ‚Äútrait‚Äù est√° finalizada! Viram como √© simples, bom agora devemos consumir esse recurso. Abra a classe ShopCar para que possamos importar nossa trait. Veja o resultado da implementa√ß√£o abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;?php require_once __DIR__.\u0026#39;/LogTrait.php\u0026#39;; /** * @author Diego Brocanelli \u0026lt;diegod2@msn.com\u0026amp;\u0026gt; */ class ShopCar { use LogTrait; /** * Buy product */ public function Buy() { return \u0026#34;Product purchase finish... {$this-\u0026amp;\u0026gt;info()}\u0026#34;; } } Muito similar a uma class, porem chamamos nossa trait dentro da declara√ß√£o da classe (declaramos ‚Äòuse‚Äô dentro da classe), onde a partir disso temos o acesso ao m√©todo info() implementado em nossa trait.\nPara analisar as novas implementa√ß√µes, basta acessar nosso projeto novamente e atualizar o nevegador, abaixo segue o resultado esperado:\n1 Product purchase finish... Included a new log... Com isso implementamos nossa primeira trait de forma simples e r√°pida! Podemos utilizar quantas traits desejarmos em nossa classe, por√©m, devemos sempre utilizar com parcim√¥nia para que nossa classe n√£o se torne um monstrinho de 3 cabe√ßas e 6 patas üôÇ\nEspero que tenham apreciado e que o conte√∫do agregue valor em seus projetos, convido para que deixem um coment√°rio caso tenham d√∫vida, critica, sugest√µes ou elogios.\nGrande abra√ßo e at√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/como-usar-traits-no-php/","summary":"Traits no PHP √© um recurso que pode nos auxiliar e muito em nossos projetos, melhorando o reuso de c√≥digo.\nAntes de iniciarmos esse aprendizado, √© interessante ressaltar que Traits √© um recurso disponibilizado no PHP desde sua vers√£o 5.4 lan√ßada em 01/03/2012, com o intuito de melhorar o reuso de c√≥digos.\nBasicamente Traits s√£o pequenos trechos de c√≥digos, muito similar a classes abstratas onde n√£o podemos instanciar uma trait, por√©m, com a diferen√ßa que podemos utiliza-lo em diversas classes ao mesmo tempo de forma independente.","title":"Como usar Traits no PHP"},{"content":"Uma op√ß√£o para licenciar seu software.\nA licen√ßa MIT¬†foi criada pelo Massachusetts Institute of Technology, sendo uma licen√ßa copyleft utilizada no mundo Open Source.\nCaso n√£o conhe√ßa esse termo open source, recomendo a leitura do meu post Software livre de c√≥digo aberto e software gratuito, quais s√£o suas diferen√ßas?. üôÇ\nEscolher uma licen√ßa n√£o √© uma tarefa f√°cil, onde nem sempre temos conhecimento dos detalhes que a permeiam. Com o objetivo de auxiliar na compreens√£o, vou abordar os pontos que constituem a licen√ßa MIT.\nVis√£o geral Permissiva com texto expl√≠cito ao tratar dos direitos, qualquer pessoa pode obter uma c√≥pia de um software e sua documenta√ß√£o que est√£o sobre a licen√ßa MIT.\n√â necess√°rio que se mantenha o aviso de copyright e uma c√≥pia da licen√ßa em todas as c√≥pias do software, para que a integridade da licen√ßa seja preservada.\nAbaixo podemos observar os pontos positivos e proibitivos inerente a licen√ßa MIT.\nPontos permitido Uso comercia O software e seus derivados podem ser utilizados para fins comerciais. Modifica√ß√£o √â permitido a modifica√ß√£o do software. Distribui√ß√£o √â permitido a distribui√ß√£o do software. Sublicenciamento Voc√™ pode conceder uma sublicen√ßa, podendo assim modificar e distribuir o software a terceiros. Ponto proibitivo Responsabilidades assegurada O software √© distribu√≠do sem garantia. Autor e licen√ßa n√£o podem ser responsabilizados por poss√≠veis perdas ou danos pelo uso do software. Utiliza√ß√£o Devemos criar uma arquivo LICENSE e nele incluir o texto referente a licen√ßa MIT, atentando ao fato de incluir as duas informa√ß√µes necess√°rias, sendo: Ano Nome completo do titular da licen√ßa. Abaixo podemos visualizar uma c√≥pia do texto.\n1 2 3 4 5 6 7 \u0026gt; Copyright 2017 Diego Brocanelli \u0026gt; \u0026gt; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u0026amp;#8220;Software\u0026amp;#8221;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: \u0026gt; \u0026gt; The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. \u0026gt; \u0026gt; THE SOFTWARE IS PROVIDED \u0026amp;#8220;AS IS\u0026amp;#8221;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Um detalhe interessante √© que o GitHub est√° facilitando e muito a utiliza√ß√£o de licen√ßas nos reposit√≥rios.\nAo criar um reposit√≥rio, podemos selecionar a licen√ßa desejada, sendo gerado automaticamente o arquivo LICENSE com os dados devidamente preenchidos.\nDevemos dedicar tempo do projeto para a escolha da licen√ßa que melhor se enquadra as suas necessidades.\nTendo em vista que uma m√° escolha pode gerar impactos que inviabilize o lan√ßamento do produto.\no iniciar os estudos, n√£o tinha a menor no√ß√£o da infinidade de varia√ß√µes, tipos, import√¢ncia e pontos que cada uma contempla.\n√â muito simples clonar um reposit√≥rio no GitHub, ou instalar um pacote pelo composer, porem, em um ambiente comparativo isso deve ser levado a s√©rio, para evitar dores de cabe√ßa hom√©ricas no futuro.\nN√£o sou advogado e sim um desenvolvedor curioso, dito isso recomendo que consulte profissionais qualificados para que possa auxiliar na escolha da licen√ßa que melhor se encaixe ao seu software.\nEspero que tenham apreciado e que o conte√∫do lhe tenha sido √∫til.\nCaso tenha alguma d√∫vida, cr√≠tica construtiva ou elogio deixo aberto os coment√°rios para que possamos debater e aprender mais sobre esse tema.\nAbra√ßos! üôÇ\n","permalink":"https://diegobrocanelli.com.br/open-source/a-licenca-mit/","summary":"Uma op√ß√£o para licenciar seu software.\nA licen√ßa MIT¬†foi criada pelo Massachusetts Institute of Technology, sendo uma licen√ßa copyleft utilizada no mundo Open Source.\nCaso n√£o conhe√ßa esse termo open source, recomendo a leitura do meu post Software livre de c√≥digo aberto e software gratuito, quais s√£o suas diferen√ßas?. üôÇ\nEscolher uma licen√ßa n√£o √© uma tarefa f√°cil, onde nem sempre temos conhecimento dos detalhes que a permeiam. Com o objetivo de auxiliar na compreens√£o, vou abordar os pontos que constituem a licen√ßa MIT.","title":"A Licen√ßa MIT"},{"content":"Go √© uma linguagem de programa√ß√£o fant√°stica, criado pela galera do Google. Nesta edi√ß√£o¬†ZeuCXB¬†traz uma palestra robusta, recheado de exemplos para n√≥s.\nPegue seu bloco de notas, prepare uma pipoca e desfrute de uma super palestra.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema‚ÄùPor que Golang?‚Äù Palestrante: Eliseu Codinhoto (@zeucxb) Canal: https://youtube.com/euprogramadoroficial Twitter: https://twitter.com/zeucxb GitHub: https://github.com/zeucxb LinkedIn: https://www.linkedin.com/in/zeucxb Slides: https://docs.google.com/presentation/d/1AHAvXOgkLBZuTmVMP574nXEcO0Dw-DHG2O7AZG-qf5s/edit#slide=id.p Links Comentados Sites https://golang.org/ https://gobyexample.com/ Empresas https://nuveo.com.br/ http://planrockr.com/pt-br/ Newsletter http://asemanago.com.br Livros Programando em Go Crie aplica√ß√µes com a linguagem do Google: https://www.casadocodigo.com.br/products/livro-google-go A Linguagem de Programa√ß√£o Go: https://novatec.com.br/livros/linguagem-de-programacao-go/ Introdu√ß√£o √† linguagem Go: https://novatec.com.br/livros/introducao-linguagem-go/ Cursos GoIniciando com a linguagem do Google: https://www.alura.com.br/curso-online-golang Canais Youtube Eu Programador: https://www.youtube.com/channel/UC7c2c7E1L9xhCinShl8-iZA Gopherconbrasil: https://www.youtube.com/channel/UCGFVA_XvkUoMWpKVH0IrjUA Cesar Gimenes: https://www.youtube.com/channel/UCxRoRvJi7NbC2boKAV70t_g Espero que tenham apreciado, at√© a pr√≥xima.\nAbra√ßos!\n","permalink":"https://diegobrocanelli.com.br/video/por-que-golang-video/","summary":"Go √© uma linguagem de programa√ß√£o fant√°stica, criado pela galera do Google. Nesta edi√ß√£o¬†ZeuCXB¬†traz uma palestra robusta, recheado de exemplos para n√≥s.\nPegue seu bloco de notas, prepare uma pipoca e desfrute de uma super palestra.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema‚ÄùPor que Golang?‚Äù Palestrante: Eliseu Codinhoto (@zeucxb) Canal: https://youtube.com/euprogramadoroficial Twitter: https://twitter.com/zeucxb GitHub: https://github.com/zeucxb LinkedIn: https://www.linkedin.com/in/zeucxb Slides: https://docs.google.com/presentation/d/1AHAvXOgkLBZuTmVMP574nXEcO0Dw-DHG2O7AZG-qf5s/edit#slide=id.p Links Comentados Sites https://golang.","title":"hhbr : 12 ‚Äì Por que Golang? (V√≠deo)"},{"content":"Bolt √© um CMS muito poderoso e amigo do desenvolvedor, adotando as melhores pr√°ticas e tecnologias em sua estrutura como por exemplo o Silex, twig¬†(caso tenha interesse, disponho de um post explorando a engine ‚ÄúTwig ‚Äì A Super engine template para PHP ‚Äú), doctrine entre outros.\nNesta d√©cima primeira edi√ß√£o do canal hhbr temos o provil√©gio de aprecia uma super palestra do grane Jack Makiyama, onde ele apresenta os conceitos e arquitetura do Bolt, bem como uma bela dose de live code com muita m√£o na massa para apresentar as diversas features bacanas que o CMS disp√µem.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúBolt uma alternativa ao WordPress‚Äù Palestrante: Jack Makiyama Twitter: @jackmakiyama GitHub: github.com/jackmakiyama LinkedIn: linkedin.com/in/jackmakiyama Links Mencionados https://bolt.cm/ https://twig.sensiolabs.org/ Espero que tenham apreciado, at√© a pr√≥xima.\nAbra√ßos!\n","permalink":"https://diegobrocanelli.com.br/php/bolt-uma-alternativa-ao-wordpress-video/","summary":"Bolt √© um CMS muito poderoso e amigo do desenvolvedor, adotando as melhores pr√°ticas e tecnologias em sua estrutura como por exemplo o Silex, twig¬†(caso tenha interesse, disponho de um post explorando a engine ‚ÄúTwig ‚Äì A Super engine template para PHP ‚Äú), doctrine entre outros.\nNesta d√©cima primeira edi√ß√£o do canal hhbr temos o provil√©gio de aprecia uma super palestra do grane Jack Makiyama, onde ele apresenta os conceitos e arquitetura do Bolt, bem como uma bela dose de live code com muita m√£o na massa para apresentar as diversas features bacanas que o CMS disp√µem.","title":"hhbr : 11 ‚Äì Bolt uma alternativa ao WordPress (v√≠deo)"},{"content":"Relacionamento de entidade com Doctrine √© um recurso poderoso e que facilita e muito nosso trabalho com a manipula√ß√£o de entidades.\nEste post √© uma continua√ß√£o do Aprenda a construir um CRUD simples, f√°cil e r√°pido com Doctrine onde sua leitura √© fundamental, pois √© a base para este post.\nEm nosso projeto temos todo o CRUD de produtos implementado, porem √© natural que um produto seje ligado a¬†uma categoria.\nPara que possamos construir esse vinculo ‚Äúrelacionamento‚Äù devemos criar a entidade Category em ‚Äúsrc\\Category.php‚Äú.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \u0026lt;?php namespace DiegoBrocanelli; /** * @Entity @Table(name=\u0026#34;categorys\u0026#34;) */ class Category { /** * @Id @Column(type=\u0026#34;integer\u0026#34;) @GeneratedValue */ protected $id; /** * @Column(type=\u0026#34;string\u0026#34;) */ protected $name; public function getId() { return $this-\u0026gt;id; } public function getName() { return $this-\u0026gt;name; } public function setName($name) { $this-\u0026gt;name = $name; } } Vamos descrever em detalhes a implementa√ß√£o utilizada na entidade.\nclass Category @Entity Respons√°vel por informar ao doctrine que a classe √© uma entidade. @Table(name=‚Äùcategorys‚Äù) Informamos que a entidade representa a tabela ‚Äòcategorys‚Äô no banco de dados. Gerando o banco de dados Ap√≥s a cria√ß√£o da entidade, devemos executar o seguinte comando no terminal para a cria√ß√£o do banco de dados:\n1 vendor\\bin\\doctrine orm:schema-tool:create Como retorno, ser√° exibido uma mensagem similar ao demonstrado abaixo:\n1 2 3 4 ATTENTION: This operation should not be executed in a production environment. Creating database schema... Database schema created successfully! Cadastrando categorias Para que seja poss√≠vel vincular um produto a uma categoria, antes devemos cadastrar no banco de dados as categorias que desejamos.\nSegue abaixo a estrutura que ser√° utilizada para persistir as informa√ß√µes no banco de dados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if (isset($argv)) { // coletamos o nome passado pelo usu√°rio no terminal $newCategoryName = $argv[1]; // Instanciamos nossa entidade categorys $category = new DiegoBrocanelli\\Category(); // Passamos o novo nome para a entidade $category-\u0026gt;setName($newCategoryName); // Persistimos seus dados $entityManager-\u0026gt;persist($category); // Descarregamos a a√ß√£o $entityManager-\u0026gt;flush(); // Para melhor visualiza√ß√£o do resultado, retornamos uma mensagem // com o id do registro salvo no DB. echo \u0026#39;Created category with ID \u0026#39;.$category-\u0026gt;getId().\u0026#34;\\n\u0026#34;; } Como podemos observar, a forma como foi constru√≠do o processo √© simples e bem descritiva.\nPrimeiro recebemos o nome desejado, para que em seguida seja instanciado nossa Entidade Category, informamos os dados e inserimos no banco de dados.\nPara podemos validar o c√≥digo, vamos cadastrar nossa primeira categoria. Para tal a√ß√£o basta inserir o seguinte comando no terminal:\n1 php src\\CreateCategory.php livros Como resultado teremos nossa primeira categoria cadastrada!\n1 Created category with ID 1 Alterando a entidade produtos para receber uma categoria Criamos a entidade Category, cadastramos nossa primeira categoria, porem agora devemos criar o vinculo ao qual desejamos entre Produto e Categoria.\nAbra a entidade Products em ‚Äúsrc\\Products.php‚Äù e vamos implementar nossas altera√ß√µes desejadas.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 \u0026lt;?php namespace DiegoBrocanelli; /** * @Entity @Table(name=\u0026#34;products\u0026#34;) */ class Products { /** * @Id @Column(type=\u0026#34;integer\u0026#34;) @GeneratedValue */ protected $id; /** * @Column(type=\u0026#34;string\u0026#34;) */ protected $name; /** * @ManyToOne(targetEntity=\u0026#34;Category\u0026#34;) */ protected $category; /** * @Column(type=\u0026#34;datetime\u0026#34;) */ protected $created; public function getId() { return $this-\u0026gt;id; } public function getName() { return $this-\u0026gt;name; } public function setName($name) { $this-\u0026gt;name = $name; } public function setCreated(\\DateTime $created) { $this-\u0026gt;created = $created; } public function getCreated() { return $this-\u0026gt;created; } public function setCategory($category) { $this-\u0026gt;category = $category; } public function getCategory() { return $this-\u0026gt;category; } } As novidades que encontramos em nossa entidade √© o atributo category e os m√©todos setCategory() e getCategory(), vamos analisar suas implementa√ß√µes:\nprivate $category; @ManyToOne(targetEntity=‚ÄùCategory‚Äù) Com essa annontation, informamos ao Doctrine que desejamos criar um relacionamento muitos para um, vinculando a entidade Category. public function setCategory($category) M√©todo respons√°vel por inserir a categoria na entidade Products. public function getCategory() M√©todo respons√°vel por retornar a categoria do produto. Ap√≥s as devidas implementa√ß√µes finalizadas, devemos implementar as novas estruturas no processo de cadastro de produto ‚ÄúInsert‚Äú, para isso abra o arquivo CreateProduct.php em ‚Äúscr/CreateProduct.php‚Äù e implemente as seguintes modifica√ß√µes.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if(isset($argv)){ // Coletamos o nome do produto $newProductName = $argv[1]; // Coletamos o id da categoria $categoryId = $argv[2]; // Instanciamos nossa entidade Products $product = new DiegoBrocanelli\\Products(); // Passamos o novo nome para a entidade $product-\u0026gt;setName($newProductName); // Passamos a data de cria√ß√£o para a aentidade $product-\u0026gt;setCreated(new \\DateTime(date(\u0026#39;Y-m-d H:i:s\u0026#39;))); // Realizamos a pesquisa da categoria desejada. $category = $entityManager-\u0026gt;find(\u0026#39;DiegoBrocanelli\\Category\u0026#39;, $categoryId); // Verificamos se a categoria desejada existe no banco de dados if(is_null($category)){ echo \u0026#39;Categoria desejada n√£o encontrada!\u0026#39;; die; } // Passamos o objeto Category para nosso produto. $product-\u0026gt;setCategory($category); // Persistimos seus dados $entityManager-\u0026gt;persist($product); // Descarregamos a a√ß√£o $entityManager-\u0026gt;flush(); // Para melhor visualiza√ß√£o do resultado, retornamos uma mensagem // com o id do registro salvo no DB. echo \u0026#39;Created Product with ID \u0026#39;.$product-\u0026gt;getId().\u0026#34;\\n\u0026#34;; } A base da estrutura de insert de produtos continua a mesma, o diferencial encontra-se em receber o id da categoria desejada, pesquisar seus dados no banco de dados e caso seja encontrado inserimos no objeto Products para seu devido cadastro no banco.\nVamos cadastrar nosso primeiro produto, para isso insira o seguinte comando no terminal:\n1 php src\\CreateProduct.php PHP_OO 1 Como retorno teremos nosso primeiro produto cadastrado e vinculado a uma categoria üôÇ\n1 Created Product with ID 1 Caso seja realizado a tentativa de cadastro com um categoria inexistente, ser√° retornado a mensagem:\n1 Categoria desejada n√£o encontrada! Viram como foi simples as implementa√ß√µes para criarmos uma estrutura de entidades interligadas e realizar os cadastro de ambos üôÇ\nPesquisando produtos Podemos realizar a pesquisa de produtos cadastrados, e para nossa felicidade n√£o temos que mudar em nada a estrutura contida no arquivo ListProduct.php encontrado em ‚Äúsrc/ListProduct.php‚Äù pois a estrutura de pesquisa permanece a mesma, porem vamos apenas alterar a forma de exibi√ß√£o dos dados no terminal, para melhor exibi√ß√£o dos dados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if (isset($entityManager)) { //Importamos o repository que nos auxiliar√° com a pesquisa. $productRepository = $entityManager-\u0026gt;getRepository(\u0026#39;DiegoBrocanelli\\Products\u0026#39;); // Podemos acessar o m√©todo findAll() respons√°vel por retornar todos os // registros cadastrados em nossa tabela products $products = $productRepository-\u0026gt;findAll(); // Realizamos uma itera√ß√£o de dados foreach ($products as $product) { var_dump(get_class($product-\u0026gt;getCategory()));die; // Exibimos o resultado de cada registro encontrado echo \u0026#39;Nome do Produto: \u0026#39; . $product-\u0026gt;getName() . \u0026#34;\\n\u0026#34;; echo \u0026#39;Categoria: \u0026#39; . $product-\u0026gt;getCategory()-\u0026gt;getName() . \u0026#34;\\n\u0026#34;; echo \u0026#34;+-------------------------------------------------------------+ \\n\u0026#34;; } } Como podemos observar, o objeto product acessa seu m√©todo getCategory() que por sua vez tem acesso ao objeto que fornece acesso ao m√©todo getName() implementado na classe Category.\nO Doctrine retorna uma classe Proxy que nos fornece acesso a classe Category,¬†a partir disso o atributo fornece acesso a qualquer m√©todo implementado em category, respeitando_ assim a estrutura OO de nossas classes._\nO exemplo descrito no post √© simples, pois tem o intuito de ser direto e produtivo, o Dotrine tem um leque de op√ß√µes para trabalhar com os diversos tipos de relacionamentos de entidade.\nEspero que tenha apreciado o conte√∫do e que tamb√©m agregue valor aos seus projetos, lembrando que uma boa arquitetura da camada de modelo constru√≠da com Doctrine tonar mais simples sua manuten√ß√£o, e caso encontre necess√°rio o porte para outros frameworks ou estruturas, tudo ser√° mais simples e com menos dores de cabe√ßa e acredite quando eu lhe digo que voc√™ apreciar√° de ter esse fardo tirado da suas costas.\nDicas, sugest√µes, criticas ou elogios recomento que deixem nos coment√°rios, para que assim possamos compartilhar ainda mais conhecimento.\nGrande abra√ßo e at√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/relacionando-entidades-com-doctrine/","summary":"Relacionamento de entidade com Doctrine √© um recurso poderoso e que facilita e muito nosso trabalho com a manipula√ß√£o de entidades.\nEste post √© uma continua√ß√£o do Aprenda a construir um CRUD simples, f√°cil e r√°pido com Doctrine onde sua leitura √© fundamental, pois √© a base para este post.\nEm nosso projeto temos todo o CRUD de produtos implementado, porem √© natural que um produto seje ligado a¬†uma categoria.","title":"Relacionando entidades com Doctrine"},{"content":"Ol√°, tudo bem?!\nEm nossas aplica√ß√µes com frequ√™ncia trabalhamos com informa√ß√µes/dados que n√£o sofrem altera√ß√£o com muita frequ√™ncia, porem ela √© carregada e processada o tempo todo em que o recurso √© requisitado, acarretando em perda de performance e processamento desnecess√°rio (maior custo para manter o sistema $$$) e uma experi√™ncia n√£o muito agrad√°vel para o usu√°rio.\nUmas das poss√≠veis formas de resolver esse nosso problema √© armazenando essa informa√ß√µes em cache, para isso vamos utilizar o componente Zend-Cache, componente robusto e que nos fornece um leque de possibilidades muito bacana para nossa caixa de ferramenta.\nPara demonstrar seu potencial vamos implementar um cache simples para que possamos v√™-lo em pr√°tica.\nCrie a seguinte estrutura de diret√≥rios e arquivo:\nexemplo-cache-zend cache index.php Instala√ß√£o do componente Para instalar o Zend-Cache, basta acessar a raiz do projeto que criamos anteriormente e executar o seguinte comando:\n1 composer require zendframework/zend-cache Ap√≥s a instala√ß√£o do pacote, podemos dar in√≠cio a implementa√ß√£o do recurso.\nImplementa√ß√£o do recurso de cache com Filesystem Abra o arquivo index.php e importe o autoloader do composer, para que ele nos auxilie no consumo do componente Zend-Cache.\n1 2 3 \u0026lt;?php // Importa√ß√£o do autoloader do composer require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; Devemos agora importar o componente Zend-Cache\\StorageFactory.\n1 2 3 4 5 \u0026lt;?php // Importa√ß√£o do autoloader do composer require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Cache\\StorageFactory; Com as devidas configura√ß√µes implementadas, devemos agora criar nosso objeto que ser√° respons√°vel pelo gerenciamento do cache.\n1 2 3 4 5 6 7 8 9 10 // Cria√ßao via factory: $cache = StorageFactory::factory([ \u0026#39;adapter\u0026#39; =\u0026gt; [ \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;filesystem\u0026#39;,// tipo de cache. \u0026#39;options\u0026#39; =\u0026gt; [ \u0026#39;ttl\u0026#39; =\u0026gt; 15, // tempo que a informa√ß√£o ficar√° mantida no cache \u0026#39;cache_dir\u0026#39; =\u0026gt; \u0026#39;./cache\u0026#39; // diret√≥rio onde ser√° armazenado o arquivo de cache ], ], ]); Vamos detalhar um pouco nosso c√≥digo:\nAdapter name Aqui especificamos qual tipo de cache desejamos utilizar, em nosso exemplo estamos utilizando o filesystem, onde ir√° ser criado um arquivo que ir√° armazenar nossa informa√ß√£o. Existem tamb√©m as op√ß√µes: Apc. Dba. Memcached. Redis. Options ttl Op√ß√£o √© definido em segundos o tempo que a informa√ß√£o ser√° mantida em cache. cache_dir Op√ß√£o que informa o local onde ser√° criado os arquivos de cache. O componente de Zend-Cache disp√µem de muitas outras configura√ß√µes, com isso recomendo que caso queira explorar mais a fundo o componente acesse sua documenta√ß√£o.\nVamos agora inserir nossa informa√ß√£o no cache, para isso devemos implementar a seguinte estrutura:\n1 2 3 4 5 6 7 8 9 10 11 $dadosNoCache = $cache-\u0026gt;getItem(\u0026#39;dados\u0026#39;);// solicita o cache var_dump($cache-\u0026gt;getItem(\u0026#39;dados\u0026#39;));// exibe o que foi coletado // caso n√£o tenha informa√ß√£o no cache if(is_null($dadosNoCache)){ $cache-\u0026gt;addItems([ \u0026#39;dados\u0026#39; =\u0026gt; \u0026#39;meus dados: \u0026#39;.date(\u0026#39;Y-m-d H:i:s\u0026#39;),// dados que desejamos inserir no cache ]); } // Exibe os dados mantidos no cache. var_dump($cache-\u0026gt;getItem(\u0026#39;dados\u0026#39;)); No c√≥digo acima, basicamente requisitamos ao componente de cache para que o mesmo busque os dados armazenados, caso n√£o tenha nenhuma informa√ß√£o armazenada ser√° incluso os dados e exibido seu retorno para que possamos acompanhar o momento da inclus√£o das informa√ß√µes. A partir da inclus√£o dos dados no cache o componente ir√° criar um diret√≥rio e um arquivo ‚Äúexemplo-cache-zend/cache/zfcache-c5/zfcache-dados.data‚Äú.\nPara que possamos analisar o resultado abra o terminal na raiz do projeto e execute o seguinte comando:\n1 php index.php Ap√≥s executar o c√≥digo, ser√° retornado uma mensagem similar ao exibido abaixo:\n1 2 NULL string(31) \u0026#34;meus dados: 2017-05-19 19:15:49\u0026#34; O NULL √© referente a n√£o termos nada ainda armazenado em cache e a string representa os dados rec√©m armazenados, para validar nosso c√≥digo basta executar o c√≥digo novamente e analisar seu retorno, lembrando que as informa√ß√µes ficar√£o armazenadas por 15 segundos.\n1 2 string(31) \u0026#34;meus dados: 2017-05-19 19:15:49\u0026#34; string(31) \u0026#34;meus dados: 2017-05-19 19:15:49\u0026#34; Como podemos observar as duas strings s√£o id√™nticas, pois foram coletadas do nosso cache que acabamos de implementar, para que seja exibido novas informa√ß√µes devemos aguardar os 15 segundos que configuramospara que todo o processo de inser√ß√£o seja executado novamente.\nA implementa√ß√£o foi simples e r√°pida,¬†o cache com filesystem permite apenas armazenarmos string, porem deixo uma dica, caso queira armazenar um array basta convert√™-lo para json armazen√°-lo em cache e assim que voc√™ retornar os dados converta-o novamente para array. üòâ\nEspero que tenham apreciado e que seja √∫til para voc√™ em seu dia a dia.\nCaso tenham alguma dica, sugest√£o, cr√≠tica ou elogios recomendo que deixem nos coment√°rios para que assim possamos gerar mais conte√∫do e aprender cada vez mais.\nUm grande abra√ßo e at√© mais! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/criando-cache-com-zend-cache/","summary":"Ol√°, tudo bem?!\nEm nossas aplica√ß√µes com frequ√™ncia trabalhamos com informa√ß√µes/dados que n√£o sofrem altera√ß√£o com muita frequ√™ncia, porem ela √© carregada e processada o tempo todo em que o recurso √© requisitado, acarretando em perda de performance e processamento desnecess√°rio (maior custo para manter o sistema $$$) e uma experi√™ncia n√£o muito agrad√°vel para o usu√°rio.\nUmas das poss√≠veis formas de resolver esse nosso problema √© armazenando essa informa√ß√µes em cache, para isso vamos utilizar o componente Zend-Cache, componente robusto e que nos fornece um leque de possibilidades muito bacana para nossa caixa de ferramenta.","title":"Criando cache com o Zend-Cache"},{"content":"Ol√°, tudo bem?!\nNo ecossistema PHP temos dispon√≠veis diversos projetos super bacanas, e para trabalhar na camada de banco de dados temos a nossa disposi√ß√£o o Doctrine, o mais popular projeto voltado para Database Storage e Object Mapping.\nO que voc√™ pode estar pensando √© ‚ÄúMeu Framework X j√° tem implementa√ß√µes para isso‚Äù, sim de fato todos os grandes frameworks de mercado tem dispon√≠vel componentes para abstra√ß√£o de banco de dados, porem uma das grandes vantagens do Doctrine √© justamente ele poder ser utilizado em praticamente qualquer framework ou estrutura de projeto.\nA partir do momento que voc√™ estrutura sua aplica√ß√£o para utilizar o Doctrine nada o impedir√° que no futuro voc√™ migre toda a l√≥gica para outro projeto, essa facilidade vai lhe poupar muitas dores de cabe√ßa quando chegar o momento de refatorar sua aplica√ß√£o.\nSem mais delongas, vamos analisar a estrutura que ser√° utilizada neste post, abaixo segue estrutura de diret√≥rios e arquivo.\nexemplo-doctrine config Ser√° armazenado toda a l√≥gica de configura√ß√£o da aplica√ß√£o. db Respons√°vel por armazenar o banco de dados (SQLite) e o dump que ser√° gerado. src Respons√°vel por conter toda a l√≥gica da nossa aplica√ß√£o. composer.json Configura√ß√µes do composer para o projeto. Conforme apresentado acima, crie a estrutura de diret√≥rios necess√°rios para a execu√ß√£o deste post.\nInstalando as depend√™ncias necess√°rias Abra o arquivo composer.json e insira o seguinte c√≥digo:\n1 2 3 4 5 6 7 8 9 10 11 12 { \u0026#34;require\u0026#34;: { \u0026#34;doctrine/orm\u0026#34;: \u0026#34;^2.5\u0026#34;, \u0026#34;doctrine/dbal\u0026#34;: \u0026#34;^2.5\u0026#34;, \u0026#34;symfony/yaml\u0026#34;: \u0026#34;^3.2\u0026#34; }, \u0026#34;autoload\u0026#34;:{ \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\\u0026#34;:\u0026#34;src/\u0026#34; } } } Como podemos observar, estamos utilizando os componentes do Doctrine e uma depend√™ncia¬†do Symfony. Ap√≥s a inser√ß√£o das configura√ß√µes, acesse a raiz do projeto e execute o seguinte comando pelo terminal:\n1 composer install Aguarde o processo de instala√ß√£o que pode levar alguns minutos dependendo da sua conex√£o de internet.\nConfigurando o projeto Agora devemos criar nossas configura√ß√µes necess√°rias para utiliza√ß√£o do componente, acesse o diret√≥rio ‚Äòexemplo-doctrine/config‚Äô e crie o arquivo ‚Äòbootstrap.php‚Äô . Neste arquivo iremos centralizar as configura√ß√µes necess√°rias para execu√ß√£o do Doctrine, segue c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u0026lt;?php // Importa√ß√£o do autoload do composer require_once __DIR__.\u0026#39;/../vendor/autoload.php\u0026#39;; // Importa√ß√£o dos pacotes necess√°rios use Doctrine\\ORM\\Tools\\Setup; use Doctrine\\ORM\\EntityManager; // Criar uma configura√ß√£o ORM do Doctrine simples \u0026#34;default\u0026#34; para utilizar Annotations $isDevMode = true; $configuration = Setup::createAnnotationMetadataConfiguration( [__DIR__.\u0026#39;/../src\u0026#39;], $isDevMode ); // Configura√ß√µes do banco de dados // Estamos utilizando o SQLite, para facilitar a reprodu√ß√£o do post $connection = [ \u0026#39;driver\u0026#39; =\u0026gt; \u0026#39;pdo_sqlite\u0026#39;, // Vamos utilizar o drive pdo do sqlite \u0026#39;path\u0026#39; =\u0026gt; __DIR__.\u0026#39;/../db/db.sqlite\u0026#39; // caminho onde ser√° armazenado o DB. ]; // Obtemos o Entity Manager $entityManager = EntityManager::create($connection, $configuration); Observa√ß√£o: O Doctrine suporta configura√ß√µes por Annontation, XML ou YAML, porem na minha opini√£o as annontations √© a forma mais clara e f√°cil de definir sua entidade, gerando o menor n√∫mero de arquivos poss√≠vel.\nAp√≥s a cria√ß√£o das configura√ß√µes, devemos criar um arquivo que nos auxiliar√° nas execu√ß√µes dos comandos pelo¬†terminal. Crie o arquivo ‚Äòcli-config.php_no diret√≥rio ‚Äòexemplo-doctrine/config‚Äô , segue c√≥digo abaixo:\n1 2 3 4 5 6 7 \u0026lt;?php // Importa√ß√£o do autoloader do composer require __DIR__.\u0026#39;/bootstrap.php\u0026#39;; // Retorna o componente que nos auxilia na utiliza√ß√£o do Schema tool // Necess√°rio para gerar Tabelas para trabalhar com metadados return \\Doctrine\\ORM\\Tools\\Console\\ConsoleRunner::createHelperSet($entityManager); Cria√ß√£o da entidade Products Com as devidas configura√ß√µes realizadas, o pr√≥ximo passo √© criar a entidade que representara nossa tabela do banco de dados, para isso crie a classe ‚ÄòProducts.php‚Äô dentro do diret√≥rio ‚Äòexemplo-doctrine/src‚Äô, segue c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 \u0026lt;?php namespace DiegoBrocanelli; /** * @Entity @Table(name=\u0026#34;products\u0026#34;) */ class Product { /** * @Id @Column(type=\u0026#34;integer\u0026#34;) @GeneratedValue */ protected $id; /** * @Column(type=\u0026#34;string\u0026#34;) */ protected $name; /** * @Column(type=\u0026#34;datetime\u0026#34;) */ protected $created; public function getId() { return $this-\u0026gt;id; } public function getName() { return $this-\u0026gt;name; } public function setName($name) { $this-\u0026gt;name = $name; } public function setCreated(\\DateTime $created) { $this-\u0026gt;created = $created; } public function getCreated() { return $this-\u0026gt;created; } } Como podemos observar, o c√≥digo acima √© bem simples contendo apenas atributos e m√©todos getters e setters, atentando ao fato de n√£o termos criado PHPDoc, para que assim foquemos apenas nos conceitos das annontations minimizando conflito de entendimento. √â por meio dessas annontations que iremos ‚Äòinformar‚Äô ao doctrine nossa entidade e suas especifica√ß√µes, segue abaixo maiores detalhes sobre as annontations utilizadas:\nClass Products @Entity Respons√°vel por informar ao Doctrine que esta nossa classe √© nossa entidade. @Table(name=‚Äùproducts‚Äù) Informamos que nossa entidade representa a tabela ‚Äòproducts‚Äô\u0026lt; contida no banco de dados. Column id @Id Informa que essa coluna √© primary key. @Column(type=‚Äùinteger‚Äù) efine o tipo ‚Äúinteiro‚Äù para a coluna. @GeneratedValue Informa o desejo de auto increment\u0026lt; para os valores dessa coluna. Column name @Column(type=‚Äùstring‚Äù) Define o tipo ‚Äòstring‚Äô para a coluna. Column created @Column(type=‚Äùdatetime‚Äù) Define o tipo Datetime\u0026lt; para a coluna. Observa√ß√£o: Assim que implementarmos a pesquisa ficar√° mais claro a estrutura do objeto gerado pelo Doctrine. Ap√≥s nossa entidade devidamente criada, podemos dar in√≠cio a implementa√ß√£o dos nosso recursos.\nCriando nosso banco de dados Ap√≥s a cria√ß√£o da entidade devemos realizar a cria√ß√£o do banco de dados, acesse a raiz do projeto e execute o seguinte comando:\n1 vendor\\bin\\doctrine orm:schema-tool:create vendor\\bin\\doctrine Esta parcela do comando referencia a utiliza√ß√£o do Doctrine que instalamos com o Composer. orm:schema-tool:creat Comando para cria√ß√£o do banco de dados, lembrando que o arquivo ser√° armazenado em ‚Äòexemplo-doctrine/db/db.sqlite‚Äô\u0026lt;. Ap√≥s execu√ß√£o do comando o retorno deve ser semelhante ao apresentado abaixo:\n1 2 3 4 ATTENTION: This operation should not be executed in a production environment. Creating database schema... Database schema created successfully! Como o pr√≥prio retorno nos informa, nunca devemos utilizar esta a√ß√£o em produ√ß√£o, apenas em ambiente de desenvolvimento!\nInserindo registros no banco de dados Para a implementa√ß√£o do recurso de insert,¬†crie a classe _‚ÄòCreateProduct.php‚Äô dentro do diret√≥rio _‚Äòexemplo-doctrine/src‚Äô, segue c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if (isset($argv)) { // coletamos o nome passado pelo usu√°rio no terminal $newProductName = $argv[1]; // Instanciamos nossa entidade Products $product = new DiegoBrocanelli\\Product(); // Passamos o novo nome para a entidade $product-\u0026gt;setName($newProductName); // Passamos a data de cria√ß√£o para a aentidade $product-\u0026gt;setCreated(new \\DateTime(date(\u0026#39;Y-m-d H:i:s\u0026#39;))); // Persistimos seus dados $entityManager-\u0026gt;persist($product); // Descarregamos a a√ß√£o $entityManager-\u0026gt;flush(); // Para melhor visualiza√ß√£o do resultado, retornamos uma mensagem // com o id do registro salvo no DB. echo \u0026#39;Created Product with ID \u0026#39;.$product-\u0026gt;getId().\u0026#34;\\n\u0026#34;; } Para realizarmos a inser√ß√£o de dados, execute o seguinte comando pelo terminal na raiz do projeto:\n1 php src\\CreateProduct.php produto_1 Resultado:\n1 Created Product with ID 1 Como podemos observar, com poucas linhas de c√≥digo criamos um recurso simples para inser√ß√£o de registro no banco de dados. üôÇ\nPesquisando todos os registros cadastrados Para a implementa√ß√£o do recurso de select,¬†crie a classe _‚ÄòListProduct.php‚Äô dentro do diret√≥rio _‚Äòexemplo-doctrine/src‚Äô, segue c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if (isset($entityManager)) { //Importamos o repository que nos auxiliar√° com a pesquisa. $productRepository = $entityManager-\u0026gt;getRepository(\u0026#39;DiegoBrocanelli\\Product\u0026#39;); // Podemos acessar o m√©todo findAll() respons√°vel por retornar todos os // registros cadastrados em nossa tabela products $products = $productRepository-\u0026gt;findAll(); // Realizamos uma itera√ß√£o de dados foreach ($products as $product) { // Exibimos o resultado de cada registro encontrado var_dump($product); } } Exemplo de retorno de pesquisa:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class DiegoBrocanelli\\Product#64 (3) { protected $id =\u0026gt; int(1) protected $name =\u0026gt; string(8) \u0026#34;\u0026#39;produto_1\u0026#34; protected $created =\u0026gt; class DateTime#61 (3) { public $date =\u0026gt; string(26) \u0026#34;2017-05-16 23:53:49.000000\u0026#34; public $timezone_type =\u0026gt; int(3) public $timezone =\u0026gt; string(17) \u0026#34;America/Sao_Paulo\u0026#34; } } Como podemos observar, com apenas a chamada do m√©todo findAll() obtemos todos os registros inseridos em nossa tabela no banco de dados, o atributo ‚Äòcreated‚Äô √© um objeto do tipo DateTime conforme configurado na entidade.\nPesquisando um produto em espec√≠fico Para a implementa√ß√£o do recurso que ir√° pesquisar um produto em especifico crie a classe ‚ÄòShowProduct.php‚Äô dentro do diret√≥rio‚Äòexemplo-doctrine/src‚Äô, segue c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if (isset($argv)) { // Recebemos o id informado $id = (int)$argv[1]; // Nosso entity manager nos fornece acesso ao m√©todo find() // no qual nos permite informar nossa entidade e o id para pesquisa $product = $entityManager-\u0026gt;find(\u0026#39;DiegoBrocanelli\\Product\u0026#39;, $id); // Caso n√£o seja encontrado nenhum produto com o id desejado // ser√° retornado mensagem informando o usu√°rio if($product === null){ echo \u0026#34;No product found. \\n\u0026#34;; exit(1); } // Caso o produto seja encontrado exibimos seu nome e data de cria√ß√£o echo sprintf(\u0026#39;-%s\\n\u0026#39;, $product-\u0026gt;getName() . \u0026#39; - \u0026#39; . $product-\u0026gt;getCreated()); } Como podemos observar, com o m√©todo find() podemos informar nossa entidade e o id do registro ao qual desejamos encontra na tabela.\nAtualizar produtos Para a implementa√ß√£o do recurso de update\u0026lt; crie a classe ‚ÄòUpdateProduct.php‚Äô dentro do diret√≥rio \u0026lt;‚Äòexemplo-doctrine/src‚Äô, segue c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if (isset($argv)) { // Recebemos o id do registro a ser atualizado $id = $argv[1]; // Recebemos o novo nome do produto $newName = $argv[2]; // Pesquisamos para valizar exist√™ncia do produto no banco de dados $product = $entityManager-\u0026gt;find(\u0026#39;DiegoBrocanelli\\Product\u0026#39;, $id); // Caso produto n√£o seja localizado, ser√° retornado mensagem infromando o usu√°rio if ($product === null) { echo \u0026#34;Product $id does not exist.\\n\u0026#34;; exit(1); } // Informamos o nome atual echo \u0026#39;Old name: \u0026#39; . $product-\u0026gt;getName() .\u0026#34;\\n\u0026#34;; // Inserimos o novo nome desejado para o produto $product-\u0026gt;setName($newName); // Executamos a a√ß√£o de update $entityManager-\u0026gt;flush(); // Retornamos para o usu√°rio o produto com seu novo nome echo \u0026#39;New name: \u0026#39; . $product-\u0026gt;getName() .\u0026#34;\\n\u0026#34;; } Como podemos observar, o processo de update ocorre sem mist√©rios de forma clara e f√°cil apenas manipulando o objeto e passando para que o Doctrine\u0026lt; fa√ßa todo o trabalho.\nRemover produtos Para a implementa√ß√£o do recurso de _delete \u0026lt;_crie a classe ‚ÄòDeleteProduct.php‚Äô dentro do diret√≥rio \u0026lt;‚Äòexemplo-doctrine/src‚Äô, segue c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \u0026lt;?php // Importamos o autoload do composer require_once __DIR__.\u0026#39;/../config/bootstrap.php\u0026#39;; // Como vamos trabalhar com envio de dados passados pelo terminal // apenas garanto que haja valor para que seja processado a a√ß√£o. if (isset($entityManager)) { // Recebemos o id do registro a ser atualizado $id = $argv[1]; // Pesquisamos para valizar exist√™ncia do produto no banco de dados $product = $entityManager-\u0026gt;find(\u0026#39;DiegoBrocanelli\\Product\u0026#39;, $id); // Caso produto n√£o seja localizado, ser√° retornado mensagem infromando o usu√°rio if ($product === null) { echo \u0026#34;Product $id does not exist.\\n\u0026#34;; exit(1); } // Executamos a a√ß√£o de remo√ß√£o $entityManager-\u0026gt;remove($product); // Efetiva a a√ß√£o de remo√ß√£o $entityManager-\u0026gt;flush(); // Retorna mensagem informativa de a√ß√£o realizada com sucesso para o usu√°rio echo \u0026#39;Product remove successfully!\u0026#39;; } Como podemos observar, o processo de remo√ß√£o √© similar a todos os demais processo, o Doctrine tem m√©todos descritivos que facilitam sua utiliza√ß√£o üôÇ\nRemover o banco de dados (Drop database) No dia a dia temos a necessidade de apagar nosso banco de dados, para isso o Doctrine\u0026lt; disponibiliza um recurso para nos auxiliar. Na raiz do nosso projeto execute o seguinte comando:\nExecute este comando com parcim√¥nia, ap√≥s sua execu√ß√£o seu banco de dados ser√° APAGADO!\n1 2 // Comando para APAGAR o banco de dados vendor\\bin\\doctrine orm:schema:drop --force Ap√≥s execu√ß√£o do comando ser√° exibido uma mensagem de retorno semelhante a descrita abaixo:\n1 2 Dropping database schema... Database schema dropped successfully! Gerar dump da nossa base de dados Um dos in√∫meros recursos bacanas que o D_octrine\u0026lt;_ disp√µem √© a cria√ß√£o de um arquivo dump\u0026lt; da base de dados,¬†arquivo que conter√° toda estrutura da tabela products\u0026lt;, para geramos nosso arquivo execute o seguinte comando na raiz do projeto:\n1 2 // Comando para gera√ß√£o de arquivo de dump da base de dados vendor\\bin\\doctrine orm:schema-tool:create --dump-sql \u0026gt; db/dump.sql Ap√≥s execu√ß√£o com sucesso do comando, ser√° criado nosso arquivo no diret√≥rio ‚Äòexemplo-doctrine/db/dump.sql‚Äô\u0026lt;, contendo a seguinte estrutura:\n1 2 3 4 5 CREATE TABLE products ( id INTEGER NOT NULL, name VARCHAR(255) NOT NULL, created DATETIME NOT NULL, PRIMARY KEY(id) ); Observa√ß√£o: O retorno se d√° um uma √∫nica linha, por√©m para que fique melhor sua visualiza√ß√£o no post foi quebrado em linhas.\nNo decorrer deste post podemos observar o qu√£o f√°cil √© a utiliza√ß√£o do Doctrine, infelizmente apenas abordamos uma pequena fra√ß√£o de todo o potencial e recursos que ele nos fornece. Caso tenha interesse em seguir com seus estudos indico que adquira o livro escrito pelo Elton Minneto ‚ÄúDoctrine na pr√°tica‚Äù antes que algu√©m pense o contr√°rio n√£o estou ganhando nenhum centavo para indicar o livro, estou fazendo pois √© o melhor livro de Doctrine\u0026lt; em PT-BR escrito por um profissional que respeito e admiro.\nEspero que tenham apreciado o post, ficou um pouco maior do que eu desejava, porem para abordar todo o ciclo de utiliza√ß√£o tentei ser o mais descritivo poss√≠vel para auxiliar a m√°ximo a compreens√£o das etapas, como dito anteriormente este post √© introdut√≥rio onde existem uma infinidade de recursos n√£o explorados que valem muito a pena serem estudados.\nDuvidas, sugest√µes, cr√≠tica ou elogios recomendo que deixe nos coment√°rios para que assim possamos interagir e gerar mais conhecimento.\nAt√© a pr√≥xima, abra√ßos! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/crud-simples-facil-e-rapido-com-doctrine/","summary":"Ol√°, tudo bem?!\nNo ecossistema PHP temos dispon√≠veis diversos projetos super bacanas, e para trabalhar na camada de banco de dados temos a nossa disposi√ß√£o o Doctrine, o mais popular projeto voltado para Database Storage e Object Mapping.\nO que voc√™ pode estar pensando √© ‚ÄúMeu Framework X j√° tem implementa√ß√µes para isso‚Äù, sim de fato todos os grandes frameworks de mercado tem dispon√≠vel componentes para abstra√ß√£o de banco de dados, porem uma das grandes vantagens do Doctrine √© justamente ele poder ser utilizado em praticamente qualquer framework ou estrutura de projeto.","title":"Aprenda a construir um CRUD simples, f√°cil e r√°pido com Doctrine"},{"content":"Ol√°, tudo bem?!\nTivemos a d√©cima edi√ß√£o do hhbr,¬†uma edi√ß√£o recheada de muita informa√ß√£o!\nNesta edi√ß√£o temos a honra de trazer um projeto open source fant√°stico o Training Center. Projeto no qual visa auxiliar e fomenta conte√∫do para a comunidade de TI, trazendo excelentes iniciativas como os projetos Mentoria e Study Groups.\nO¬†v√≠deo ficou fant√°stico e essa comunidade √© muito ativa, recomendo que deem uma olhada para que possam analisar todas os excelentes trabalhos que est√£o construindo diariamente para a comunidade com a comunidade.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúTraining Center‚Äù Palestrante: William Oliveira Twitter: https://twitter.com/w_oliveiras\u0026gt; Linkedin: https://linkedin.com/in/william-oliveira\u0026gt; GitHub: https://github.com/woliveiras\u0026gt; Site: https://woliveiras.com.br\u0026gt; Training Center: https://github.com/training-center Links Mencionados https://github.com/training-center https://github.com/training-center/sobre https://github.com/training-center/mentoria https://github.com/training-center/study-groups https://ctgroups.herokuapp.com/ (Slack) Espero que tenham apreciado, at√© a pr√≥xima.\nAbra√ßos!\n","permalink":"https://diegobrocanelli.com.br/video/training-center-video/","summary":"Ol√°, tudo bem?!\nTivemos a d√©cima edi√ß√£o do hhbr,¬†uma edi√ß√£o recheada de muita informa√ß√£o!\nNesta edi√ß√£o temos a honra de trazer um projeto open source fant√°stico o Training Center. Projeto no qual visa auxiliar e fomenta conte√∫do para a comunidade de TI, trazendo excelentes iniciativas como os projetos Mentoria e Study Groups.\nO¬†v√≠deo ficou fant√°stico e essa comunidade √© muito ativa, recomendo que deem uma olhada para que possam analisar todas os excelentes trabalhos que est√£o construindo diariamente para a comunidade com a comunidade.","title":"hhbr : 10 ‚Äì Training Center (V√≠deo)"},{"content":"Ol√°, tudo bem?!\nUm dos m√©todos que podemos utilizar para melhorar nosso source code √© adotar a pratica de code review.\nAo realizar este processo, teremos a oportunidade de compartilhar conhecimento, melhorar o c√≥digo e diminuir a quantidade de bugs que possivelmente existem no sistema.\nMas o que √© code review? Algu√©m (t√©cnico) que n√£o seja voc√™, que ir√° analisar o seu c√≥digo.\nRegras para um bom code review De 200 √† 400 linhas de c√≥digo no m√°ximo. Sem pressa. Limite de at√© 1hora. Use: Checklist. Ferramentas para automatizar o processo. N√£o fa√ßa o processo de code review em seu pr√≥prio c√≥digo. O que avaliar? A implementa√ß√£o atende os requisitos da task? An√°lise de bug. Segue code standarts? Exemplo: PSR-1. PSR-2. Cont√©m c√≥digo duplicado? O c√≥digo √© leg√≠vel? Deixou o c√≥digo melhor do que quando voc√™ o pegou? Buscar por erros. Indenta√ß√£o de c√≥digo. Nomes de vari√°veis/m√©todos/classes. Testes: Cobrem as partes que deveriam cobrir? S√£o leg√≠veis? Segue boas pr√°ticas de desenvolvimento? Object Calisthenics. S.O.L.I.D. Otimiza√ß√£o de rotinas. Execu√ß√£o das ferramentas: Por exemplo: PHP-CS-Fixer. PHPMD. CodeSniffer. Remover c√≥digo comentado. Sugerir melhorias. O que n√£o¬†executar ou avaliar? Emitir opini√£o sobre a forma que o indiv√≠duo trabalha. For√ßar que o desenvolvedor siga o seu processo de desenvolvimento. Seja imparcial, avalie o c√≥digo n√£o a pessoa. Quais as vantagens de se ter um code review? Aumento de produtividade. Auto aperfei√ßoamento. Compartilhar conhecimento: T√©cnico. Do produto. Economia para a empresa. Melhor base code. Redu√ß√£o de bugs nos sistemas. Como realizar um code review? Pode ser realizado de duas maneiras, sendo:\nPresencial Remota Escolha algu√©m com quem voc√™ se sinta confort√°vel.\nAceite as sugest√µes de melhorias.\nCompartilhe conhecimento.\nExplique as tomadas de decis√µes inseridas no c√≥digo.\nFerramentas para automatizar o Code Review Code Climate (https://codeclimate.com/) Free para opensource Codacy (https://www.codacy.com/) Free para opensource CodeBeat (https://codebeat.co/) Free para opensource Modelo de checklist C√≥digo [¬†] O recurso funciona? [¬†] Desempenha o papel esperado, a l√≥gica est√° correta, cumpre o requerido na task? [¬†] √â facilmente entendido? [¬†] Respeita as conven√ß√µes de codifica√ß√£o definidas para o projeto? [¬†] Existe algum c√≥digo redundante ou duplicado? [¬†] √â o mais modular poss√≠vel? [¬†] Algum c√≥digo de log ou debug pode ser removido? [¬†] Se a tarefa exigir a inclus√£o de uma nova biblioteca/componente no composer.json toda a equipe deve ser informada para evitar problemas de compatibilidade. O mesmo caso seja necess√°ria uma atualiza√ß√£o de vers√£o de uma biblioteca/componente j√° existente [¬†] Foi removido todo c√≥digo comentado? Seguran√ßa [¬†] Todos os inputs foram validados [¬†] Tipo [¬†] Maxlenght [¬†] Formato [¬†] Valores v√°lidos [¬†] Os par√¢metros inv√°lidos foram tratados? Documenta√ß√£o [¬†] √â necess√°rio executar algum comando extra (composer/npm/‚Ä¶) para que o c√≥digo funcione? [¬†] O c√≥digo possui documenta√ß√£o? Nos principais m√©todos e l√≥gicas complexas? [¬†] Todas as vari√°veis foram definidas com: [¬†] Nomes significativos [¬†] Consistentes [¬†] Leg√≠veis [¬†] Claro Performance [¬†] As consultas do Doctrine (ou do banco de dados, ou Zend\\Sql, etc) foram otimizadas pensando-se em melhoria de performance? [¬†] Informa√ß√µes que podem ser armazenadas em cache est√£o sendo cacheadas? [¬†] Processamentos redundantes ou lentos foram otimizados? [¬†] Foi evitado o uso de constru√ß√µes IF-ELSE para diminuir a complexidade da execu√ß√£o? Banco de dados [¬†] Nome da tabela est√° correto. [¬†] Estrutura da tabela est√° correta: [¬†] Descri√ß√£o dos campos. [¬†] Tipo. [¬†] Restri√ß√µes e valores default. [¬†] Charset. [¬†] Charset do banco de dados. [¬†] Backup da base de dados? [¬†] As migrations foram bem criadas? [¬†] Arquivo de update. Testes de navegadores Testar a interface seguindo os requisitos m√≠nimos de navegadores: [¬†] Microsoft Internet Explorer 9.0 [¬†] Chrome 35.0 [¬†] Firefox version 35 N√£o tenha medo nem vergonha de utilizar um checklist, pois confiar que lembraremos de todos os pontos para realizar um code review √© insano e muito perigoso. Lembres-se uma task bem feita e entregue vale mais do que um ego inflado üôÇ\nLinks de refer√™ncia Compartilhando Qualidade e Conhecimento com Code Review ‚Äì Antonio Spinelli; Modelo PDF de Checklist; Coderockr ‚Äì Code Review. Aderir ao processo de code review traz in√∫meras vantagens e melhorias ao time e produto. Os pontos listados acima n√£o s√£o leis, pois cada time deve moldar o processo como melhor se adequ√° a suas necessidades.\nCaso o seu time fa√ßa algo que n√£o foi mencionado deixe nos coment√°rios, assim podemos debater mais sobre o assunto e consequentemente aprender mais üôÇ\nEspero que tenham apreciado o conte√∫do e at√© a pr√≥xima.\nAbra√ßos!\n","permalink":"https://diegobrocanelli.com.br/php/melhore-qualidade-codigo-da-sua-equipe-com-code-review/","summary":"Ol√°, tudo bem?!\nUm dos m√©todos que podemos utilizar para melhorar nosso source code √© adotar a pratica de code review.\nAo realizar este processo, teremos a oportunidade de compartilhar conhecimento, melhorar o c√≥digo e diminuir a quantidade de bugs que possivelmente existem no sistema.\nMas o que √© code review? Algu√©m (t√©cnico) que n√£o seja voc√™, que ir√° analisar o seu c√≥digo.\nRegras para um bom code review De 200 √† 400 linhas de c√≥digo no m√°ximo.","title":"Melhore a qualidade do c√≥digo da sua equipe com Code Review"},{"content":"Ol√°, tudo bem?!\n√â com alegria que apresento o v√≠deo da nona edi√ß√£o do canal hhbr e nesta edi√ß√£o tivemos a honra de prestigiar uma super palestra do grande Danilo Vaz, nesta edi√ß√£o foi abordado o tema ‚ÄúEmber.js: Por que voc√™ ainda n√£o est√° usando?‚Äù, uma edi√ß√£o fant√°stica recheada de conte√∫do e aprendizado de alta qualidade o Danilo n√£o poupou informa√ß√µes compartilhando muito conhecimento com a comunidade, agrade√ßo muito a ele por ter compartilhado seu tempo e conhecimento com a comunidade. Sem mais delongas espero que apreciem o v√≠deo.\nDados da palestra Tema: ‚ÄúEmber.js: Por que voc√™ ainda n√£o est√° usando?‚Äù Palestrante: Danilo Vaz Twitter: https://twitter.com/_danilovaz Site: http://danilovaz.github.io/ GitHub: https://github.com/danilovaz Slides: http://slides.com/vazdanilo/ember#/ Links comentados https://emberjs.com/ https://emberjs.com/ember-community-survey-2017/ https://emberjs.com/blog/2017/04/05/emberconf-2017-state-of-the-union.html https://ember-fastboot.com/ http://yoember.com/ https://github.com/glimmerjs https://github.com/emberjs/rfcs https://www.mlabs.com.br/ http://www.flexboxdefense.com/ https://www.playstation.com/en-us/explore/playstationnow/ https://www.twitch.tv/ https://travis-ci.org/ https://www.intercom.com/ http://jsonapi.org/ O Danilo j√° realizou outra palestra no HHBR sobre Flexbox ‚Äì Interfaces Modernas recomendo fortemente que apreciem o conte√∫do que √© animal.\nEspero que tenham apreciado, lembrando que os eventos do HHBR s√£o mensais e gratuitos, todos os v√≠deos s√£o feitos para a comunidade pela comunidade.\nAt√© a pr√≥xima, abra√ßos!\n","permalink":"https://diegobrocanelli.com.br/video/ember-js-por-que-voce-ainda-nao-esta-usando-video/","summary":"Ol√°, tudo bem?!\n√â com alegria que apresento o v√≠deo da nona edi√ß√£o do canal hhbr e nesta edi√ß√£o tivemos a honra de prestigiar uma super palestra do grande Danilo Vaz, nesta edi√ß√£o foi abordado o tema ‚ÄúEmber.js: Por que voc√™ ainda n√£o est√° usando?‚Äù, uma edi√ß√£o fant√°stica recheada de conte√∫do e aprendizado de alta qualidade o Danilo n√£o poupou informa√ß√µes compartilhando muito conhecimento com a comunidade, agrade√ßo muito a ele por ter compartilhado seu tempo e conhecimento com a comunidade.","title":"hhbr : 09 ‚Äì Ember.js: Por que voc√™ ainda n√£o est√° usando? (v√≠deo)"},{"content":"Ol√° pessoal, tudo bem?!\nCom certa frequ√™ncia menosprezamos o valor do PHPDoc, por√©m o que √© isso?\n‚Äò‚ÄùPHPDoc‚Äù is a section of documentation which provides information on aspects of a ‚ÄúStructural Element‚Äù.‚Äô\nPHP Fig ‚Äì PSr‚Äô5 ‚Äì Definitions\n‚ÄúPHPDoc‚Äù √© uma se√ß√£o de documenta√ß√£o que fornece informa√ß√µes sobre aspectos de um ‚ÄúElemento Estrutural‚Äù.\nSua falta se d√° no pior momento, onde necessitamos consultar um recurso e n√£o encontramos nada sobre o mesmo, apenas as v√°rias linhas de sua implementa√ß√£o. Abaixo¬†pode-se observar um trecho de c√≥digo sem o uso do PHPDoc.\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php namespace Package\\Subpackage; class Zip { private fileName; public function compress(SplFileInfo $file) { // Implementa√ß√£o do m√©todo para compress√£o... } } Sem a inclus√£o dos PHPDocs n√£o ser√° poss√≠vel usufruir do recurso de autocomplete das IDE‚Äôs e quando o desenvolvedor acessar diretamente o c√≥digo n√£o encontrar√° a documenta√ß√£o necess√°ria para consumir os recursos desejados, aumentando a complexidade de uso do mesmo.\nO PHP Fig (recomenda√ß√£o de leitura: ‚ÄúPHP segue padr√µes SIM!!!‚Äú) tem em andamento o desenvolvimento da PSR-5, onde trazem as recomenda√ß√µes necess√°rias para implementar o PHPDoc,¬†vale salientar que o mesmo encontra-se em DRAFT podendo sofrer altera√ß√µes.\nVamos implementar o PHPDoc no exemplo demonstrado acima, para classes, m√©todos e atributos dispomos como padr√£o tr√™s tags que, podem ser herdadas de subclasses, m√©todos ou atributos com mesmo nome, sendo elas:\n@version Utilizada para denotar alguma descri√ß√£o de ‚Äúversioning‚Äù para um elemento. @author Utilizada para documentar o autor de qualquer ‚ÄúElemento Estrutural‚Äù. @copyright Utilizada para documentar as informa√ß√µes de copyright de qualquer ‚Äúelemento estrutural‚Äù. Para classes dispomos: @package Categoriza o elemento associado em um agrupamento ou subdivis√£o l√≥gica. @subpackage Categoriza o elemento associado em um agrupamento ou subdivis√£o l√≥gica. Para atributos/constantes dispomos: @var Define que tipo de dados √© representado por um valor de uma constante, propriedade ou vari√°vel. Para m√©todos dispomos: @param Documenta um √∫nico argumento de uma fun√ß√£o ou m√©todo. @return Documenta o valor de retorno de fun√ß√µes ou m√©todos. @throws Indica se o elemento associado pode lan√ßar um tipo espec√≠fico de exce√ß√£o. Abaixo podemos observar nosso exemplo de c√≥digo com o PHPDoc implementado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 \u0026lt;?php namespace Package\\Subpackage; /** * Class Zip * * Respons√°vel por realizar a cria√ß√£o de um arquivo .zip conforme arquivo ou diret√≥rio informado. * * @package Package * @subpackage Subpackage * @author Diego Brocanelli \u0026lt;diegod2@msn.com\u0026gt; * @version 1.0 * @copyright GLP-3 */ class Zip { /** * Respons√°vel por identificar o arquivo ou diret√≥rio desejado ao qual ser√° utilizado como base para a * cria√ß√£o do arquivo .zip * * @var \\SplFileInfo */ private fileName; /** * Respons√°vel por realizar a compress√£o do arquivo ou diret√≥rio desejado. * * @param \\SplFileInfo $file Arquivo ou diret√≥rio ao qual se deseja comprimir. * @throws \\Exception Caso o diret√≥rio ou arquivo n√£o exista. * @return String Retornar o nome do arquivo .zip criado */ public function compress(SplFileInfo $file) { // Implementa√ß√£o do m√©todo para compress√£o... } } Foram utilizadas as tags recomendadas pela PSR e uma organiza√ß√£o deixando cada bloco de informa√ß√£o leg√≠vel e limpo para consulta. Essa abordagem √© extremamente importante pois, imagine em projetos de grande porte como por exemplo o Zend Framework ou Symfony,¬†caso um do frameworks mencionados n√£o dispor de um bom PHPDoc, isso implicar√° em uma maior dificuldade de compreens√£o dos seus recursos.\nAs tr√™s tags descritas como recomendadas foram inclusas na classe e s√£o ‚Äòherdadas‚Äù pelos m√©todos e atributos, por√©m a PSR deixa aberto para que possa ser inserido de forma individual, particularmente n√£o aprecio, pois aumenta¬†a carda de informa√ß√µes duplicadas.\nQuais os benef√≠cios de incluir um bom PHPDoc? Podemos utilizar o recurso de autocomplete das IDE‚Äôs.\nDeixar mais claro a que se prop√µe o recurso em quest√£o.\nPodemos utilizar ferramentas como Sami (Gerando documenta√ß√£o do seu sistema utilizando a API SAMI), para gerar uma documenta√ß√£o do sistema de forma autom√°tica, simples e eficaz.\nQuais tags disp√µem a PSR-5? Abaixo segue lista contendo todas as tags dispon√≠veis seguido do seu nome, elemento e descri√ß√£o.\nTag Elemento Descri√ß√£o @api Methods Declara que os elementos s√£o adequados para o consumo por terceiros. @author Any Documenta o autor do elemento associado. @category File, Class Uma s√©rie de pacotes juntos. @copyright Any Documenta as informa√ß√µes de direitos autorais do elemento associado. @deprecated Any Indica que o elemento associado √© obsoleto e pode ser removido em uma vers√£o futura. @example Any Mostra o c√≥digo de um arquivo de exemplo especificado ou, opcionalmente, apenas uma parte dele. @filesource File Inclui a origem do arquivo atual para uso na sa√≠da. @global Variable Informa phpDocumentor de uma vari√°vel global ou seu uso. @ignore Any Diz ao phpDocumentor que o elemento associado n√£o deve ser inclu√≠do na documenta√ß√£o. @internal Any Indica que os elementos associados s√£o internos a essa aplica√ß√£o ou biblioteca e oculta por padr√£o. @license File, Class Indica qual licen√ßa √© aplic√°vel para o elemento associado. @link Any Indica uma rela√ß√£o entre o elemento associado e uma p√°gina de um site. @method Class Permite que uma classe saiba quais m√©todos ‚Äúm√°gicos‚Äù podem ser chamados. @package File, Class Categoriza o elemento associado em um agrupamento ou subdivis√£o l√≥gica. @param Method, Function Documenta um √∫nico argumento de uma fun√ß√£o ou m√©todo. @property Class Permite que uma classe saiba quais propriedades ‚Äúm√°gicas‚Äù est√£o presentes. @property -read Class Permite que uma classe saiba quais propriedades ‚Äúm√°gicas‚Äù est√£o presentes que s√£o somente leitura. @property -write Class Permite que uma classe saiba quais propriedades ‚Äúm√°gicas‚Äù est√£o presentes que s√£o somente de grava√ß√£o. @return Method, Function Documenta o valor de retorno de fun√ß√µes ou m√©todos. @see Any Indica uma refer√™ncia do elemento associado a um site ou outros elementos. @since Any Indica em qual vers√£o o elemento associado ficou dispon√≠vel. @source Any, except File Mostra o c√≥digo-fonte do elemento associado. @subpackage File, Class Categoriza o elemento associado em um agrupamento ou subdivis√£o l√≥gica. @throws Method, Function Indica se o elemento associado pode lan√ßar um tipo espec√≠fico de exce√ß√£o. @todo Any Indica se alguma atividade de desenvolvimento ainda deve ser executada no elemento associado. @uses Any Indica uma refer√™ncia para (e de) um √∫nico elemento associado. @var Properties Define que tipo de dados √© representado por um valor de uma constante, propriedade ou vari√°vel. @version Any Indica a vers√£o atual dos Elementos Estruturais. Espero ter conseguido demonstrar a import√¢ncia do uso do PHPDoc, como tudo na vida devemos ter parcim√¥nia, ou seja, devemos utilizar conforme necess√°rio para enriquecer nosso c√≥digo. N√£o tenha vergonha em consultar a documenta√ß√£o para ver qual tag melhor se enquadra para a situa√ß√£o em quest√£o.\nCaso tenham alguma d√∫vida, sugest√£o ou cr√≠tica convido a deixarem nos coment√°rios, para que assim possamos aprender cada vez mais.\nAt√© a pr√≥xima pessoal! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/phpdoc-para-que-server-e-onde-devo-usar/","summary":"Ol√° pessoal, tudo bem?!\nCom certa frequ√™ncia menosprezamos o valor do PHPDoc, por√©m o que √© isso?\n‚Äò‚ÄùPHPDoc‚Äù is a section of documentation which provides information on aspects of a ‚ÄúStructural Element‚Äù.‚Äô\nPHP Fig ‚Äì PSr‚Äô5 ‚Äì Definitions\n‚ÄúPHPDoc‚Äù √© uma se√ß√£o de documenta√ß√£o que fornece informa√ß√µes sobre aspectos de um ‚ÄúElemento Estrutural‚Äù.\nSua falta se d√° no pior momento, onde necessitamos consultar um recurso e n√£o encontramos nada sobre o mesmo, apenas as v√°rias linhas de sua implementa√ß√£o.","title":"PHPDoc, para que server e onde devo usar?"},{"content":"Ol√° pessoal, tudo bem?!\nN√£o √© nada fora do comum que n√≥s desenvolvedores¬†tenhamos que manipular/modificar/criar bancos de dados, com certeza isso √© o pesadelo de qualquer DBA. Particularmente gosto de trabalhar com front, back e banco de dados pois isso me permite a ter acesso a conte√∫dos fant√°sticos aprendendo coisas novas sempre.\nComo podemos manipular o banco de dados? Bom, particularmente para atividades corriqueira utilizo o terminal, sim o terminal, √© simples e r√°pido.\nCaso voc√™ seja usu√°rio Windows recomento que utilize o cmder software portable que emula o terminal como se fosse no Linux, caso voc√™ seja usu√°rio Linux ou Mac, bom, sua vida com o terminal j√° √© tranquila. üôÇ\nConectar no MySQL Abra o terminal e digite:\n1 mysql -u root -p Par√¢metro: -u Indica o usu√°rio ao qual desejamos utilizar para conectar ao banco. root Nome do usu√°rio que estamos utilizando para realizar a conex√£o com o banco de dados. Onde pode ser qualquer usu√°rio cadastrado no MySQL. -p Indica a senha do usu√°rio para conex√£o com o banco, este par√¢metro √© opcional, pois caso o usu√°rio desejado n√£o utilize senha para se conectar basta omitir este par√¢metro, porem n√£o √© nada recomendado utilizar usu√°rios sem senha. üôÇ Conectar no MySQL acessando¬†direto o banco de dados desejado Abra o terminal e digite:\n1 mysql -u root -p nome_do_banco_de_dados Par√¢metro: nome_do_banco_de_dados Como descrito, refere-se ao nome do banco de dados que desejamos acessar. Ap√≥s execu√ß√£o do comando √© realizado a conex√£o e acesso ao banco de dados que desejamos utilizar.\nListar os banco de dados Abra o terminal acesso o MySQL e digite:\n1 show databases; Abaixo segue um exemplo de retorno do comando, podemos observar que √© listado todos os bancos de dados at√© mesmo os utilizados pelo MySQL.\n1 2 3 4 5 6 7 8 9 10 11 12 +--------------------+ | Database | +--------------------+ | information_schema | | banco_01 | | livraria | | mysql | | performance_schema | | post_sql | | sys | | banco_02 | +--------------------+ Listar as tabelas do banco de dados Abra o terminal acesso o MySQL, em seguida acesse o banco de dados desejado e digite:\n1 show tables; Exemplo de resultado.\n1 2 3 4 5 6 7 8 +--------------------+ | Tables_in_livraria | +--------------------+ | autores | | capitulos | | livros | | vendas | +--------------------+ Visualizar estrutura da tabela Abra o terminal acesso o MySQL, em seguida acesse o banco de dados desejado e digite:\n1 describe table_name; ** Par√¢metro** table_name Substitua pelo nome da tabela desejada. Exemplo de resultado\n1 2 3 4 5 6 7 8 9 10 +--------------------+---------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +--------------------+---------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | nome | varchar(100) | NO | | NULL | | | data_de_lancamento | date | NO | | NULL | | | autor_id | int(11) | NO | | NULL | | | preco | decimal(10,2) | NO | | NULL | | +--------------------+---------------+------+-----+---------+----------------+ 5 rows in set (0,00 sec) Dump da base de dados Para criar uma c√≥pia da base de dados desejados abara o terminal, acesse o diret√≥rio no qual deseja criar o arquivo em seguida digite o comando:\n1 mysqldump -u root -p database_name \u0026gt; database_name.sql; Par√¢metro database_name Substitua pelo nome do banco de dados ao qual deseja realizar a c√≥pia. Ap√≥s executar o comando, ser√° criado um arquivo .sql no local de desetino desejado. Caso voc√™ tenha o costume de utilizar por exemplo o PHPMyAdmin para gear o dump, recomendo que passe a utilizar o terminal, pois a interface gr√°fica em alguns casos pode gerar um arquivo .sql que ao ser importado por outro membro da sua equipe pode conter erros. J√° o arquivo gerado pelo terminal as chances s√£o m√≠nimas, pois se o comando executado n√£o apresentar erro seu resultado ser√° correto e o arquivo gerado poder√° ser importado sem maiores eventualidades.\nDump somente da estrutura da base de dados Abra o terminal v√° ao diret√≥rio onde deseja criar o arquivo de backup e digite:\n1 mysqldump -u root -p database_name --no-data \u0026gt; database_name.sql; Par√¢metro no-data Indica que desejamos criar uma c√≥pia do bando de dados sem as informa√ß√µes contidas nas tabelas. Este comando √© bem similar ao mencionado anteriormente, por√©m com a diferen√ßa que ele criar uma c√≥pia da estrutura do banco de dados n√£o realizando a exporta√ß√£o dos dados contidos nas tabelas.\nImportar banco de dados Abra o terminal v√° ao diret√≥rio onde encontra-se o bando de dados que deseja importar e digite:\n1 mysql -u root -p database_name \u0026lt; database_name.sql; Ap√≥s execu√ß√£o do comando e o arquivo a ser importado n√£o conter erros, sua importa√ß√£o ser√° realizada com sucesso. Em casos de importa√ß√£o onde as tabelas do banco de dados contenham 100, 200, 300 mil (esse volume √© at√© pequeno em compara√ß√£o com banco de milh√µes de registros) ou mais registros isso acarretar√° em um tempo maior de processamento, basta aguardar at√© a finaliza√ß√£o e libera√ß√£o do terminal pelo processo.\nDump de todos os bancos de dados Abra o terminal, entre no diret√≥rio desejado para armazenar o arquivo de backup e digite:\n1 mysqldump -u user -p --all-databases \u0026gt; full_path_to\\file.sql Par√¢metro all-databases Indica que desejamos exportar todas as bases de dados dispon√≠veis no MySQL. Ap√≥s t√©rmino da execu√ß√£o, ser√° gerado um arquivo conforme especificado contento todos os bancos de dados do MySQL.\nApagar tabela Abra o terminal acesse o MySQL em seguida o banco de dados desejado e digite:\n1 drop table nome_da_tabela; Par√¢metro drop table Respons√°vel por apagar a tabela do banco de dados. nome_da_tabela Nome da tabela ao qual se deseja apagar. Utilize com muita cautela, pois ap√≥s executar o comando a tabela ser√° apagada do seu banco de dados!\nApagar a base de dados Abra o terminal acesse o MySQL e digite:\n1 drop database nome_do_banco_de_dados; Par√¢metro drop database Respons√°vel por apagar o banco de dados. nome_do_banco_de_dados Nome do banco de dados ao qual se deseja apagar. Utilize com muita cautela, pois ap√≥s executar o comando o banco de dados ser√° apagado!\nLimpar o terminal Acesse o terminal e pressione o seguinte comando:\n1 ctrl+l Este √© um comando do terminal, por√©m muito √∫til quando estamos trabalhando com o MySQL ou qualquer banco de dados ou atividade no terminal, pois o mesmo limpa a tela do terminal para que possamos utiliz√°-lo com mais clareza e sem polui√ß√£o de informa√ß√µes na tela.\nTodos os comandos listados acima s√£o recomendados para uso em ambiente local, n√£o recomendo seu uso em ambiente de produ√ß√£o, caso v√° utilizar tenha MUITA CAUTELA e PARCIM√îNIA com os comandos utilizados. Siga as boas pr√°ticas e com isso voc√™ ver√° que o uso do terminal ir√° maximizar sua performance.\nN√£o tenha medo do terminal, sabendo utiliz√°-lo √© uma ferramenta poderos√≠ssima, podendo abrir um leque de op√ß√µes fant√°sticas.\nEspero que tenham apreciado este post e caso tenham alguma duvidas, sugest√µes ou cr√≠tica por favor deixe nos coment√°rios e com isso podemos debater e aprender cada vez mais.\nGrande abra√ßo e at√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/mysql/comandos-basicos-mysql-no-terminal/","summary":"Ol√° pessoal, tudo bem?!\nN√£o √© nada fora do comum que n√≥s desenvolvedores¬†tenhamos que manipular/modificar/criar bancos de dados, com certeza isso √© o pesadelo de qualquer DBA. Particularmente gosto de trabalhar com front, back e banco de dados pois isso me permite a ter acesso a conte√∫dos fant√°sticos aprendendo coisas novas sempre.\nComo podemos manipular o banco de dados? Bom, particularmente para atividades corriqueira utilizo o terminal, sim o terminal, √© simples e r√°pido.","title":"Comandos b√°sicos do MySQL no terminal"},{"content":"Ol√° pessoal, tudo bem?!\nComo desenvolvedores/programadores fazemos uso de IDE‚Äôs e editores de texto, para que possamos codificar nossas solu√ß√µes para os problemas do nossos clientes.\nLembro-me de ter iniciado com o cl√°ssico bloco de notas, e obviamente √© insustent√°vel se manter utilizando ele, visando maximizar meus resultados parti em busca de uma ferramenta que me auxilia-se no processo de escrita de c√≥digo.\nNesta per√≠odo nem me passava pela cabe√ßa o que era uma IDE, apenas queria encontrar uma ferramenta melhor que o bloco de notas, com isso encontrei o t√£o famoso Notepad++ e foi fant√°stico pois ele abriu o leque de op√ß√µes a um n√≠vel que eu n√£o imaginava, fiz uso dele por um bom per√≠odo e gostei da ferramenta e dos recursos que fornecia.\nTempos depois, conheci a primeira IDE que utilizei sendo o¬†Eclipse amada e odiada por muitos, achei muito bacana o conceito que uma IDE trazia, suas funcionalidades e recursos onde continuei por um tempo a utiliz√°-lo. Em seguida usei o Zend Studio porem,¬†como fiz uso por um per√≠odo t√£o pequeno ent√£o acredito que n√£o posso opinar sobre esta ferramenta, pois n√£o usufrui dos seus benef√≠cios e defeitos para ter um posicionamento sobre ela.\nChegou em um momento da minha carreira que foquei no desenvolvimento com PHP, nesse time que integrei¬†foi¬†apresentado a IDE NetBeans (e devo muito do que aprendi a esse amigo do qual me ajudou a subir degraus importantes na minha carreira, sou muito grato por tudo, valeu Mestre!!!) e fa√ßo uso dela at√© hoje, gostei bastante dos seus recursos e tenho j√° um processo de desenvolvimento que me permite uma agilidade e praticidade em meu dia a dia, sei que muitos ir√£o pensar ‚ÄúComo ele usa essa IDE ela √© lenta, tem o defeito X, Y e Z‚Äù bom qualquer ferramenta ter√° pontos positivos e negativos e o NetBeans n√£o √© exce√ß√£o, sei que para o desenvolvimento PHP uma excelente IDE √© o PHP Storm ferramenta que fiz uso por um ano (ganhei uma licen√ßa de um ano) e ela √© fant√°stica v√°rios recursos bacanas, porque n√£o continuei com ela? Simples, custo pois n√£o √© uma prioridade eu investir na compra da sua licen√ßa, claro que no futuro posso a vir comprar, pois como mencionei, √© uma IDE fant√°stica e o NetBeans supre com perfei√ß√£o minhas necessidades.\nN√£o irei nem cogitar a id√©ia de piratear os softwares, n√≥s como desenvolvedores temos que ter uma vis√£o clara do qu√£o prejudicial √© uma a√ß√£o deste tipo, n√£o quero ensinar valores a ningu√©m, apenas tenho por mim que o que √© certo e errado e da mesma maneira que eu n√£o gostaria de ser prejudicado n√£o irei prejudicar outras pessoas tamb√©m.\nCada desenvolvedor faz uso das ferramentas que lhe agrada e agrega valor, nem sempre eu codifico em uma IDE, pois em alguns casos n√£o vale a pena, ent√£o fa√ßo uso de um editor de texto. At√© o presente momento fiz uso de tr√™s editores sendo eles:\nNotepad++; Sublime Text (2 e 3) atualmente utilizo a vers√£o 3; Visual Studio Code. Dos tr√™s editores o notepad++ n√£o uso j√° h√° alguns anos, o sublime text √© um editor maravilhoso e uso ele em meu dia a dia (sempre tenho aberto a IDE e o Sublime), fiz um teste e passei uma semana utilizando o VSCode se mostrando um editor fant√°stico, simples, leve e traz um conceito bacana para gerenciamento de plugins, porem como estou mais habituado com o sublime eu retornei a us√°-lo, entre os dois qual √© o melhor? N√£o sei, ambos s√£o bons e tem pontos positivos e negativos distintos, eu particularmente por enquanto estou mais inclinado a continuar com o Sublime (somente acredito que o time do Sublime deveria produzir um logo mais bonito hahaha), porem recomendo que voc√™ fa√ßa uso deles para que tire suas pr√≥prias conclus√µes e veja na pr√°tica os pontos positivos e negativos que cada um pode apresentar em seu ciclo de desenvolvimento.\nRecentemente criei um reposit√≥rio no GitHub configuracoes-sublime-text-3 onde listei as principais configura√ß√µes e plugins que utilizo.\nMinha inten√ß√£o com este post √© descrever minhas experi√™ncias com o uso de IDE e editores (foi nost√°lgico relembrar o passado), n√£o √© dizer qual √© melhor ou¬†pior, pois √© uma decis√£o muito particular vai muito de desenvolvedor para desenvolvedor para desenvolvedor e seus gostos pessoais. Acredito que devemos utilizar as ferramentas que mais nos agrada e traga resultados satisfat√≥rios para a empresa e que n√£o impacte o time.\nNada do que relatei acima √© escrito em pedra, posso daqui a algum tempo estar utilizando IDE‚Äôs que nunca imaginei estar utilizando, pois sempre pesquiso e utilizo novas ferramentas para visualizar como elas resolvem os problemas e quais suas novidades/funcionalidades.\nHoje estou muito confort√°vel com o uso do Netbeans e Sublime Text, espero que voc√™ tenha essa sensa√ß√£o ao utilizar suas ferramentas.\nE voc√™, quais ferramentas utiliza no seu dia a dia? Escreva nos coment√°rios eu ficarei muito feliz em discutir e aprender sobre novas ferramentas.\nEspero que tenham apreciado, grande abra√ßo e at√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/meu-dia-dia-como-desenvolvedor-ides-e-editores-de-texto/","summary":"Ol√° pessoal, tudo bem?!\nComo desenvolvedores/programadores fazemos uso de IDE‚Äôs e editores de texto, para que possamos codificar nossas solu√ß√µes para os problemas do nossos clientes.\nLembro-me de ter iniciado com o cl√°ssico bloco de notas, e obviamente √© insustent√°vel se manter utilizando ele, visando maximizar meus resultados parti em busca de uma ferramenta que me auxilia-se no processo de escrita de c√≥digo.\nNesta per√≠odo nem me passava pela cabe√ßa o que era uma IDE, apenas queria encontrar uma ferramenta melhor que o bloco de notas, com isso encontrei o t√£o famoso Notepad++ e foi fant√°stico pois ele abriu o leque de op√ß√µes a um n√≠vel que eu n√£o imaginava, fiz uso dele por um bom per√≠odo e gostei da ferramenta e dos recursos que fornecia.","title":"Meu dia a dia como desenvolvedor: IDE‚Äôs e Editores de texto"},{"content":"Ol√°, tudo bem?!\nHoje tivemos a oitava edi√ß√£o do hhbr,¬†uma edi√ß√£o recheada de muita informa√ß√£o, dicas e c√≥digos!\nNesta edi√ß√£o temos a honra de trazer o grande F√°bio Vedovelli, onde ele nos guiou no mundo Vuejs apresentando todos os requisitos para iniciarmos uma Single Page Application (SPA), foram apresentados conceitos muitos valiosos que vai lhe ajudar e poupar muito tempo! Foi apresentado pelo Vedovelli um reposit√≥rio no GitHub criado por ele e seus colegas do Codecasts chamado SPA Started Kit onde facilita e muito o start inicial de uma SPA com Vuejs.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúVue.js e Single Page Applications: O que saber antes de come√ßar‚Äù Palestrante: Fabio Vedovelli Twitter: https://twitter.com/vedovelli Site: http://www.vedovelli.com.br/ GitHub: https://github.com/vedovelli Links Mencionados https://vuejs.org/ https://github.com/mzabriskie/axios https://github.com/vuejs/vue-router https://github.com/vuejs/vuex https://github.com/vuejs/awesome-vue https://github.com/codecasts/spa-starter-kit https://github.com/vuejs/vue-devtools https://blog.codecasts.com.br/por-que-vue-js-e-nao-react-d5b58c09d193 https://blog.codecasts.com.br/estados-com-vue-js-data-computed-props-e-store-d8c6da4627ca https://codecasts.com.br/lesson https://www.novatec.com.br/livros/ninja-javascript/ https://www.casadocodigo.com.br/products/livro-ecmascript6 At√© a pr√≥xima, abra√ßos!\n","permalink":"https://diegobrocanelli.com.br/vuejs/vue-js-e-single-page-applications-o-que-saber-antes-de-comecar-video/","summary":"Ol√°, tudo bem?!\nHoje tivemos a oitava edi√ß√£o do hhbr,¬†uma edi√ß√£o recheada de muita informa√ß√£o, dicas e c√≥digos!\nNesta edi√ß√£o temos a honra de trazer o grande F√°bio Vedovelli, onde ele nos guiou no mundo Vuejs apresentando todos os requisitos para iniciarmos uma Single Page Application (SPA), foram apresentados conceitos muitos valiosos que vai lhe ajudar e poupar muito tempo! Foi apresentado pelo Vedovelli um reposit√≥rio no GitHub criado por ele e seus colegas do Codecasts chamado SPA Started Kit onde facilita e muito o start inicial de uma SPA com Vuejs.","title":"hhbr : 08 ‚Äì Vue.js e Single Page Applications: O que saber antes de come√ßar (V√≠deo)"},{"content":"Ol√°, tudo bem?\nEm diversos posts aqui no blog fa√ßo uso do Composer, e menciono sua import√¢ncia no ecossistema PHP, por√©m neste post vamos entrar em mais detalhes sobre essa maravilhosa ferramenta.\nO que √© o composer? Uma ferramenta para gerenciamento de pacotes PHP. Caso voc√™ seja usu√°rio Linux, podemos comparar (com as devidas resalvas) o composer com o apt-get.\nCitando o amigo Elton Minetto:\n‚ÄúO composer √© a melhor invens√£o depois do p√£o de forma‚Äù - Minetto, Elton.\nO que ele faz? Gerencia todos os pacotes que sua aplica√ß√£o tem como dependente, podendo instalar, atualizar ou remover facilmente qualquer pacote.\nComo ele funciona? Todo projeto PHP deve conter um arquivo chamado composer.json, onde nele ser√° definido todas as depend√™ncias e informa√ß√µes do seu projeto.\nPodemos visualizar abaixo um exemplo do arquivo composer.json do projeto image-gravatar-php.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \u0026#34;name\u0026#34;: \u0026#34;diego-brocanelli/image-gravatar-php\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Library for get images Gravatar\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;Library\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;BSD-3\u0026#34;, \u0026#34;version\u0026#34;:\u0026#34;1.0\u0026#34;, \u0026#34;authors\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Diego Brocanelli\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;diegod2@msn.com\u0026#34; } ], \u0026#34;minimum-stability\u0026#34;: \u0026#34;dev\u0026#34;, \u0026#34;require\u0026#34;: { \u0026#34;php\u0026#34;: \u0026#34;\u0026gt;=5.3.8\u0026#34; }, \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\Gravatar\\\\\u0026#34;:\u0026#34;src/Gravatar\u0026#34; } } } Instalando o Composer Existem duas maneiras para instal√°-lo utilizando o composer.phar, sendo um √∫nico arquivo que cont√©m o Composer e pode ser utilizado de forma isolada dos demais projetos ou de forma global na sua maquina, eu fa√ßo uso da segunda op√ß√£o pois como uso com certa frequ√™ncia fica mais f√°cil.\nInstalar no Windows Acesse a URL¬†https://getcomposer.org/download/ e realize o download do arquivo composer-Setup.exe,¬†onde basta seguir o modelo next, next finish.\nInstalar no Linux Basta executar os comandos abaixo:\n1 2 3 php -r \u0026#34;readfile(\u0026#39;https://getcomposer.org/installer\u0026#39;);\u0026#34; | php Com o comando abaixo, basta digitar composer no prompt para acessar sudo mv composer.phar /usr/bin/composer Ap√≥s o processo de instala√ß√£o finalizar abra o terminal e digite:\n1 composer --version E pronto ser√° exibido a vers√£o instalada.\nNota: Obrigado ao colega Andre Cardoso por prestigiar o conte√∫do e contribuir com uma dica para melhoria do post.\nO arquivo composer.json Como mencionado acima, todas as configura√ß√µes que o Composer necessita deve estar descrito em seu arquivo composer.json, sendo assim cada projeto deve ter o seu arquivo exclusivo.\nA maneira mais simples de se obter o nosso arquivo √© acessando o terminal (deu para notar que o terminal √© uma ferramenta indispens√°vel para n√≥s üôÇ ) acesse o diret√≥rio onde deseja criar o arquivo e execute o seguinte comando:\n1 composer init Ele automaticamente iniciar√° o processo de cria√ß√£o fazendo as seguintes perguntas:\nO nome do pacote, o composer utiliza o Packagist como reposit√≥rio defautl de projetos e tamb√©m utiliza/respeita as [PSR-0 e PSR-4]http://www.php-fig.org/psr/(). Ent√£o devemos tamb√©m seguir as recomenda√ß√µes para a cria√ß√£o do vendor do nosso pacote.\n1 Package name (\u0026lt;vendor\u0026gt;/\u0026lt;name\u0026gt;) [root/exemplo-composer]: Ap√≥s a defini√ß√£o do nome, ser√° requisitado a descri√ß√£o do pacote, recomendado evitar caracteres especiais ou acentua√ß√£o para evitar quebra de string.\n1 Description []: Autor do arquivo/pacote:\n1 Author [SEU NOME \u0026lt;seur_email@email.com\u0026gt;, n to skip]:\\ A instabilidade do pacote, devendo ser ‚Äòstable, rc, beta, alpha ou dev‚Äô:\n1 Minimum Stability []: O tipo do projeto (library, project, metapackage ou composer-plugin):\n1 Package Type (e.g. library, project, metapackage, composer-plugin) []: O tipo de licen√ßa (muito importante! Caso tenha alguma d√∫vida, tenho um post sobre o assunto ‚ÄúSoftware livre de c√≥digo aberto e software gratuito, quais s√£o suas diferen√ßas?‚Äú)\n1 License []: E caso voc√™ deseje, poder√° definir os pacotes que voc√™ deseja instalar no projeto:\n1 Would you like to define your dependencies (require) interactively [yes]? Por ultimo, ir√° imprimir no terminal o arquivo demonstrativo e lhe questionar se as informa√ß√µes inseridas est√£o corretas, no final basta digitar yes e pressionar enter, caso n√£o aceite o processo √© interrompido.\nPode parecer longo, porem esse processo n√£o leva mais do que alguns segundos, como o composer realiza o download dos componente que voc√™ ir√° utilizar em seu sistema a agilidade no processo de instala√ß√£o fica atrelada a velocidade e qualidade da internet.\nO arquivo composer.lock Ap√≥s a execu√ß√£o do comando ‚Äòcomposer install‚Äô ser√° gerado nosso arquivo composer.lock, onde ser√° armazenado as vers√µes exatas de todos os pacotes que foi instalado em seu projeto. Isso √© excelente pois com isso todos os integrantes do time ter√° a garantia de obten√ß√£o dos mesmos pacotes.\n√â recomendado que este arquivo entre em seu controle de vers√£o justamente pelo motivo citado acima, garantindo a integridade do seu projeto para qualquer membro do time.\nSe o seu projeto j√° venha com o arquivo de lock, basta executar o comando abaixo para atualizar/instalar as depend√™ncia em seu projeto.\n1 composer update Automaticamente o composer ir√° analisar os arquivos ‚Äòcomposer.json‚Äô e ‚Äòcomposer.lock‚Äô para gerenciar as depend√™ncias em seu projeto, muito simples.\nAutoloading N√£o somente gerenciar pacotes, podemos tamb√©m configurar e gera o ‚Äòautoloader‚Äô do nosso projeto, lembrando sempre que o composer segue as PSR-0 e PSR-4.\nPodemos utilizar como exemplo o composer.json gerado anteriormente:\n1 2 3 4 5 \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\Gravatar\\\\\u0026#34;:\u0026#34;src/Gravatar\u0026#34; } } Como podemos visualizar, √© declarado a key ‚Äúautoload‚Äù em seguida definimos o padr√£o que desejamos utilizar, que neste caso ser√° ‚Äúpsr-4‚Äù e por √∫ltimo foi definido o nome do vendor seguido pelo caminho do diret√≥rio.\nA utiliza√ß√£o do autoload pelo composer √© muito simples e poderosa, voc√™ pode construir um pacote\nComandos b√°sicos composer init Basicamente cria seu arquivo composer.json para voc√™ de forma simples e r√°pida. composer install Para podermos instalar todas as depend√™ncias descritas no arquivo composer.json, devemos utilizar este comando para executar a tarefa de forma autom√°tica. composer update Caso deseje inserir ou remover pacotes ou alterar o autoload devemos sempre atualizar nosso projeto, e com esse comando tudo o que listei √© feito de forma autom√°tica sem dores de cabe√ßa :). composer self-update Como todo sistema o composer recebe constantemente atualiza√ß√µes, e¬†para atualiza-lo utilizamos o self-update. composer¬†dump-autoload ou dumpautoload Toda vez que houver necessidade de atualizar o autoloader do nosso sistema, podemos utilizar uma dessas duas vers√µes do comando para tal atividade, ambas no final das contas obt√©m o mesmo resultado. composer ‚Äìhelper ou ‚Äìh Ele tamb√©m disponibiliza de um helper, listando os comandos dispon√≠veis e sua forma de uso. Hoje com os grandes avan√ßos no ecossistema PHP (caso tenha interesse a galera do Hipsters.tech lan√ßo um epis√≥dio fant√°stico ‚ÄúPHP n√£o √© coisa de sobrinho!‚Äù recomendo ouvir üôÇ ), todos os grandes frameworks tem seus componentes modularizados, podendo ser utilizado de forma isolada e o composer facilitar√° sua vida caso deseja utiliza-los em seus projetos.\nPor exemplo, caso desejamos utilizar a engine de template Twig em nosso projeto basta acessarmos o diret√≥rio do nosso projeto e executar o seguinte comando;\n1 composer require \u0026#34;twig/twig:^2.0\u0026#34; Automaticamente ser√° instalado no sistema todos os pacotes necess√°rios para utiliza√ß√£o do Twig.\nEste post j√° ficou muito extenso e ainda nem arranhei a superf√≠cie das funcionalidades que o Composer disp√µe ent√£o vou encerra-lo por aqui, porem caso deseje um post explorando mais recursos deixe nos coment√°rios.\nEspero ter conseguido demonstrar como √© vantajoso a utiliza√ß√£o desta ferramenta, na minha opini√£o √© imposs√≠vel ser um programador PHP nos dias de hoje sem saber o b√°sico dessa ferramenta.\nCaso tenha alguma d√∫vida, sugest√£o ou elogio por favor deixe nos coment√°rios pois podemos gerar um conte√∫do muito bacana.\nAt√© a pr√≥xima pessoal!\n","permalink":"https://diegobrocanelli.com.br/php/iniciando-com-composer/","summary":"Ol√°, tudo bem?\nEm diversos posts aqui no blog fa√ßo uso do Composer, e menciono sua import√¢ncia no ecossistema PHP, por√©m neste post vamos entrar em mais detalhes sobre essa maravilhosa ferramenta.\nO que √© o composer? Uma ferramenta para gerenciamento de pacotes PHP. Caso voc√™ seja usu√°rio Linux, podemos comparar (com as devidas resalvas) o composer com o apt-get.\nCitando o amigo Elton Minetto:\n‚ÄúO composer √© a melhor invens√£o depois do p√£o de forma‚Äù - Minetto, Elton.","title":"Iniciando com Composer"},{"content":"Ol√°, tudo bem?!\nUm servi√ßo muito bacana √© o Gravatar, onde voc√™ pode vincular uma imagem ao e-mail desejado e com isso ao comentar em um blog ou servi√ßo que disponibiliza o recurso o mesmo exibir√° automaticamente a imagem configurada.\nE para manipular o servi√ßo com maior facilidade constru√≠ uma biblioteca para executar esta tarefa, vamos ao seu uso!\nPara isso vamos criar a estrutura do nosso projeto, crie um diret√≥rio com o seguinte nome ‚Äòpost-imagem-gravatar‚Äô.\nAp√≥s a cria√ß√£o do diret√≥rio devemos entrar no mesmo (via terminal) e executar o seguinte comando para instalar o pacote:\n1 composer require diego-brocanelli/image-gravatar-php dev-master Ao finalizar o processo de instala√ß√£o, teremos a seguinte estrutura:\npost-imagem-gravatar composet.json composer.lock vendor Para darmos in√≠cio ao nosso exemplo vamos criar nosso index.php e configura-lo conforme demonstrado abaixo:\n1 2 3 4 5 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\Gravatar\\Image; Basicamente at√© este momento importamos o autoload do composer e declaramos o uso do componente Image, respons√°vel por nos fornecer os recursos para manipular o servi√ßo do Gravatar.\nTemos duas possibilidades de uso sendo elas:\nRetornar apenas a URL da imagem. Retornar uma tag img configurada com a URL. Retornando apenas a URL\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\Gravatar\\Image; $email = \u0026#39;hackershousebr@gmail.com\u0026#39;; $gravatar = new Image($email); $url = $gravatar-\u0026gt;buildURL(); Ao instanciarmos nossa classe Image, devemos informar qual e-mail configurado no Gravatar desejamos pesquisar.\nPor √∫ltimos fazemos uso do m√©todo buildURL() para que o mesmo monte e retorne nossa URL desejada, como retorno obtemos o seguinte valor:\n1 https://www.gravatar.com/avatar/dfeea822891ef9e6df82ec9f4a74cf8d?s=80\u0026amp;d=mm\u0026amp;r=g Podemos notar, nossa URL cont√©m par√¢metros de configura√ß√£o que s√£o passados ao Gravatar e esses valores s√£o padr√µes, porem podemos modific√°-los e logo mais veremos como fazer isso üôÇ\nRetornando a tag img 1 2 3 4 5 6 7 8 9 10 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\Gravatar\\Image; $email = \u0026#39;hackershousebr@gmail.com\u0026#39;; $gravatar = new Image($email); $image = $gravatar-\u0026gt;buildImage(); Para obter a_ tag img_ o uso √© praticamente id√™ntico o que difere √© que chamamos o m√©todo buildImage() e como retorno temos uma tag pr√© configurada para uso.\n1 \u0026lt;img src=\u0026#39;https://www.gravatar.com/avatar/dfeea822891ef9e6df82ec9f4a74cf8d?s=80\u0026amp;d=mm\u0026amp;r=g\u0026#39;/\u0026gt; Com poucas linhas de c√≥digo podemos obter a imagem configurada no Gravatar e podemos inserir em nossas aplica√ß√µes, facilitando o uso de imagens e centralizando as informa√ß√µes.\nAgora vamos descrever as poss√≠veis configura√ß√µes:\nImage Size Temos a disposi√ß√£o as seguintes op√ß√µes [ 404 | mm | identicon | monsterid | wavatar ] por padr√£o √© utilizada ‚Äòmm‚Äô.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\Gravatar\\Image; $email = \u0026#39;hackershousebr@gmail.com\u0026#39;; $gravatar = new Image($email); $gravatar-\u0026gt;setImageSize(200); // return image 200px Image Set Temos a disposi√ß√£o as seguintes op√ß√µes [ 404 | mm | identicon | monsterid | wavatar ] por padr√£o √© utilizada ‚Äòmm‚Äô.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\Gravatar\\Image; $email = \u0026#39;hackershousebr@gmail.com\u0026#39;; $gravatar = new Image($email); $gravatar-\u0026gt;setImageSet(\u0026#39;wavatar\u0026#39;);\\ Maximum rating Temos a disposi√ß√£o as seguintes op√ß√µes [ g | pg | r | x ] por padr√£o √© utilizada ‚Äòg‚Äô.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\Gravatar\\Image; $email = \u0026#39;hackershousebr@gmail.com\u0026#39;; $gravatar = new Image($email); $gravatar-\u0026gt;setMaxRating(\u0026#39;pg\u0026#39;); Image options Podemos incluir atributos em nossa imagem, facilitando assim seu uso, no exemplo abaixo √© inserido a classe CSS ‚Äòimage-gravatar‚Äô.\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use DiegoBrocanelli\\Gravatar\\Image; $email = \u0026#39;hackershousebr@gmail.com\u0026#39;; $gravatar = new Image($email); $gravatar-\u0026gt;setImageOptions(array(\u0026#39;class\u0026#39; =\u0026gt; \u0026#39;image-gravatar\u0026#39;)); $gravatar-\u0026gt;buildImage(); Todas as configura√ß√µes listadas acima refletem as configura√ß√µes realizadas no servi√ßo Gravatar, com isso caso voc√™ deseje retornar uma imagem com rating ‚Äòpg‚Äô porem o mesmo n√£o tenha sido configurado no Gravatar o mesmo retornar√° o default ‚Äòg‚Äô. Isso para todas as outras configura√ß√µes listadas acima.\nCaso tenha interesse e gostaria de acessar o componente que utilizamos ele est√° hospedado no GitHub image-gravatar-php, sempre ser√° bem vindo cr√≠ticas, sugest√µes, PR e elogios üôÇ\nEspero que tenham apreciado o post e que o componente facilite seu dia a dia, at√© a pr√≥xima abra√ßos.\n","permalink":"https://diegobrocanelli.com.br/php/obtendo-imagens-do-gravatar/","summary":"Ol√°, tudo bem?!\nUm servi√ßo muito bacana √© o Gravatar, onde voc√™ pode vincular uma imagem ao e-mail desejado e com isso ao comentar em um blog ou servi√ßo que disponibiliza o recurso o mesmo exibir√° automaticamente a imagem configurada.\nE para manipular o servi√ßo com maior facilidade constru√≠ uma biblioteca para executar esta tarefa, vamos ao seu uso!\nPara isso vamos criar a estrutura do nosso projeto, crie um diret√≥rio com o seguinte nome ‚Äòpost-imagem-gravatar‚Äô.","title":"Obtendo imagens do Gravatar"},{"content":"Ol√°, tudo bem?!\n√â com alegria que apresento o v√≠deo da s√©tima edi√ß√£o do canal hhbr e nesta edi√ß√£o tivemos a honra de prestigiar um bate papo excepcional com o grande Fabio Vedovelli, neste bate papo falamos sobre o mercado de trabalho para desenvolvedores, foi uma experi√™ncia muito enriquecedora onde nosso convidado compartilhou suas experi√™ncias como empreendedor e desenvolvedor para o mercado estrangeiro (Estados Unidos e Alemanha) sem mais delongas espero que apreciem o v√≠deo.\nDados da palestra\u0026lt; Tema: ‚ÄúMercado de trabalho.‚Äù Palestrante: Fabio Vedovelli Twitter: https://twitter.com/vedovelli Site: http://www.vedovelli.com.br/ GitHub: ttps://github.com/vedovelli At√© a pr√≥xima, abra√ßos!\n","permalink":"https://diegobrocanelli.com.br/php/mercado-de-trabalho-video/","summary":"Ol√°, tudo bem?!\n√â com alegria que apresento o v√≠deo da s√©tima edi√ß√£o do canal hhbr e nesta edi√ß√£o tivemos a honra de prestigiar um bate papo excepcional com o grande Fabio Vedovelli, neste bate papo falamos sobre o mercado de trabalho para desenvolvedores, foi uma experi√™ncia muito enriquecedora onde nosso convidado compartilhou suas experi√™ncias como empreendedor e desenvolvedor para o mercado estrangeiro (Estados Unidos e Alemanha) sem mais delongas espero que apreciem o v√≠deo.","title":"hhbr : 07 ‚Äì Mercado de Trabalho (v√≠deo)"},{"content":"Ol√°, tudo tranquilo?!\nUma a√ß√£o bem simples e que pode nos auxiliar em muito no dia a dia √© calcular a diferen√ßa entre duas datas. Para isso vou demonstrar a forma mais simples para realizar esta a√ß√£o.\n1 2 3 4 5 6 \u0026lt;?php $dateStart = new \\DateTime(\u0026#39;2017-01-01\u0026#39;); $dateNow¬†= new \\DateTime(date(\u0026#39;Y-m-d\u0026#39;)); $dateDiff = $dateStart-\u0026gt;diff($dateNow);\u0026lt; Vamos detalhar o c√≥digo acima:\nPrimeiro armazenamos a data base na qual desejamos verificar.\nLogo em seguida criamos uma vari√°vel e nela inserimos a data atual, lembrando que poderia ser qualquer data passado, presente ou futuro.\nPodemos notar que para calcular a diferen√ßa entre as duas datas foi utilizado a data base e como ela √© um objeto ‚ÄúDateTime‚Äù podemos chamar seu m√©todo ‚Äúdiff‚Äù, abaixo podemos analisar o resultado da nossa a√ß√£o.\n1 2 3 4 5 6 7 8 9 object(DateInterval)[3] public \u0026#39;y\u0026#39; =\u0026gt; int 0 public \u0026#39;m\u0026#39; =\u0026gt; int 1 public \u0026#39;d\u0026#39; =\u0026gt; int 7 public \u0026#39;h\u0026#39; =\u0026gt; int 0 public \u0026#39;i\u0026#39; =\u0026gt; int 0 public \u0026#39;s\u0026#39; =\u0026gt; int 0 public \u0026#39;invert\u0026#39; =\u0026gt; int 0 public \u0026#39;days\u0026#39; =\u0026gt; int 38 Como retorno obtivemos um objeto do tipo ‚ÄúDateInterval‚Äù com isso teremos acesso a diversos atributos p√∫blicos, abaixo vamos detalhar cada um deles:\n‚Äúy‚Äù N√∫mero de anos. ‚Äúm‚Äù N√∫mero de meses. ‚Äúd‚Äù N√∫mero de dias. ‚Äúh‚Äù N√∫mero de horas. ‚Äúi‚Äù N√∫mero de minutos. ‚Äús‚Äù N√∫mero de segundos. ‚Äúinvert‚Äù Ser√° 1 se o intervalo representa um per√≠odo negativo de tempo e 0 (zero) caso contr√°rio. ‚Äúdays‚Äù Representa o n√∫mero total de dias entre as duas datas (data inicial e data final). Podemos tamb√©m calcular a diferen√ßa de horas dentro do mesmo dia, vejamos o exemplo abaixo:\n1 2 3 4 5 6 \u0026lt;?php $dateStart = new \\DateTime(\u0026#39;2017-02-08 08:00\u0026#39;); $dateNow = new \\DateTime(date(\u0026#39;Y-m-d H:i\u0026#39;)); $dateDiff = $dateStart-\u0026gt;diff($dateNow); Como podemos observar, utilizamos a mesma data para ambas as vari√°veis divergindo apenas nas horas e minutos, podemos observar abaixo o resultado:\n1 2 3 4 5 6 7 8 9 object(DateInterval)[3] public \u0026#39;y\u0026#39; =\u0026gt; int 0 public \u0026#39;m\u0026#39; =\u0026gt; int 0 public \u0026#39;d\u0026#39; =\u0026gt; int 0 public \u0026#39;h\u0026#39; =\u0026gt; int 9 public \u0026#39;i\u0026#39; =\u0026gt; int 44 public \u0026#39;s\u0026#39; =\u0026gt; int 0 public \u0026#39;invert\u0026#39; =\u0026gt; int 0 public \u0026#39;days\u0026#39; =\u0026gt; int 0 Com uma simples opera√ß√£o conseguimos descobrir que a diferen√ßa entre os dois valores s√£o de 9horas¬†e 44 minutos.\nPara acessarmos os valores de cata atributo basta cham√°-los de forma direta, vejamos o exemplo abaixo para capturarmos a hora e minuto do nosso exemplo.\n1 2 3 4 5 \u0026lt;?php // c√≥digos do nosso exemplo acima $result = $dateDiff-\u0026gt;h . \u0026#39; horas e \u0026#39; . $dateDiff-\u0026gt;i . \u0026#39; minutos\u0026#39;; Nossa vari√°vel ‚Äú$result‚Äù conter√° a ‚Äústring‚Äù ‚Äú9 horas e 54 minutos‚Äù.\nViram como √© muito simples calcular a diferen√ßa entre duas datas com PHP, espero que tenham apreciado e que seja √∫til no dia a dia de voc√™s.\nAt√© a pr√≥xima pessoal üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/calculando-diferenca-entre-duas-datas-com-php/","summary":"Ol√°, tudo tranquilo?!\nUma a√ß√£o bem simples e que pode nos auxiliar em muito no dia a dia √© calcular a diferen√ßa entre duas datas. Para isso vou demonstrar a forma mais simples para realizar esta a√ß√£o.\n1 2 3 4 5 6 \u0026lt;?php $dateStart = new \\DateTime(\u0026#39;2017-01-01\u0026#39;); $dateNow¬†= new \\DateTime(date(\u0026#39;Y-m-d\u0026#39;)); $dateDiff = $dateStart-\u0026gt;diff($dateNow);\u0026lt; Vamos detalhar o c√≥digo acima:\nPrimeiro armazenamos a data base na qual desejamos verificar.\nLogo em seguida criamos uma vari√°vel e nela inserimos a data atual, lembrando que poderia ser qualquer data passado, presente ou futuro.","title":"Calculando a diferen√ßa entre duas datas com PHP"},{"content":"Fala galera, tudo tranquilo?!\nChegamos na √∫ltima parte de nossa trajet√≥ria de defesa eficaz contra SQL Injection, caso voc√™ esteja lendo este conte√∫do e n√£o tem conhecimento dos outros dois posts (Defesa eficaz contra SQL Injection ‚Äì Introdu√ß√£o e Defesa eficaz contra SQL Injection ‚Äì Filtragem e valida√ß√£o dos dados)¬†recomendo a leitura para maior compreens√£o do tema.\nN√≥s demos uma introdu√ß√£o do SQL Injection, abordamos o qu√£o importante √© validar e filtrar os dados recebidos antes de realizar a consulta no banco de dados e agora vamos completar nosso ciclo de login realizando uma consulta no banco para confirmar a exist√™ncia ou n√£o do usu√°rio no banco de dados.\nLembrando que um processo de login √© mais complexo e elaborado, porem estou simplificando para que os t√≥picos de SQL Injection seja mais destacado.\nO PHP disponibiliza diversas maneiras para se conectar no banco de dados, como por exemplo as fun√ß√µes ‚Äúmysql_*‚Äù, mysqli_* e PDO. Vale salientar que caso voc√™ utilize as fun√ß√µes ‚Äúmysql_*‚Äù recomendo que pare agora pois elas foram depreciadas e n√£o fazem mais parte do PHP desde o lan√ßamento do PHP 7.\nEu particularmente n√£o sou adepto de utilizar a fun√ß√£o ‚Äúmysqli_‚Äù, prefiro o uso do PDO, pois √© mais robusto e disponibiliza uma gama de op√ß√µes que atendem todas as necessidades.\nPara nosso caso de estudo vamos analisar o c√≥digo abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;?php $querySQL = \u0026#39;SELECT email FROM users WHERE email = :email AND senha = :senha\u0026#39;; try{ $email = \u0026#39;meu_email@teste.com.br\u0026#39;; $senha = \u0026#39;m1nh@ s3nh@ sup3r s3gur@ 1234\u0026#39;; $pdo = new \\PDO(\u0026#34;mysql:host=DB_LOCAL;dbname=DB_NAME\u0026#34;, \u0026#39;DB_USER\u0026#39;, \u0026#39;DB_PASSWORD\u0026#39;); $statement = $pdo-\u0026gt;prepare($querySQL); $statement-\u0026gt;bindParam(\u0026#39;:email\u0026#39; , $email); $statement-\u0026gt;bindParam(\u0026#39;:senha\u0026#39; , $senha); $statement-\u0026gt;execute(); $result = $statement-\u0026gt;fetchAll(); }catch(\\Exception $exc){ // tratamento da exce√ß√£o } Primeiro temos nossa vari√°vel contendo nossa string sql e nela informamos os valores que ser√£o substitu√≠mos por meio do s√≠mbolo ‚Äú:‚Äù.\nAs vari√°veis ‚Äú$email‚Äù e ‚Äú$senha‚Äù s√£o meramente did√°ticas, apenas simbolizando a passagem de par√¢metro posteriormente para a consulta SQL.\nInicialmente instanciamos nossa Classe PDO e passamos os par√¢metros de conex√£o, cabe salientar que todas e qualquer informa√ß√£o de credencial de acesso ao banco de dados nunca devem ser armazenadas em arquivos de acesso pelo usu√°rio, sempre devemos zelar pela sua integridade onde somente o sistema deve ter acesso a estas informa√ß√µes.\nLogo em seguida realizamos o ‚Äúprepare‚Äù dos dados da consulta e armazenamos o prepare em nossa vari√°vel ‚Äú$statement‚Äù.\nEm seguida realizamos o ‚Äúbind‚Äù das informa√ß√µes recebidas com as declaradas na strgin SQL.\nExecutamos nossa query SQL e podemos retornar a consulta com o m√©todo ‚ÄúfetchAll‚Äù;\nComo podemos notar, em poucas linhas de c√≥digo fomos capazes de realizar uma consulta no banco de dados e receber seu resultado sem muito esfor√ßo.\nE se n√≥s empregarmos as boas pr√°ticas que discutimos nesses √∫ltimos post, onde todo input e output de dados ser√° validado e tratado e ao realizar uma a√ß√£o no banco de dados podendo ser um SELECT, INSERT ou qualquer outra a√ß√£o por meio do PDO, nossas consultas no banco de dados ser√£o muito mais seguras e nossas aplica√ß√µes ter√£o uma cama ainda maior de prote√ß√£o dos dados.\nInfelizmente, n√£o √© poss√≠vel abordar todo o tema em apenas 3 post, pois √© um tema vasto e que sempre devemos pesquisar cada vez mais como melhorar nossa seguran√ßa e proteger ainda mais nossas aplica√ß√µes.\nN√£o recomendo que voc√™ crie seu framrwork do zero para manipula√ß√£o de banco de dados, pois existem hoje no mercado diversas ferramentas que fazem isso com maestria como por exemplo:\nDoctrine Zend-DB Eloquent As ferramentas citadas acima s√£o poderosas e contem um vasto arsenal de recursos que ir√£o facilitar e auxiliar no processo para trabalhar com banco de dados, pois disp√µem de uma grande comunidade que trabalha para melhorar, corrigir bugs e implementar novas features.\nCaso voc√™ tenha interesse em construir um componente com prop√≥sitos acad√™micos, eu acho perfeitamente normal e aconselho, pois assim voc√™ ampliar√° seus conhecimentos na √°rea.\nLembrando tamb√©m que nada o impede de contribuir com os projetos, pois todos os tr√™s s√£o open sources üôÇ\nE assim chegamos ao fim da nossa saga para melhorar nossas aplica√ß√µes e proteger ainda mais contra SQL Injection, nada que mencionei aqui √© escrito em pedra e ser√° fant√°stico discutirmos mais sobre o assunto, por favor deixe suas perguntas e sugest√µes nos coment√°rios.\nLembre sempre que seguran√ßa de aplica√ß√µes n√£o √© negoci√°vel, pois o usu√°rio deposita sua confian√ßa nos sistemas que constru√≠mos e devemos contribuir protegendo os dados que eles fornecem.\nCaso voc√™ conhe√ßa algu√©m que discorde e acha desnecess√°rio validar e filtrar os dados recebidos pela aplica√ß√£o e que para fazer uma consulta no banco n√£o √© nada de mais, basta executar e ter o retorno, mostre para ele essa s√©rie de posts e vamos juntos melhorar a qualidade das aplica√ß√µes desenvolvidas, pois com isso¬†podemos demonstrar que os t√≥picos que abordamos aqui s√£o de extrema import√¢ncia e todos n√≥s devemos utilizar no desenvolvimento de sistemas.\nE caso voc√™ se depare com uma aplica√ß√£o que n√£o siga essas regras de boas pr√°ticas ou at√© mesmo tenha desenvolvido o sistema, isso n√£o √© ruim, o ruim √© saber que est√° errado e n√£o fazer nada para concertar ou melhorar, sempre teremos algo para implementar que trar√° maior seguran√ßa para nossas aplica√ß√µes.\nEspero que tenham apreciado e at√© a pr√≥xima üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/defesa-eficaz-contra-sql-injection-comunicacao-com-o-banco-de-dados/","summary":"Fala galera, tudo tranquilo?!\nChegamos na √∫ltima parte de nossa trajet√≥ria de defesa eficaz contra SQL Injection, caso voc√™ esteja lendo este conte√∫do e n√£o tem conhecimento dos outros dois posts (Defesa eficaz contra SQL Injection ‚Äì Introdu√ß√£o e Defesa eficaz contra SQL Injection ‚Äì Filtragem e valida√ß√£o dos dados)¬†recomendo a leitura para maior compreens√£o do tema.\nN√≥s demos uma introdu√ß√£o do SQL Injection, abordamos o qu√£o importante √© validar e filtrar os dados recebidos antes de realizar a consulta no banco de dados e agora vamos completar nosso ciclo de login realizando uma consulta no banco para confirmar a exist√™ncia ou n√£o do usu√°rio no banco de dados.","title":"Defesa eficaz contra SQL Injection ‚Äì Comunica√ß√£o com o banco de dados"},{"content":"Fala galera, tudo tranquilo?!\nNeste post daremos continuidade a nossa se≈ïie de posts para preven√ß√£o de SQL injection, caso voc√™ ainda n√£o tenha lido nosso primeiro post ‚ÄúDefesa eficaz contra SQL Injection ‚Äì Introdu√ß√£o‚Äù recomendo a leitura para que assim voc√™ possa usufruir com maior qualidade dos textos.\nTodo sistema, sendo ele desktop, mobile ou web ele recebe dados transmitidos pelo usu√°rio, podendo ser um simples formul√°rio para coleta de e-mail at√© informa√ß√µes complexas como controle de fluxo or√ßament√°rio da empresa. E o ponto comum neste processo √© o tr√°fego de informa√ß√µes entre o sistema e o banco de dados. Para mantermos este elo seguro devemos empregar SEMPRE uma boa pr√°tica sendo ela: validar e filtrar ‚Äúinput‚Äù e ‚Äúoutput‚Äù. E o que seria isso? Pois bem vamos detalhar um pouco mais esse processo com nosso caso de uso.\nPara nosso caso de uso usaremos uma a√ß√£o de login, onde o usu√°rio deve informar seu e-mail e senha para ter acesso ao sistema e seus dados, esse caso de uso √© excelente pois estamos habituados com o ciclo de uma autentica√ß√£o no sistema, ficando assim mais f√°cil focar nos conceitos do post.\nSempre que formos manipular os dados para enviar ao servidor e consecutivamente ao banco de dados, temos que garantir que os dados que estamos recebendo de fato correspondem com o desejado, evitando assim quaisquer informa√ß√£o indesejada vindo do cliente, sempre temos que partir do pressuposto que nada vindo do usu√°rio √© seguro e que sempre devemos nos prevenir da melhor maneira poss√≠vel, fazendo isso teremos uma aplica√ß√£o muito mais segura.\nPrimeiro ponto que gostaria de salientar, caso voc√™ v√° transmitir dados para o servidor, sempre d√™ prefer√™ncia em trafegar os dados pelo meio do m√©todo ‚ÄúPOST‚Äù em detrimento do ‚ÄúGET‚Äù, fazendo isso os dados n√£o ficam ‚Äúvis√≠veis‚Äù para o usu√°rio na ‚ÄúURL‚Äù.\nAp√≥s o envio dos dados vamos iniciar nosso processo de filtragem de dados e como exemplo utilizarei o PHP para demonstrar algumas maneiras eficazes de fazer esse processo, porem todo conceito apresentado aqui vale para qualquer outra linguagem de programa√ß√£o.\n√â muito comum encontrarmos c√≥digos PHP deste tipo:\n1 2 3 4 5 6 \u0026lt;?php $email = $_POST[\u0026#39;email\u0026#39;]; $senha = $_POST[\u0026#39;senha\u0026#39;] $querySQL = \u0026#39;SELECT * FROM users WHERE email = \u0026#39;.$email.\u0026#39; AND senha = \u0026#39;. $senha. \u0026#39; ;\u0026#39;; E aqui entra os pontos do porque isso √© inseguro, pois √© passado de forma direta os dados recebidos do formul√°rio e inserido na consulta SQL. Est√° pr√°tica n√£o garante em nada a integridade dos dados recebidos deixando nosso sistema vulner√°vel para receber instru√ß√µes para manipula√ß√£o do nosso banco de dados.\nEnt√£o, como uma regra que gostaria de fazer com voc√™s √© NUNCA DEVEMOS passar qualquer tipo de informa√ß√£o para nossa consulta SQL sem antes validar sua estrutura!\nfilter_input Para substituirmos nosso famigerado $_POST, podemos utilizar uma fun√ß√£o nativa do PHP para fazer a coleta e valida√ß√£o da informa√ß√£o j√° no ato em que recebemos os dados, vejamos o exemplo abaixo:\n1 2 3 4 \u0026lt;?php $email = filter_input(INPUT_POST, \u0026#39;email\u0026#39;, FILTER_VALIDATE_EMAIL); $senha = filter_input(INPUT_POST, \u0026#39;senha\u0026#39;); Como podemos analisar, ao chamarmos a fun√ß√£o ‚Äúfilter_input‚Äù no primeiro par√¢metro informado determinamos o tipo de origem da informa√ß√£o, no segundo par√¢metro informamos o nome do campo que desejamos receber e por √∫ltimo informamos que desejamos validar se o dado recebido √© um e-mail.\nEssa fun√ß√£o suporta receber o seguintes valores da request HTTP:\nINPUT_GET INPUT_POST INPUT_COOKIE INPUT_SERVER INPUT_ENV E caso desejamos validar com mais filtros nosso input basta inserir uma virgula e informar o pr√≥ximo par√¢metro. Caso n√£o seja informado nenhum validador, como no caso do campo de senha, por default a fun√ß√£o utiliza ‚ÄúFILTER_DEFAULT‚Äù.\nCaso a informa√ß√£o recebida pelo ‚Äúfilter_input‚Äù n√£o corresponda com o especificado seu retorno ser√° ‚Äúfalse‚Äù, caso a vari√°vel n√£o seja definida retornar√° ‚Äúnull‚Äù.\nfilter_var Temos como alternativa a fun√ß√£o filter_var, vejamos no exemplo abaixo:\n1 2 3 4 \u0026lt;?php $email = filter_var($_POST[\u0026#39;email\u0026#39;], FILTER_VALIDATE_EMAIL); $senha = filter_var($_POST[\u0026#39;senha\u0026#39;]); Executa uma a√ß√£o similar ao ‚Äúfilter_input‚Äù por√©m suas diferen√ßas s√£o:\nDevemos inserir a informa√ß√£o que desejamos filtrar. Caso n√£o seja informado um filtro espec√≠fico o mesmo utiliza por ‚Äúdefault‚Äù o ‚ÄúFILTER_SANITIZE_STRING‚Äù. Caso valor informado n√£o corresponda com o filtro desejado seu retorno ser√° ‚Äúfalse‚Äù. As duas fun√ß√µes apresentadas acima j√° insere uma camada de verifica√ß√£o nos dados recebidos, por√©m no universo PHP dispomos de bibliotecas que fazem a fun√ß√£o de validar e filtrar os dados de forma excepcional, abaixo podemos ver algumas dessas ferramentas.\nZend Zend-Filter Zend-Validator Duas ferramentas fant√°sticas dispon√≠veis no Zend Framework que podem ser utilizadas de forma isolada por√©m, em conjunto s√£o poderos√≠ssimas. Symfony Validation Ferramenta de iqual poder disponibilizada pela equipe do framework Symfony,¬†fornecendo uma gama de op√ß√µes para configurar suas valida√ß√µes ,como por exemplo: ‚ÄúAnnotations‚Äù, ‚ÄúYaml‚Äù, ‚ÄúPHP‚Äù e ‚ÄúXML‚Äù. Respect Validation Ferramenta ‚ÄúBrazuca‚Äù, demonstrando a qualidade do c√≥digo produzido no Brasil, muito simples de se utilizar pois usa arquitetura modular, permite que voc√™ possa trabalhar em qualquer projeto utilizando essa biblioteca. Eu particularmente recomendo que se fa√ßa uso de alguma ferramenta de mercado, podendo ser uma das listadas acima ou outra de sua prefer√™ncia, pois essas ferramentas tem uma equipe de programadores contribuindo para seu crescimento e aperfei√ßoamento, nas corre√ß√µes de bugs e por mais que voc√™ se empenhe em construir sua pr√≥pria biblioteca, esse processo ser√° longo e custoso e na grande maioria dos projetos que participamos em nosso dia a dia eles n√£o disp√µem de tempo para tal abordagem.\nClaro que se voc√™ gostaria de construir um conjunto de ferramenta para praticar e estudar √© totalmente v√°lido e recomendo.\nEspero que neste post eu tenha transmitido a import√¢ncia que se √© o tratamento de dados, pois √© uma pr√°tica inegoci√°vel independente de prazo ou tecnologia, sempre devemos ter como padr√£o esta boa pr√°tica.\nNo pr√≥ximo post ‚ÄúDefesa eficaz contra SQL Injection ‚Äì Comunica√ß√£o com o banco de dados‚Äù irei abordar uma forma eficaz de comunica√ß√£o com o banco de dados e como podemos realizar as a√ß√µes no banco sem dores de cabe√ßa.\nAt√© o pr√≥ximo post üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/defesa-eficaz-contra-sql-injection-filtragem-e-validacao-dos-dados/","summary":"Fala galera, tudo tranquilo?!\nNeste post daremos continuidade a nossa se≈ïie de posts para preven√ß√£o de SQL injection, caso voc√™ ainda n√£o tenha lido nosso primeiro post ‚ÄúDefesa eficaz contra SQL Injection ‚Äì Introdu√ß√£o‚Äù recomendo a leitura para que assim voc√™ possa usufruir com maior qualidade dos textos.\nTodo sistema, sendo ele desktop, mobile ou web ele recebe dados transmitidos pelo usu√°rio, podendo ser um simples formul√°rio para coleta de e-mail at√© informa√ß√µes complexas como controle de fluxo or√ßament√°rio da empresa.","title":"Defesa eficaz contra SQL Injection ‚Äì Filtragem e valida√ß√£o dos dados"},{"content":"Fala galera, tudo tranquilo?!\nUm tema muito bacana e recorrente no desenvolvimento web √© SQL Injection e neste post irei abordar algumas boas pr√°ticas na defesa contra esses ataques.\nTeremos 3 posts relacionados ao tema, sendo:\nIntrodu√ß√£o ao SQL Injection. Filtragem e valida√ß√£o de dados. Comunica√ß√£o com o banco de dados. O que √© SQL Injection? √â um tipo de amea√ßa relacionado a seguran√ßa, que se aproveita de falhas em sistemas que interagem com bases de dados para inserir trechos de c√≥digo SQL para realizar a√ß√µes n√£o desejadas e¬†para manipular, roubar ou danificar a estrutura ou dados contidos no banco de dados.\nQuais s√£o os tipos mais comuns de SQL Injection? Poorly Filtered Strings Relacionado a passagem de par√¢metros (dados) n√£o filtratos e passados de forma direta para a consulta SQL. Incorrect type handling Ocorre quando o tipo do par√¢metro informado n√£o √© validado e passado de forma direta para a consulta SQL. Signature Evasion Quando ocorre o escape da assinatura de sistema para detec√ß√£o de SQL Insection como por exemplo o ‚Äúmod_security‚Äù do Apache. Filter Bypassing Em determinadas condi√ß√µes filtros como ‚Äúaddslashes‚Äù e ‚Äúmagic_quotes_gpc‚Äù podem ser ignorados quando o servidor SQL vulner√°vel est√° usando conjuntos de caracteres, como o conjunto de caracteres ‚ÄúGBK‚Äù. Blind SQL Injection S√£o pequenas mudan√ßas percept√≠veis no sistema resultante da inje√ß√£o SQL. Quais os problemas que isso pode me causar? Perda parcial ou total dos dados do sistema. Sequestro de dados sigilosos. Altera√ß√£o e/ou manipula√ß√£o direta dos dados. Como vimos neste post por mais comum que seja o tema, devemos sempre estar atento no processo de desenvolvimento de sistemas para que boas pr√°ticas sejam empregadas e assim deixarmos cada vez mais seguras e confi√°veis para o usu√°rio.\nNo pr√≥ximo post ‚ÄúDefesa eficaz contra SQL Injection ‚Äì Filtragem e valida√ß√£o dos dados‚Äù vamos abordar t√©cnicas b√°sicas e avan√ßadas para o tratamento de dados da nossa aplica√ß√£o.\nEspero que tenham apreciado üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/defesa-eficaz-contra-sql-injection-introducao/","summary":"Fala galera, tudo tranquilo?!\nUm tema muito bacana e recorrente no desenvolvimento web √© SQL Injection e neste post irei abordar algumas boas pr√°ticas na defesa contra esses ataques.\nTeremos 3 posts relacionados ao tema, sendo:\nIntrodu√ß√£o ao SQL Injection. Filtragem e valida√ß√£o de dados. Comunica√ß√£o com o banco de dados. O que √© SQL Injection? √â um tipo de amea√ßa relacionado a seguran√ßa, que se aproveita de falhas em sistemas que interagem com bases de dados para inserir trechos de c√≥digo SQL para realizar a√ß√µes n√£o desejadas e¬†para manipular, roubar ou danificar a estrutura ou dados contidos no banco de dados.","title":"Defesa eficaz contra SQL Injection ‚Äì Introdu√ß√£o"},{"content":"Ol√° pessoal, como voc√™s est√£o?!\nEm minhas navega√ß√µes e pesquisas pela web, me deparei com uma d√∫vida postada no Stack Ovwerflow, sendo a seguinte:\nComo posso descobrir quantas linhas tem um texto?‚Äù\nNa descri√ß√£o da d√∫vida, foi explicado que o objetivo era contar quantas quebras de linhas tem em um texto.¬†Sabendo da d√∫vida, agora vamos em busca da resposta.\n1 2 3 4 5 6 7 \u0026lt;?php $string = \u0026#39;Bacon ipsum dolor amet fatback sausage ball tip ham hock bacon burgdoggen. Pancetta ham hock frankfurter swine sausage tenderloin, kevin short ribs. Sirloin filet mignon meatball ham, ham hock cow prosciutto rump ground round brisket. Jowl short loin frankfurter pork chop ball tip rump shank kevin shoulder short ribs andouille. Turducken beef ribs corned beef, meatball shankle hamburger andouille shank short ribs sausage leberkas. Porchetta hamburger shank, pork loin spare ribs tail cupim meatloaf. Strip steak ground round flank doner pork sirloin. Tri-tip spare ribs swine, ground round ribeye salami pancetta cupim pig beef. Pork chop chicken doner picanha. Strip steak ribeye short loin, pancetta tri-tip rump fatback corned beef meatloaf alcatra kevin drumstick. Bresaola shoulder shank, rump ham ground round strip steak t-bone.\u0026#39;; $lines = substr_count( nl2br($string), \u0026#39;\u0026lt;br /\u0026gt;\u0026#39;); E como retorno teremos ‚Äú2‚Äù bem simples, por√©m vamos detalhar um pouco o c√≥digo.\nInicialmente, declaramos uma vari√°vel e atribu√≠mos dois par√°grafos de texto.\nEm seguida fazemos uso de dois m√©todos nativos do PHP, sendo eles:\nsubstr_count(): respons√°vel por contabilizar a quantidade de ocorr√™ncias de uma determinada string desejada, no nosso caso ‚Äò‚Äô. nl2br(): esta fun√ß√£o recebe uma string e nativamente insere a tag ‚Äò‚Äô em todas as quebras de linhas encontradas no texto. Por final armazenamos o retorno e obtemos a quantidade de par√°grafos do texto.\nViram como foi simples e para ampliar nosso leque de op√ß√µes vou demonstrar uma outra aplicabilidade, vamos descobrir a quantidade de linhas de um texto em um arquivo .txt üôÇ\nPara isso devemos criar um arquivo .txt e nele eu vou inserir 20 par√°grafos do Bacon Ipsum .\n1 2 3 4 5 6 7 8 9 \u0026lt;?php $path = __DIR__.\u0026#39;/example.txt\u0026#39;; $handle = fopen($path, \u0026#39;r\u0026#39;); $contentFile = fread($handle, filesize($path)); fclose($handle); $counter = nl2br($contentFile); $lines = substr_count($counter, \u0026#39;\u0026lt;br /\u0026gt;\u0026#39;); Em nosso c√≥digo acima realizamos o procedimento para ler todo o conte√∫do do arquivo ‚Äúexample.txt‚Äù em seguida utilizamos a mesma l√≥gica aplicada para descobrir a quantidade de ‚Äò\\n‚Äô contidas no texto,¬†como retorno do nosso c√≥digo teremos ‚Äô38‚Äô no total.\nNovamente com poucas linhas de c√≥digo podemos contabilizar de forma r√°pida e autom√°tica a quantidade de quebras de linha no texto.\nEspero que tenha ajudado e nos vemos no pr√≥ximo post üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/descobrindo-quantidade-de-quebra-de-linhas-de-um-texto-com-php/","summary":"Ol√° pessoal, como voc√™s est√£o?!\nEm minhas navega√ß√µes e pesquisas pela web, me deparei com uma d√∫vida postada no Stack Ovwerflow, sendo a seguinte:\nComo posso descobrir quantas linhas tem um texto?‚Äù\nNa descri√ß√£o da d√∫vida, foi explicado que o objetivo era contar quantas quebras de linhas tem em um texto.¬†Sabendo da d√∫vida, agora vamos em busca da resposta.\n1 2 3 4 5 6 7 \u0026lt;?php $string = \u0026#39;Bacon ipsum dolor amet fatback sausage ball tip ham hock bacon burgdoggen.","title":"Descobrindo a quantidade de quebra de  linhas de um texto com PHP"},{"content":"Fala galera, tudo bem?!\nUma d√∫vida recorrente √© a convers√£o de data de EN para PT-BR, uma tarefa corriqueira em nosso dia a dia.\nComumente trabalhamos no formato EN para armazenar a informa√ß√£o no banco de dados, por√©m em determinados casos temos a necessidade de converter a data para PT_BR.\nPois bem, mas como podemos fazer isso?\nTemos diversas maneiras, porem a que vou apresentar aqui julgo ser a mais simples.\n1 2 3 4 5 \u0026lt;?php $dateEN = new \\DateTime(\u0026#39;2017-02-01\u0026#39;); $datePTBR = $dateEN-\u0026gt;format(\u0026#39;d/m/Y\u0026#39;); echo $datePTBR; //output: 01/02/2017 Como resultado teremos ‚Äú01/02/2017‚Äù, simples assim, em apenas 2 linhas de c√≥digo convertemos facilmente nossa data para PT-BR.\nTenho tr√™s pontos a salientar:\nComo demonstrado no exemplo acima, podemos passar no construtor do DateTime o valor desejado. Ao evocar o m√©todo format, podemos determinar qual o formato desejado, por exemplo nada impediria que inform√°ssemos o padr√£o ‚Äòd/m‚Äô para retornar ‚Äô01/02‚Ä≤ ou o formato ‚Äòd/m/y‚Äô para retornar o valor ‚Äô01/02/17‚Ä≤. Utilizei somente data neste exemplo, porem nada impede de trabalhar com data e tempo ao mesmo tempo üôÇ Para maiores esclarecimentos para com os formatos suportados pelo PHP, recomendo a leitura da documenta√ß√£o pois √© extremamente rica.\nEsse post foi curto, por√©m focado, espero ter lhe ajudado.\nAt√© a pr√≥xima üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/converter-data-para-pt-br-com-php/","summary":"Fala galera, tudo bem?!\nUma d√∫vida recorrente √© a convers√£o de data de EN para PT-BR, uma tarefa corriqueira em nosso dia a dia.\nComumente trabalhamos no formato EN para armazenar a informa√ß√£o no banco de dados, por√©m em determinados casos temos a necessidade de converter a data para PT_BR.\nPois bem, mas como podemos fazer isso?\nTemos diversas maneiras, porem a que vou apresentar aqui julgo ser a mais simples.","title":"Converter data para PT-BR com PHP"},{"content":"Fala galera, tudo bem?!\nTivemos a sexta edi√ß√£o do hhbr a primeira edi√ß√£o de 2017, e nesta fant√°stica edi√ß√£o foi abordado o tema de criptografia no HTTPS, conte√∫do apresentado pelo grande Diego Hernandes.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúCriptografia: Entendendo o HTTPS‚Äù Palestrante: Diego Hernandes Twitter: ttps://twitter.com/_hernande Site: https://codecasts.com.br GitHub: https://github.com/hernande Slides: https://speakerdeck.com/hernandev/criptografia-como-funciona-o-http ‚Äî Contatos Canal ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-\nAt√© a pr√≥xima, abra√ßos!\n","permalink":"https://diegobrocanelli.com.br/video/criptografia-entendendo-o-https-video/","summary":"Fala galera, tudo bem?!\nTivemos a sexta edi√ß√£o do hhbr a primeira edi√ß√£o de 2017, e nesta fant√°stica edi√ß√£o foi abordado o tema de criptografia no HTTPS, conte√∫do apresentado pelo grande Diego Hernandes.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúCriptografia: Entendendo o HTTPS‚Äù Palestrante: Diego Hernandes Twitter: ttps://twitter.com/_hernande Site: https://codecasts.com.br GitHub: https://github.com/hernande Slides: https://speakerdeck.com/hernandev/criptografia-como-funciona-o-http ‚Äî Contatos Canal ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-\nAt√© a pr√≥xima, abra√ßos!","title":"hhbr : 06 ‚Äì Criptografia: Entendendo o HTTPS (V√≠deo)"},{"content":"Ol√° pessoal, tudo bem?!\nHoje em dia n√£o consigo listar um sistema se quer que eu tenha trabalhado sem um mecanismo de login, pode ser com e-mail + senha, usu√°rio + senha porem esse √© um recurso que todos os sistema utilizam. E decorrente a isso aparece a grande pergunta, como tratar a senha?\nSim, devemos tratar a senha e n√£o devemos nunca, vou repetir, NUNCA devemos armazenar a senha em texto puro no banco de dados ou em qualquer outro tipo de armazenamento. Isso √© uma das regras b√°sicas de seguran√ßa em aplica√ß√µes tanto desktop quanto para web.\nPor√©m, como vamos tratar esta informa√ß√£o que j√° sabemos ser bem valiosa?\nEu gosto muito do componente Zend-Crypt, uma poderosa ferramenta para gerar hash.\nEste componente √© modular, podendo ser utilizado dentro da estrutura do Zend Framework, ou de forma isolada, para facilitar sua compreens√£o, vamos utiliz√°-lo de forma isolada, porem como dito seu uso n√£o difere no ZF.\nPara iniciar, devemos criar nossa estrutura base do projeto, seguindo o modelo descrito abaixo.\nzend_crypt_post index.php Sim, nossa estrutura inicial √© basicamente um √∫nico arquivo üôÇ\nVamos dar inicio ao desenvolvimento, agora devemos instalar o componente e ser√° utilizado o composer para isso, acesse a raiz do projeto e execute o comando abaixo.\n1 composer require zendframework/zend-crypt Ap√≥s o processo de instala√ß√£o ser conclu√≠do, a estrutura do projeto deve ficar semelhante ao demonstrado abaixo.\nzend_crypt_post vendor composer.json composer.lock index.php Estrutura do projeto finalizado, vamos para a parte divertida, m√£o na massa!\nAbra o arquivo index.php, e importe o autoload.php, conforme demonstrado abaixo.\n1 2 3 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; Agora devemos declarar o uso do recurso Bcrypt.\n1 2 3 4 5 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Crypt\\Password\\Bcrypt; Vamos utilizar o bcrypt, por ser considerado uma das formas mais seguras de tratamento de senhas, caso voc√™ tenha o h√°bito de utilizar md5 ou sha espero que no final deste post eu o tenha convencido de n√£o mais utilizar estes dois m√©todos e passe a utilizar o bcrypt, para melhor seguran√ßa de suas senhas üôÇ\nPara gerar nosso hash de senha, basta utilizar o m√©todo create();\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Crypt\\Password\\Bcrypt; $password = \u0026#39;minha primeira senha\u0026#39;; $bcrypt = new Bcrypt(); $bcrypt-\u0026gt;create($password); Como resultado teremos uma string contendo 60 caracteres:\n1 $2y$14$zbK.VtsYCUwDgyPF6snCmuQUzUlR5Wtw9P0d3qGS19EfiR9Otv1da Viram como √© simples, e n√£o para por a√≠, podemos utilziar mais dois recursos bacanas para potencializar a seguran√ßa da nossa senha, sendo elas:\nsalt Conceito utilizado n√£o somente no bcrypt, porem para implementar uma maior seguran√ßa a seu hash, tendo em vista que o salt fica alocado internamente no sistema. cost O bcrypt usa o sistema de cost ‚Äúcusto‚Äù, para especificar o n√∫mero de ciclos a serem utilizados pelo algoritmo no processo de cria√ß√£o do hash. √â representado por um valor inteiro entre 4 √† 31, tendo como valor padr√£o 10, salientando que quanto maior seu valor mais ciclos ser√£o utilizados e consequentemente mais tempo levar√° para criar o hash! Vamos implementar essas melhorias.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Crypt\\Password\\Bcrypt; $password = \u0026#39;minha primeira senha\u0026#39;; $bcrypt = new Bcrypt(); $salt = \u0026#39;AVsr@341234$rxffssaasdf\u0026amp;\u0026#39;; $bcrypt-\u0026gt;setSalt($salt); $bcrypt-\u0026gt;setCost(14); $securePassword = $bcrypt-\u0026gt;create($password); Como resultado teremos a seguinte string:\n1 $2y$14$QVZzckAzNDEyMzQkcnhmZeMkI8R2iGrStlP9EqX6GgXpxFm2KQ11i Como observado, o hash gerado utilizando salt e cost √© diferente da primeira, sendo que na segunda op√ß√£o utilizamos um cost maior de 14 ciclos ao inv√©s do custo padr√£o 10.\nPara finalizar o ciclo, vamos validar a senha em texto puro com o hash gerado, e para isso vamos utilizar o m√©todo vefify();\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Crypt\\Password\\Bcrypt; $password = \u0026#39;minha primeira senha\u0026#39;; $bcrypt = new Bcrypt(); $salt = \u0026#39;AVsr@341234$rxffssaasdf\u0026amp;\u0026#39;; $bcrypt-\u0026gt;setSalt($salt); $bcrypt-\u0026gt;setCost(14); $securePassword = $bcrypt-\u0026gt;create($password); $verify = $bcrypt-\u0026gt;verify($password, $securePassword); Nesta compara√ß√£o o resultado ser√° true, porem caso os valores n√£o correspondam o mesmo retornar√° false.\nComo observado, o uso do Bcrypt √© simples e agiliza o processo de gerenciamento de hash para as senhas, normalmente gosto de trabalhar com e-mail e senha no formul√°rio de login, pois como o e-mail deve ser √∫nico evita conflitos.\nOs exemplos acima s√£o bem b√°sicos, porem muito √∫teis no dia a dia, podemos expandir o horizonte de uso como por exemplo, utilizar em API, onde o client realiza a request e o server (contendo o bcrypt) iria realizar todo o processo de verifica√ß√£o ou de cria√ß√£o de hash. Com isso podemos ter uma aplica√ß√£o em nodejs que realiza o processo de login em uma API, com isso, independente do sistema, o processo de autentica√ß√£o ser√° centralizado em uma API e consumida por diversos clients.\nDeixe sua imagina√ß√£o correr e abuse do recurso, que como visto e muito poderoso.\nCaso tenham interesse, segue o link para consulta da documenta√ß√£o oficial do Zend-crypt.\nQualquer d√∫vida ou sugest√£o deixe nos coment√°rios, vamos discutir sobre o tema e com isso aprender ainda mais!\nEspero que tenham apreciado, at√© a pr√≥xima üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/senhas-mais-seguras-com-zend-crypt/","summary":"Ol√° pessoal, tudo bem?!\nHoje em dia n√£o consigo listar um sistema se quer que eu tenha trabalhado sem um mecanismo de login, pode ser com e-mail + senha, usu√°rio + senha porem esse √© um recurso que todos os sistema utilizam. E decorrente a isso aparece a grande pergunta, como tratar a senha?\nSim, devemos tratar a senha e n√£o devemos nunca, vou repetir, NUNCA devemos armazenar a senha em texto puro no banco de dados ou em qualquer outro tipo de armazenamento.","title":"Senhas mais seguras com Zend-Crypt"},{"content":"Ol√° pessoal, tudo bem?!\nOcorreu hoje a quinta edi√ß√£o do hhbr, e nesta edi√ß√£o tivemos uma super palestra sobre refatora√ß√£o, conte√∫do apresentado pelo mestre Davi Marcondes Moreira aka @devdrops.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúRefatora√ß√£o‚Äù Palestrante: Davi Marcondes Moreira Twitter: https://twitter.com/devdrops Site: devdrops.me GitHub: https://github.com/devdrops Comunidade: http://phpdojeitocerto.tumblr.com/ Slides: https://docs.google.com/presentation/d/1myN5bMo_RSPeUWT6vW1XM0HHamWq4HnHAReA80gMuJ4/edit#slide=id.g18ddc55d07_2_45 Links mencionados PHPMD: https://phpmd.org/ Blackfire: https://blackfire.io/ CorgiBytes: http://corgibytes.com/ PHPUnit: https://phpunit.de/ SensiolabsInsight: https://insight.sensiolabs.com At√© a pr√≥xima, abra√ßos!\n","permalink":"https://diegobrocanelli.com.br/php/refatoracao-video/","summary":"Ol√° pessoal, tudo bem?!\nOcorreu hoje a quinta edi√ß√£o do hhbr, e nesta edi√ß√£o tivemos uma super palestra sobre refatora√ß√£o, conte√∫do apresentado pelo mestre Davi Marcondes Moreira aka @devdrops.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúRefatora√ß√£o‚Äù Palestrante: Davi Marcondes Moreira Twitter: https://twitter.com/devdrops Site: devdrops.me GitHub: https://github.com/devdrops Comunidade: http://phpdojeitocerto.tumblr.com/ Slides: https://docs.google.com/presentation/d/1myN5bMo_RSPeUWT6vW1XM0HHamWq4HnHAReA80gMuJ4/edit#slide=id.g18ddc55d07_2_45 Links mencionados PHPMD: https://phpmd.org/ Blackfire: https://blackfire.io/ CorgiBytes: http://corgibytes.com/ PHPUnit: https://phpunit.de/ SensiolabsInsight: https://insight.","title":"hhbr : 05 ‚Äì Refatora√ß√£o (v√≠deo)"},{"content":"Ol√° pessoal, tudo bem?!\nConstruir sistemas robustos, seguros e livres bugs (ou pelo menos o menor n√∫mero poss√≠vel üôÇ ) est√° presente em nosso dia a dia, e com isso temos diversas metodologias, ferramentas e recursos para que nossos c√≥digos tenham qualidade e garantia de sua efic√°cia.\nPara o ecossistema PHP n√£o √© diferente, temos dispon√≠vel uma ferramenta fant√°stica para executarmos testes unit√°rios, e hoje vamos aprender um pouco sobre ela, seu nome √© PHPUnit.\nEsse framework fant√°stico foi desenvolvido por Sebastian Bergmann, e vamos seguir os princ√≠pios de construirmos nosso sistema iniciando pelos testes.\nNosso projeto ter√° a seguinte estrutura:\nphpunit_tutorial src Filters Strings.php tests FilterStringsTests.php vendor composer.json phpunit.phar Vamos detalhar um pouco nosso projeto:\nIremos criar uma estrutura b√°sica para tratamento de strings, e ser√° armazenado dento dos diret√≥rios ‚Äúsrc/Filters/Strings.php‚Äù.\nPara nossa camada de testes iremos utilizar a estrutura ‚Äútests/FilterStringsTests.php‚Äù.\nO arquivo composer.json ser√° utilizado para gerarmos o autoload da nossa aplica√ß√£o.\nPor √∫ltimo, porem n√£o menos importante, teremos o ‚Äúphpunit.phar‚Äù, respons√°vel pela execu√ß√£o dos nossos testes.\nComo n√≥s separamos nossa regra de neg√≥cio dos testes, nada impede que nossa aplica√ß√£o continue crescendo e com isso os testes tamb√©m, e isso √© muito importante, pois n√£o queremos dores de cabe√ßa para cada nova feature a ser implementada em nosso sistema üòâ\nDefini√ß√µes de projeto detalhadas, agora podemos partir para a divers√£o, SHOW ME THE CODE!\nAp√≥s a cria√ß√£o do diret√≥rio base do nosso projeto, devemos criar nosso arquivo composer.json com a seguinte estrutura.\n1 2 3 4 5 6 7 { \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;:{ \u0026#34;DiegoBrocanelli\\\\\u0026#34;:\u0026#34;src\\\\\u0026#34; } } } Devemos agora adquirir o phpuni.phar, para isso vamos executar os seguintes comandos no terminal, no diret√≥rio raiz do nosso projeto pelo terminal.\n1 2 3 wget https://phar.phpunit.de/phpunit.phar php phpunit.phar --version Basta aguardar o download, e o arquivo estar√° dispon√≠vel na estrutura do projeto.\nCom isso temos a base do nosso sistema, e agora daremos in√≠cio a sua constru√ß√£o, porem iremos iniciar pelos TESTES! Sim, iremos implementar nossos testes e o que julgamos essencial para garantir o funcionamento do nosso filtro para string.\nDentro do diret√≥rio tests, vamos criar nossa classe de teste ‚ÄúFilterStringsTests.php‚Äù.\nAgora devemos implementar a estrutura b√°sica, ficando como no exemplo abaixo.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php require_once __DIR__.\u0026#39;/../vendor/autoload.php\u0026#39;; use PHPUnit\\Framework\\TestCase; use DiegoBrocanelli\\Filters\\Strings; class FilterStringTests extends TestCase { } Logo no in√≠cio da nossa classe, importamos nosso arquivo de autoload gerado pelo composer.\nEm seguida, importamos nosso componente do PHPUnit para gerarmos nossos testes.\nE por fim,¬†importamos nosso filtro, lembrando que ele ainda n√£o foi criado.\nQuando temos que implementar qualquer recurso em nossos sistemas, e temos o h√°bito de utilizar como base testes unit√°rios, esse ciclo de pensamento nos for√ßa a arquitetar de forma clara e concisa nossos c√≥digos, para que assim sejam test√°veis e que gerem os resultados esperados.\nClaro, que ao iniciarmos nossos estudos e uso desta pratica, surgir√£o diversas d√∫vidas isso √© perfeitamente natural, porem com o tempo, estudo e pr√°tica, esta pratica se tornar√° parte do seu ciclo de desenvolvimento e trar√° uma gama de vantagens fenomenais.\nVamos implementar nosso primeiro m√©todo, chamado setUp.\n1 2 3 4 5 6 7 8 9 10 11 class FilterStringTests extends TestCase { const STRING = \u0026#39; \u0026lt;title\u0026gt;Post PHPUnit\u0026lt;/title\u0026gt; \u0026#39;; public $filterString; public function setUp() { $this-\u0026gt;filterString = new Strings(self::STRING); } // demais c√≥digo da classe Foi definido uma contante, para que assim possamos reutilizar nossa string base para os testes, criamos um atributo publico para armazenar nosso filtro e assim tamb√©m reutilizar a mesma instancia nos testes que iremos implementar a seguir.\nE por √∫ltimo vemos o m√©todo setUP. ele √© um m√©todo do PHPUnit e nos possibilita executar processos no in√≠cio dos teste, bem a grosso modo podemos fazer a analogia ao m√©todo __construct.\nA classe dever√° ficar semelhando ao exemplo abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;?php require_once __DIR__.\u0026#39;/../vendor/autoload.php\u0026#39;; use PHPUnit\\Framework\\TestCase; use DiegoBrocanelli\\Filters\\Strings; class FilterStringTests extends TestCase { const STRING = \u0026#39; \u0026lt;title\u0026gt;Post PHPUnit\u0026lt;/title\u0026gt; \u0026#39;; public $filterString; public function setUp() { $this-\u0026gt;filterString = new Strings(self::STRING); } } Devemos implementar nossos testes, porem o que vamos testar?\nVamos definir o que nosso filtro de strings ir√° executar, e com seu escopo definido vamos implementar seus respectivos testes. Ap√≥s pensarmos nas funcionalidades, chegamos a conclus√£o que o escopo do nosso filtro ser√°:\nContar o n√∫mero de caracteres; Remover tags HTML; Remover espa√ßos em branco no in√≠cio e final da string; Fazer com que todos os caracteres da string fiquem minusculas; Fazer com que todos os caracteres da string fiquem mai√∫sculas. Sendo assim temos 5 funcionalidades, e agora podemos implementar nossos testes.\nPara a primeira funcionalidade, podemos planejar que iremos implementar um m√©todo que retorne sempre uma n√∫mero inteiro, correspondente a quantidade de caracteres da string.\nPor defini√ß√£o todos os m√©todos da classe de teste deve ter o prefixo ‚Äútest‚Äù e a descri√ß√£o do teste em quest√£o, seguindo o padr√£o de nomenclatura de m√©todo do PHP, vamos analisar o exemplo abaixo.\n1 2 3 4 public function testStringLength() { $this-\u0026gt;assertEquals(29, $this-\u0026gt;filterString-\u0026gt;stringLength()); } Como podemos observar, nosso m√©todo se chama ‚ÄútestStringLength‚Äù, um nome simples porem que defini claramente o objetivo do teste.\nE fazemos uso do m√©todo ‚ÄúassertEquals‚Äù do PHPUnit, em resumo este m√©todo analisa o resultado esperado (primeiro par√¢metro) com o valor a ser analisado (segundo par√¢metro) onde em nosso caso, se refere ao m√©todo stringLength() do filtro de strings, sendo que ambos devem corresponder para que o teste tenha acerto, caso contr√°rio apresentar√° erro.\nVeremos os resultados ap√≥s implementar todos os demais testes.\nO pr√≥ximo teste ser√° correspondente ao recurso para remover tags HTML. Veja o c√≥digo abaixo.\n1 2 3 4 public function testStripTags() { $this-\u0026gt;assertEquals(\u0026#39; Post PHPUnit \u0026#39;, $this-\u0026gt;filterString-\u0026gt;stripTags()); } Novamente fazemos uso do m√©todo ‚ÄúassertEquals‚Äù e configuramos nossos valores para serem testados.\nVamos continuar e implementar os demais m√©todos, veja o resultado do c√≥digo abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public function testStringTrim() { $this-\u0026gt;assertEquals(\u0026#39;\u0026lt;title\u0026gt;Post PHPUnit\u0026lt;/title\u0026gt;\u0026#39;, $this-\u0026gt;filterString-\u0026gt;stringTrim()); } public function testStringToLower() { $stringBase = strtolower(self::STRING); $filter = $this-\u0026gt;filterString-\u0026gt;stringToLower(); $this-\u0026gt;assertEquals(true, ( $stringBase === $filter) ); } public function testStringToUpper() { $stringBase = strtoupper(self::STRING); $filter = $this-\u0026gt;filterString-\u0026gt;stringToUpper(); $this-\u0026gt;assertEquals(true, ( $stringBase === $filter) ); } Nossos testes ‚ÄútestStringTrim‚Äù correspondente ao recurso de remo√ß√£o de espa√ßos em branco no inicio e final da string, segue a estrutura dos m√©todos j√° apresentado.\nNos m√©todos ‚ÄútestStringToLower‚Äù e ‚ÄútestStringToUpper‚Äù correspondente respectivamente por filtrar a string para todas as suas letras minusculas ou mai√∫sculas, tem um escopo de implementa√ß√£o um pouco mais elaborada, porem continuando simples sua leitura e compreens√£o.\nAp√≥s finalizarmos a implementa√ß√£o dos testes, vamos executa-los para analisarmos os resultados. Devemos executar o seguinte comando pelo terminal na raiz do nosso projeto.\n1 php phpunit.phar tests/FilterStringTests.php E como resultado temos a imagem abaixo.\nE vol√°, temos 5 testes executados e 5 erros obtidos! Sim, cada ‚ÄúE‚Äù no in√≠cio corresponde a um teste executado e suas respectivas falhas logo abaixo, isso n√£o √© fant√°stico! Parece loucura iniciarmos pelos testes, porem com essa abordagem, n√≥s planejamos cada recurso que iremos implementar, facilitando sua implementa√ß√£o, pois temos uma vis√£o clara e objetiva de cada recurso a ser implementado.\nAgora vamos implementar nossa classe de filtro ‚Äúsrc/Filters/Strings.php‚Äù. Como nosso intuito n√£o √© focar nos filtros e sim nos testes e todo o racioc√≠nio que empregamos para cri√°-los e execut√°-los, basta seguir o modelo abaixo de c√≥digo para implementar nossa classe de filtros para string.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 \u0026lt;?php namespace DiegoBrocanelli\\Filters; class Strings { private $string; public function __construct($string) { $this-\u0026gt;string = $string; } public function stringLength() { return strlen($this-\u0026gt;string); } public function stripTags() { return strip_tags($this-\u0026gt;string); } public function stringTrim() { return trim($this-\u0026gt;string); } public function stringToLower() { return strtolower($this-\u0026gt;string); } public function stringToUpper() { return strtoupper($this-\u0026gt;string); } } Por mais simples que seja nossas implementa√ß√£o acima, ela corresponde ao nosso planejamento, como nossa namespace ‚ÄúDiegoBrocanelli\\Filters‚Äù local onde configuramos nosso testes. E cada m√©todo est√° retornando o formato desejado como por exemplo o m√©todo ‚ÄústringLength‚Äù, que ir√° sempre retornar um n√∫mero inteiro.\nAp√≥s implementarmos nossa classe de filtros, vamos executar novamente nossos teste e assim avaliarmos os resultados.\nComo podemos notar, ap√≥s a execu√ß√£o dos teste temos os seguintes dados:\nForam executados 5 testes e obtivemos 5 sucessos, 100% de sucesso; O tempo de execu√ß√£o foi de 57ms!; Foi consumido 8.00MB de mem√≥ria do nosso computador. Claro que neste post, foi apresentado uma problem√°tica simplista com uma implementa√ß√£o ainda mais simples e direta, para que possa ficar claro os passos executados e os conceitos apresentados, em nenhum momento devemos utilizar nosso filtro em produ√ß√£o, pois demanda mais testes e valida√ß√µes. Porem executamos o ciclo completo desde o estudo do problema, sua tradu√ß√£o em testes, execu√ß√£o e falhas do teste, a implementa√ß√£o dos recursos (filtros), execu√ß√£o de novos tetes e o sucesso de todos eles!\nPodemos tirar de aprendizagem:\nOs testes nos dar√£o maior garantia dos recursos que iremos implementar; Nosso c√≥digo ter√° de forma indireta uma melhora, pois iremos pensar e arquitetar com mais cautela e qualidade nossas features, para que os testes sejam implementados e executados; Futuras implementa√ß√µes ser√£o feitas com menos ‚Äúdores‚Äù de cabe√ßa, pois os testes devem ser executados sempre para avaliaram o fluxo de desenvolvimento. Como observa√ß√£o, tanto quanto o c√≥digo quanto os testes devem ser revalidados de tempos em tempos, e se necess√°rio realizar os devidos refactorings,¬†para manter o ecossistema saud√°vel.\nInfelizmente em apenas um post √© imposs√≠vel demonstrar todo o poder do PHPUnit, pois √© um framework fant√°stico e incrivelmente robusto, recomento fortemente que leiam sua documenta√ß√£o.\nTodos os c√≥digos produzidos neste post, tem o foco de um primeiro contato com testes.\nDeixo como dica alguns materiais que acredito serem bons para continuar os estudos.\nTest-Driven Development Teste e Design no Mundo Real com PHP Livro muito bom e focado em PHP; TDD Desenvolvimento Guiado por Testes; TDD na pr√°tica. Espero que tenham apreciado este post, qualquer duvida deixem nos coment√°rios.\nAt√© a pr√≥xima, forte abra√ßo üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/testes-de-forma-simples-facil-e-robusta-em-sistemas-php-com-phpunit/","summary":"Ol√° pessoal, tudo bem?!\nConstruir sistemas robustos, seguros e livres bugs (ou pelo menos o menor n√∫mero poss√≠vel üôÇ ) est√° presente em nosso dia a dia, e com isso temos diversas metodologias, ferramentas e recursos para que nossos c√≥digos tenham qualidade e garantia de sua efic√°cia.\nPara o ecossistema PHP n√£o √© diferente, temos dispon√≠vel uma ferramenta fant√°stica para executarmos testes unit√°rios, e hoje vamos aprender um pouco sobre ela, seu nome √© PHPUnit.","title":"Testes de forma simples, f√°cil e robusto em sistemas PHP com PHPUnit!"},{"content":"Fala galera, tudo bem?!\nOcorreu o quarto encontro hhbr](https://www.youtube.com/channel/UCh1xOy7SP_KyRn4wTNVvFHw/videos), e nesta edi√ß√£o temos o grande Anderson ‚ÄòDuodraco‚Äô Casimiro nos presenteando com uma super palestra, como tema ‚ÄúPor que PHP?‚Äù.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúPor que PHP?‚Äù Palestrante: Anderson ‚ÄòDuodraco‚Äô Casimiro Twitter: https://twitter.com/duodraco Site: https://duodra.co/ GitHub: https://github.com/duodraco Comunidade: http://phpsp.org.br inks mencionados Documenta√ß√£o oficial do PHP: http://php.net/\nPHP Do Jeito Certo: http://br.phptherightway.com/\nPHP FIG: http://www.php-fig.org/\nPHP Do Jeito Certo (Podcast): http://phpdojeitocerto.tumblr.com/\nA Semana PHP: http://asemanaphp.com.br\nPHP Conference Brasil: http://www.phpconference.com.br/\nZend Framework: https://zendframework.com/\nZend Expressive: https://zendframework.github.io/zend-expressive/\nSymfony: https://symfony.com/\nSilex: http://silex.sensiolabs.org/\nLaravel: https://laravel.com/\nLumen: https://lumen.laravel.com/\nSlim: https://www.slimframework.com/\nCakePHP: https://cakephp.org/\nAt√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/por-que-php-video/","summary":"Fala galera, tudo bem?!\nOcorreu o quarto encontro hhbr](https://www.youtube.com/channel/UCh1xOy7SP_KyRn4wTNVvFHw/videos), e nesta edi√ß√£o temos o grande Anderson ‚ÄòDuodraco‚Äô Casimiro nos presenteando com uma super palestra, como tema ‚ÄúPor que PHP?‚Äù.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúPor que PHP?‚Äù Palestrante: Anderson ‚ÄòDuodraco‚Äô Casimiro Twitter: https://twitter.com/duodraco Site: https://duodra.co/ GitHub: https://github.com/duodraco Comunidade: http://phpsp.org.br inks mencionados Documenta√ß√£o oficial do PHP: http://php.net/\nPHP Do Jeito Certo: http://br.","title":"hhbr : 04 ‚Äì Por que PHP? (V√≠deo)"},{"content":"Ol√° pessoal, tudo bem?!\nPara um programador √© uma tarefa muito corriqueira manipular ou validar URI. E para facilitar essa tarefa iremos aprender a utilizar o componente Zend-URI,¬†ferramenta fant√°stica e simples, que ir√° agilizar nosso dia a dia.\nUma breve descri√ß√£o do que √© URI (Uniform Resource Identifier), sendo uma cadeia de caracteres utilizada para identificar ou denominar um recurso na internet.\nN√£o vamos utilizar um ZF Skeleton, vamos aprender utilizando somente o componente, porem a implementa√ß√£o √© a mesma para quem est√° em um projeto constru√≠do com Zend Framework, e tamb√©m mostra o qu√£o modular √© o framework.\nNosso projeto seguir√° a seguinte estrutura:\npost_uri index.php Ap√≥s a cria√ß√£o do diret√≥rio ‚Äòpost_uri‚Äô e o arquivo index.php devemos importar nosso componente, para isso vamos utilizar o Composer. Acesse a raiz do projeto pelo terminar e execute o seguinte comando:\n1 composer require zendframework/zend-uri O comando acima, parte do pressuposto que o Composer est√° instalado de forma global em seu computador, caso n√£o tenha instalado recomendo que leia a documenta√ß√£o do Composer.\nAp√≥s o processo de instala√ß√£o ser conclu√≠do, nosso projeto ficar√° com a seguinte estrutura:\npost_uri vendor composer.json composer.lock index.php Agora podemos partir para a divers√£o, SHOW ME THE CODE!\nVamos preparar nosso index.php para explorar as funcionalidades do componente.\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Em nosso c√≥digo acima, importamos nosso arquivo de autoload, declaramos que vamos utilizar ‚ÄòUriFactory‚Äô e criamos uma estrutura de try cath, essa estrutura √© necess√°ria para a utiliza√ß√£o do recurso de valida√ß√£o de URI e ser√° descrito mais a frente.\nVamos utilizar como base a seguinte URI de exemplo.\n1 url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; Como a classe UriFactory √© uma classe abstrata ela n√£o pode ser instanciada, dito isso vamos criar nossa vari√°vel base.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); // Retorno /* object(Zend\\Uri\\Http)[3] protected \u0026#39;validHostTypes\u0026#39; =\u0026gt; int 19 protected \u0026#39;user\u0026#39; =\u0026gt; null protected \u0026#39;password\u0026#39; =\u0026gt; null protected \u0026#39;scheme\u0026#39; =\u0026gt; string \u0026#39;http\u0026#39; (length=4) protected \u0026#39;userInfo\u0026#39; =\u0026gt; null protected \u0026#39;host\u0026#39; =\u0026gt; string \u0026#39;www.example.com\u0026#39; (length=15) protected \u0026#39;port\u0026#39; =\u0026gt; int 8080 protected \u0026#39;path\u0026#39; =\u0026gt; string \u0026#39;/mall/products\u0026#39; (length=14) protected \u0026#39;query\u0026#39; =\u0026gt; string \u0026#39;item1=product 01\u0026amp;item2=product 02\u0026#39; (length=33) protected \u0026#39;fragment\u0026#39; =\u0026gt; string \u0026#39;token\u0026#39; (length=5) */ Obtendo o host Para que possamos capturar o host contido em nossa URI de exemplo, vamos utilizar o m√©todo getHost().\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); $host = $uri-\u0026gt;getHost(); // Retorna: \u0026#39;www.example.com\u0026#39; } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Obtendo a porta utilizada 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); $port = $uri-\u0026gt;getPort(); // Retornar: \u0026#34;8080\u0026#34; } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Obtendo o path 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); $path = $uri-\u0026gt;getPath(); // Retorno: \u0026#39;/mall/products\u0026#39; } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Obtendo a query string 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); $query = $uri-\u0026gt;getQuery(); // Retorno: \u0026#39;item1=product 01\u0026amp;item2=product 02\u0026#39; } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Obtendo a query string formatada em array 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); $query = $uri-\u0026gt;getQueryAsArray(); // Retorno: /* [ \u0026#39;item1\u0026#39; =\u0026gt; string \u0026#39;product 01\u0026#39; \u0026#39;item2\u0026#39; =\u0026gt; string \u0026#39;product 02\u0026#39; ] */ } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Obtendo o fragment 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); $query = $uri-\u0026gt;getFragment(); // Retorno: \u0026#39;token\u0026#39; } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Aqui cabe nosso adendo, caso a URI informada o componente ir√° retornar uma exception ‚ÄòZend\\Uri\\Exception\\InvalidArgumentException‚Äô, por isso nossa estrutura est√° dentro de um try catch.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; use Zend\\Uri\\UriFactory; try { $url = \u0026#39;http://www.example.com:8080/mall/products?item1=product 01\u0026amp;item2=product 02#token\u0026#39;; $uri = UriFactory::factory($url); $query = $uri-\u0026gt;isValid(); // Retorno: true } catch (\\Exception $e) { echo ucfirst($e-\u0026gt;getMessage()); } Como podemos observar, √© extremamente simples a utiliza√ß√£o do componente, mesmo ele sento utilizado isoladamente n√£o estando com o skeleton do ZF instalado.\nEspero que esse post possa ajuda-lo em seu dia a dia, fazendo o processo de manipula√ß√£o de URI uma tarefa mais amena e tranquila.\nEspero que tenha apreciado, at√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/php/manipulando-e-validando-uri-com-zend-uri/","summary":"Ol√° pessoal, tudo bem?!\nPara um programador √© uma tarefa muito corriqueira manipular ou validar URI. E para facilitar essa tarefa iremos aprender a utilizar o componente Zend-URI,¬†ferramenta fant√°stica e simples, que ir√° agilizar nosso dia a dia.\nUma breve descri√ß√£o do que √© URI (Uniform Resource Identifier), sendo uma cadeia de caracteres utilizada para identificar ou denominar um recurso na internet.\nN√£o vamos utilizar um ZF Skeleton, vamos aprender utilizando somente o componente, porem a implementa√ß√£o √© a mesma para quem est√° em um projeto constru√≠do com Zend Framework, e tamb√©m mostra o qu√£o modular √© o framework.","title":"Manipulando e validando URI com Zend-URI"},{"content":"Ol√° pessoal, tudo bem?!\nHoje tivemos a terceira edi√ß√£o do hhbr, o tema da palestra deste m√™s foi ‚ÄúResolvendo os seus problemas web com Flask‚Äù.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúResolvendo os seus problemas web com Flask‚Äù\nPalestrante: Iury Alves\nTwitter: https://twitter.com/IuryAlvesdeSouz site: https://medium.com/@iurysouza/ GitHub: https://github.com/IuryAlves\nLinks comentados durante o v√≠deo Curso de Flask: \u0026ldquo;https://www.youtube.com/shared?ci=3e0oiNYKMDYci=3e0\u0026amp;#8230; Quokka Project: http://quokkaproject.org/ Espero que gostem, at√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/video/resolvendo-os-seus-problemas-web-com-flask-video/","summary":"Ol√° pessoal, tudo bem?!\nHoje tivemos a terceira edi√ß√£o do hhbr, o tema da palestra deste m√™s foi ‚ÄúResolvendo os seus problemas web com Flask‚Äù.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Tema: ‚ÄúResolvendo os seus problemas web com Flask‚Äù\nPalestrante: Iury Alves\nTwitter: https://twitter.com/IuryAlvesdeSouz site: https://medium.com/@iurysouza/ GitHub: https://github.com/IuryAlves\nLinks comentados durante o v√≠deo Curso de Flask: \u0026ldquo;https://www.youtube.com/shared?ci=3e0oiNYKMDYci=3e0\u0026amp;#8230; Quokka Project: http://quokkaproject.org/ Espero que gostem, at√© a pr√≥xima!","title":"hhbr : 03 ‚Äì Resolvendo os seus problemas web com Flask  (V√≠deo)"},{"content":"Fala galera, tudo tranquilo?!\nRecentemente um amigo me questionou como ele poderia criar breadcrumbs no Zend Framework, e com base nessa conversa vou demonstra o qu√£o simples √© este processo.\nPara quem nunca se deparou com este termo, breadcrumb √© um padr√£o implementado pela Yahoo para indicar ao usu√°rio onde ele se encontra no site, como podemos observar na imagem abaixo.\nAp√≥s essa breve e r√°pida introdu√ß√£o, SHOW ME THE CODE!!!\nVamos utilizar o skeleton default do Zend Framework, basta acessar pelo terminal onde deseja criar o projeto e executar o seguinte comando:\n1 php composer.phar create-project --stability=\u0026#34;dev\u0026#34; zendframework/skeleton-application Caso o Composer esteja instalado de forma global em sua m√°quina.\n1 composer create-project --stability=\u0026#34;dev\u0026#34; zendframework/skeleton-application Se voc√™ estiver utilizando o ZF3 como eu, devemos instalar o componente navegation e para isso basta executar o seguinte comando:\n1 composer require zendframework/zend-navigation Ap√≥s o processo de instala√ß√£o finalizar, vamos acessar o arquivo global.php (config/autoload/global.php).¬†Vamos implementar nossa estrutura, nosso array ser√° associativo.\n1 2 3 4 5 6 return [ \u0026#39;navigation\u0026#39; =\u0026gt; [ \u0026#39;default\u0026#39; =\u0026gt; [ ], ], ]; Todo o conte√∫do ficar√° dentro deste array, abordaremos duas maneiras de implementar o conte√∫do do nosso breadcrumb, o primeiro ser√° vinculado a uma rota configurada no sistema e o outro de forma livre. Vamos criar nosso primeiro link apontando para a rota ‚ÄòHome‚Äô .\n1 2 3 4 5 6 7 8 9 10 return [ \u0026#39;navigation\u0026#39; =\u0026gt; [ \u0026#39;default\u0026#39; =\u0026gt; [ [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;Home\u0026#39;, \u0026#39;route\u0026#39; =\u0026gt; \u0026#39;home\u0026#39;, ], ], ], ]; Devemos agora registrar nosso servi√ßo, para isso vamos criar um array para nosso service manager e incluir nosso navigation.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 return [ \u0026#39;navigation\u0026#39; =\u0026gt; [ \u0026#39;default\u0026#39; =\u0026gt; [ [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;Home\u0026#39;, \u0026#39;route\u0026#39; =\u0026gt; \u0026#39;home\u0026#39;, ], ], ], \u0026#39;service_manager\u0026#39; =\u0026gt; [ \u0026#39;abstract_factories\u0026#39; =\u0026gt; [ Zend\\Navigation\\Service\\NavigationAbstractServiceFactory::class, ], ], ]; Podemos agora implementar nosso componente na view, para isso vamos acessar o arquivo layout.phtml (Application/view/layout/layout.phtml) e incluir o seguinte c√≥digo logo acima do componte¬†‚Äò‚Äô:\n1 2 3 4 5 \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-sm-12\u0026#34;\u0026gt; \u0026lt;?= $this-\u0026gt;navigation(\u0026#39;Zend\\Navigation\\Default\u0026#39;)-\u0026gt;menu()-\u0026gt;setUlClass(\u0026#39;breadcrumb\u0026#39;) ?\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; Como podemos notar no c√≥digo acima, foi utilizado o viewhelper navigation e informamos qual elemento desejamos (default), e para termos uma estiliza√ß√£o conforme o breadcrumbs do framework Bootstrap utilizamos o m√©todo setUlClass para definir a classe CSS desejada.\nPara acessarmos o projeto e visualizarmos as altera√ß√µes, no diret√≥rio raiz do projeto execute o seguinte comando no terminal para fazermos uso do servidor embutido do PHP.\n1 php -S localhost:8080 -t public/ public/index.php Em seu navegador favorito, acesse a seguinte URL.\n1 http://localhost:8080/ E como resultado temos nosso primeiro Breadcrumb!!!\nAgora que dispomos da estrutura definida, vamos simular um site map com 5 rela√ß√µes de links. Acesse o arquivo global.php e vamos incluir nossos links.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 return [ \u0026#39;navigation\u0026#39; =\u0026gt; [ \u0026#39;default\u0026#39; =\u0026gt; [ [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;Home\u0026#39;, \u0026#39;route\u0026#39; =\u0026gt; \u0026#39;home\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 01\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/01\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 02\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/02\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 03\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/03\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 04\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/04\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 05\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/05\u0026#39;, ], ], ], \u0026#39;service_manager\u0026#39; =\u0026gt; [ \u0026#39;abstract_factories\u0026#39; =\u0026gt; [ Zend\\Navigation\\Service\\NavigationAbstractServiceFactory::class, ], ], ]; E como resultado obtemos o seguinte componente:\nO ponto que destaco nesta implementa√ß√£o, √© a declara√ß√£o da URI ao inv√©s de vincular ao nome de uma rota previamente configurada no sistema. Obviamente que se a URI declarada n√£o existir em seu sistema o retorno ser√° um belo 404.\nComo podemos notar a implementa√ß√£o √© muito simples, claro que o componente √© muito robusto e disp√µem de v√°rios outros detalhes, por isso incentivo que voc√™ leia a documenta√ß√£o pois √© rica e detalhada.\nVou dar um b√¥nus no post e demonstrar como manipular a visibilidade dos links. Vamos criar o link ‚ÄòN√£o Ser√° Exibido‚Äò entre os links ‚ÄòP√°gina 04‚Äô e ‚ÄòP√°gina 05‚Äô.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 return [ \u0026#39;navigation\u0026#39; =\u0026gt; [ \u0026#39;default\u0026#39; =\u0026gt; [ [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;Home\u0026#39;, \u0026#39;route\u0026#39; =\u0026gt; \u0026#39;home\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 01\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/01\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 02\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/02\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 03\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/03\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 04\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/04\u0026#39;, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;N√£o Ser√° Exibido\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/04\u0026#39;, \u0026#39;visible\u0026#39; =\u0026gt; false, ], [ \u0026#39;label\u0026#39; =\u0026gt; \u0026#39;P√°gina 05\u0026#39;, \u0026#39;uri\u0026#39; =\u0026gt; \u0026#39;/uri/pagina/05\u0026#39;, ], ], ], \u0026#39;service_manager\u0026#39; =\u0026gt; [ \u0026#39;abstract_factories\u0026#39; =\u0026gt; [ Zend\\Navigation\\Service\\NavigationAbstractServiceFactory::class, ], ], ]; √â ridiculamente simples a implementa√ß√£o como podemos observar no c√≥digo acima, apenas declaramos ‚Äòvisible‚Äô =\u0026gt; false e pronto, atualize o navegador e confira o resultado.\nO componente Navigation n√£o se restringe somente na cria√ß√£o de bradcrumbs, podemos construir navbar din√¢micos, porem para n√£o delongar este poste vou encerrar por aqui.\nEspero que tenha apreciado e que seja √∫til em seu dia a dia no desenvolvimento dos projetos, qualquer d√∫vida deixe nos coment√°rios.\nPs: Ao amigo para quem constru√≠ esse post para ajud√°-lo em um projeto, voc√™ est√° me devendo uma cerveja e espero que o post lhe ajude! üôÇ\nAt√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/php/gerando-breadcrumbs-no-zend-framework/","summary":"Fala galera, tudo tranquilo?!\nRecentemente um amigo me questionou como ele poderia criar breadcrumbs no Zend Framework, e com base nessa conversa vou demonstra o qu√£o simples √© este processo.\nPara quem nunca se deparou com este termo, breadcrumb √© um padr√£o implementado pela Yahoo para indicar ao usu√°rio onde ele se encontra no site, como podemos observar na imagem abaixo.\nAp√≥s essa breve e r√°pida introdu√ß√£o, SHOW ME THE CODE!","title":"Gerando Breadcrumbs no Zend Framework"},{"content":"Fala galera tudo bem?!\nOntem dia 05/10/2016 ocorreu a segunda palestra do canal hhbr, e foi explorado o mundo do Flexbox.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Palestrante: Danilo Vaz; Twitter: ttps://twitter.com/_danilovaz Site: ttp://danilovaz.github.io GitHub: https://github.com/danilovaz Slides: https://speakerdeck.com/danilovaz/flexbox Links mencionados na palestra: A Complete Guide to Flexbox: https://css-tricks.com/snippets/css/a-guide-to-flexbox/ http://flexboxfroggy.com/ http://caniuse.com/#feat=flexboxhttps://github.com/jonathantneal/flexibility ","permalink":"https://diegobrocanelli.com.br/video/flexbox-interfaces-modernas-video/","summary":"Fala galera tudo bem?!\nOntem dia 05/10/2016 ocorreu a segunda palestra do canal hhbr, e foi explorado o mundo do Flexbox.\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Palestrante: Danilo Vaz; Twitter: ttps://twitter.com/_danilovaz Site: ttp://danilovaz.github.io GitHub: https://github.com/danilovaz Slides: https://speakerdeck.com/danilovaz/flexbox Links mencionados na palestra: A Complete Guide to Flexbox: https://css-tricks.com/snippets/css/a-guide-to-flexbox/ http://flexboxfroggy.com/ http://caniuse.com/#feat=flexboxhttps://github.com/jonathantneal/flexibility ","title":"hhbr : 02 Flexbox ‚Äì Interfaces Modernas (V√≠deo)"},{"content":"Ol√° pessoal tudo certo?!\nQuem nunca se deparou com um projeto no qual teria que trabalhar com renderiza√ß√£o HTML? Praticamente todos em algum momento certo? Pois √© inevit√°vel a constru√ß√£o de um sistema web PHP sem a intera√ß√£o com o usu√°rio, e com isso surge o grande problema: Como vamos trabalhar as p√°ginas HTML e como podemos utilizar o conceito de template para que nosso sistema fique robusto e com um super visual.\nO PHP disp√µe de grandes ferramentas para solucionar esse problema, e auxiliar na constru√ß√£o de templates e views para nossos sistemas, e hoje veremos o Twig onde de acordo com a home do site diz:\nThe flexible, fast, and secure template engine for PHP‚Äù (Tradu√ß√£o: flex√≠vel, r√°pido e seguro motor de template para PHP)\nTwig √© uma ferramenta mantida pela Sensiolabs, empresa por de traz de nada menos que o Symfony. Um¬†dos frameworks mais fant√°sticos para PHP.\nPara que possamos utilizar o componente, primeiros vamos definir nosso projeto, onde ele ter√° a seguinte estrutura:\ntutorial_twig view layout.html index.html bootstrap.php index.php Ap√≥s temos criado nossa estrutura b√°sica para darmos in√≠cio ao projeto, devemos acessar pelo terminal a raiz do nosso projeto. Caso voc√™ n√£o tenha familiaridade em utilizar o terminal, incentivo que aprenda a utilizar, pois √© uma das ferramentas que mais utilizamos em nosso dia a dia, e que facilita e muito nosso trabalho. Ao acessarmos o diret√≥rio raiz do projeto devemos instalar o Twig, e para isso iremos utilizar o Composer e caso voc√™ n√£o fa√ßa a menor ideia do que seja, por favor, pare e estude esta ferramenta, pois ela √© a 8¬™ maravilha do mundo PHP, com o Composer podemos gerenciar as depend√™ncias do nosso projeto com uma facilidade descomunal!\nDevemos executar o seguinte comando:\n1 composer require twig/twig:~1.0 Todo o processo de instala√ß√£o dos pacotes ser√£o realizados de forma autom√°tica em nosso projeto.\nAp√≥s a finaliza√ß√£o da instala√ß√£o nossa estrutura de projeto ficar√° assim:\ntutorial_twig vendor view layout.html index.html composer.json composer.lock bootstrap.php index.php Agora vamos acessar nosso arquivo bootstrap.php, ele ser√° utilizado para podermos concentrar as estrutura b√°sicas que ser√° compartilhada com nossas p√°ginas.\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php // carregamos o autoloader require_once __DIR__.\u0026#39;/vendor/autoload.php\u0026#39;; // Criamos nossa configura√ß√£o, apontando o diret√≥rio onde ficar√£o nossos arquivos html $loader = new Twig_Loader_Filesystem(__DIR__.\u0026#39;/view\u0026#39;); // Criamos nosso objeto e passamos nossas fonfigura√ß√µes. $twig = new Twig_Environment($loader); Com nossa implementa√ß√£o b√°sicas do Twig, agora podemos construir nossa view, vamos acessar nosso arquivo index.php.\n1 2 3 4 5 6 \u0026lt;?php // Realizamos a importa√ß√£o do arquivo de configura√ß√£o. require_once __DIR__.\u0026#39;/bootstrap.php\u0026#39;; // Chamamos nosso objeto de view. echo $twig-\u0026gt;render(\u0026#39;index.html\u0026#39;, array( \u0026#39;content\u0026#39; =\u0026gt; \u0026#39;Hello World!\u0026#39; ) ); Vir√£o como √© extremamente f√°cil, ap√≥s criarmos nossa configura√ß√£o b√°sica podemos acessar nosso objeto e chamar o m√©todo render, respons√°vel por realizar todo o processo de renderiza√ß√£o, e tivemos apenas o trabalho de informa dois valores, sendo eles:\nindex.html\nInformamos qual arquivo HTML desejamos utilizar. Array\nCriamos um array chave/valor, onde a chave usaremos em nosso arquivo HTML para indicar qual conte√∫do estamos querendo utilizar e onde em nosso arquivo index.html e o valor do array √© a informa√ß√£o que ser√° inserida no HTML.l\u0026gt; Bom, tendo nossos arquivos php implementados daremos in√≠cio agora a constru√ß√£o do nosso layout, abra o arquivo layout.html.\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;pt-BR\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Tutorial de Twig\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; {% block content %} {% endblock %} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Basicamente sua estrutura √© HTML puro, sem muitos segredos e o que temos de novo e fora do habitual s√£o as duas linhas de c√≥digo ‚Äú{% block content %}‚Äù e ‚Äú{% endblock %}‚Äù. O Twig disp√µe de um leque de ferramentas para manipular o conte√∫do HTML fant√°sticos, e com essas duas instru√ß√µes definimos um bloco, e tudo que for inserido dentro desse bloco nas outras p√°ginas como, por exemplo, na index ir√° ser renderizado dentro deste bloco no layout, isso n√£o √© fant√°stico pois com um √∫nico arquivo podemos controlar todo nosso layout da nossa aplica√ß√£o.\nPodemos agora abrir nosso arquivo index.html e implementar o seguinte c√≥digo:\n1 2 3 4 5 6 {% extends \u0026#34;layout.html\u0026#34; %} // importamos o template desejado // Informamos que nosso conte√∫do ser√° inserido no bloco content. {% block content %} {{ content }} // Exibimos o conte√∫do inserido no array em nossa view {% endblock %} Como podemos visualizar, n√£o utilizamos uma linha de HTML se quer, apenas instru√ß√µes Twig. Pois definimos o template, o bloco de conte√∫do e o conte√∫do em si.\nAgora podemos executar nosso teste, basta executar o comando abaixo e em um navegador inserir a URL localhost:8080\n1 php -S localhost:8080 index.php E como resultado temos nosso Hello World üôÇ Viram como √© simples, com poucos c√≥digos temos uma camada para tratar nossa view!\nBom voc√™s podem estar pensando ‚Äúmas isso √© muito b√°sico‚Äù, bem vamos imaginar que agora queremos uma view de estoque para renderizar uma lista de produtos no grid.\nVamos criar nosso arquivo products.php\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \u0026lt;?php // importamos nosso arquivo de configura√ß√£o require_once __DIR__.\u0026#39;/bootstrap.php\u0026#39;; // criamos uma lista de produtos. $products = array( array( \u0026#39;code\u0026#39; =\u0026gt; 1, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;Notebook\u0026#39;, \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;Core i7 16GB ran\u0026#39;, \u0026#39;value\u0026#39; =\u0026gt; 3200.00, \u0026#39;date_register\u0026#39; =\u0026gt; \u0026#39;2016-10-03\u0026#39;, ), array( \u0026#39;code\u0026#39; =\u0026gt; 2, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;Mouse\u0026#39;, \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;Razer\u0026#39;, \u0026#39;value\u0026#39; =\u0026gt; 829.00, \u0026#39;date_register\u0026#39; =\u0026gt; \u0026#39;2016-10-03\u0026#39;, ), array( \u0026#39;code\u0026#39; =\u0026gt; 2, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;Teclado Gamer\u0026#39;, \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;Razer\u0026#39;, \u0026#39;value\u0026#39; =\u0026gt; 1250.00, \u0026#39;date_register\u0026#39; =\u0026gt; \u0026#39;2016-10-03\u0026#39;, ), ); // Informamos que iremos utilizar a view products.html e passamos para a view nossa lista de produtos echo $twig-\u0026gt;render(\u0026#39;products.html\u0026#39;, array( \u0026#39;products\u0026#39; =\u0026gt; $products ) ); Agora devemos criar nosso arquivo products.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 {% extends \u0026#34;layout.html\u0026#34; %} // importamos nosso layout // definimos que nosso conte√∫do ser√° inserido no bloco content {% block content %} // agora criamos uma estrutura b√°sica de tabela \u0026lt;table border=\u0026#34;1\u0026#34; style=\u0026#34;width: 80%;\u0026#34;\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;C√≥digo\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Produto\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Descri√ß√£o\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Valor\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Data Cadastro\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; // como podemos ver utilizamos a sintaxe Twig para determinar que iremos utilizar um la√ßo de repeti√ß√£o e passamos como par√¢metro nossa lista de produtos {% for product in products %} \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ product.code }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ product.name }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ product.description }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ product.value }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ product.date_register|date(\u0026#34;m/d/Y\u0026#34;) }}\u0026lt;/td\u0026gt; // como diferencial utilizamos o | e o filtro date() passando o pattern que desejamos que seja tratado nossa data \u0026lt;/tr\u0026gt; {% endfor %} // fechamos o la√ßo \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; {% endblock %} // encerramos o bloco content Ap√≥s executar o projeto, teremos o seguinte resultado.\n/wp-content/uploads/2016/10/grid_produtos.pngExtremamente simples, com poucas linhas de c√≥digo podemos montar nossa lista de produtos. Da mesma maneira que passamos um array, podemos fazer uma consulta no banco de dados e exibir com paginador os registros em nosso grid, logicamente o exemplo acima √© simples apenas para demonstrar o uso do Twig.\nO Twig n√£o disp√µe apenas de filtros, mas tamb√©m com tags, functions, operadores e testes, recomendo fortemente que leia a documenta√ß√£o do Twig, pois ela √© rica em exemplos deixando muito claro sua forma de uso.\nBom pessoal, espero que tenham gostado do post, o PHP disp√µe de outras engines templates como por exemplo dwoo, Plates, smarty e Blade. Recomendo que caso voc√™ desconhe√ßa esses nomes de uma olhada, eu particularmente prefiro o Twig, porem √© sempre excelente conhecermos outras ferramentas para podermos utilizar a melhor para cada problema encontrado.\nUm grande abra√ßo e at√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/twig-a-super-engine-template-para-php/","summary":"Ol√° pessoal tudo certo?!\nQuem nunca se deparou com um projeto no qual teria que trabalhar com renderiza√ß√£o HTML? Praticamente todos em algum momento certo? Pois √© inevit√°vel a constru√ß√£o de um sistema web PHP sem a intera√ß√£o com o usu√°rio, e com isso surge o grande problema: Como vamos trabalhar as p√°ginas HTML e como podemos utilizar o conceito de template para que nosso sistema fique robusto e com um super visual.","title":"Twig ‚Äì A Super engine template para PHP"},{"content":"Ol√° pessoal tudo bem?!\nAp√≥s um tempo sem novos epis√≥dios lan√ßamos mais um epis√≥dio do PHP Do Jeito Certo, um podcast que desde 2013 junto com meus amigos Davi, Jack e Marcelo tocamos e gostamos muito de fazer.\nNeste epis√≥dio, falamos o que se decorreu desde o √∫ltimo epis√≥dio gravado, e o que estamos envolvidos atualmente. Espero que apreciem, e acompanhem pois lan√ßaremos mais epis√≥dios conforme o tempo nos permitir.\nAcesse o v√≠deo e espero que aprecie o conte√∫do!\nCaso deseje entrar em contato, com dicas, sugest√µes ou cr√≠ticas segue abaixo os contatos do podcast.\nTwitter: @phpdojeitocerto\nSite : http://phpdojeitocerto.tumblr.com/ E-mail: phpdojeitocerto@gmail.com\nAt√© a pr√≥xima pessoal üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/php-do-jeito-certo-episodio-vi-o-retorno-do-podcast/","summary":"Ol√° pessoal tudo bem?!\nAp√≥s um tempo sem novos epis√≥dios lan√ßamos mais um epis√≥dio do PHP Do Jeito Certo, um podcast que desde 2013 junto com meus amigos Davi, Jack e Marcelo tocamos e gostamos muito de fazer.\nNeste epis√≥dio, falamos o que se decorreu desde o √∫ltimo epis√≥dio gravado, e o que estamos envolvidos atualmente. Espero que apreciem, e acompanhem pois lan√ßaremos mais epis√≥dios conforme o tempo nos permitir.","title":"PHP Do Jeito Certo: Epis√≥dio VI ‚Äì O Retorno do PODCAST"},{"content":"S√°bado dia 10/09/2016 foi um dia muito top, ocorreu o Front In Vale 2016. Um evento fant√°stico com uma galera muito bacana e que fazem a internet dia a dia com projetos pra l√° de excelentes, e tamb√©m uma oportunidade de encontrar amigos.\nO evento j√° come√ßa com dois p√©s no peito com uma super palestra da Alda Rocha com o tema ‚ÄúEmpoderei, e agora?‚Äù, v√°rios pontos bem interessantes e que nos faz refletir sobre nossas carreiras e nossas atitudes do dia a dia, e como motivar novas pessoas a engessarem no mercado de TI..\nLogo em seguida j√° outra palestra fant√°stica do Eduardo Matos com o tema ‚ÄúJurassic JavaScript Park: rodando offline at√© na Ilha Nublar‚Äù, abordando v√°rios m√©todos de como armazenar dados do lado do cliente e com isso melhorar a experi√™ncia do usu√°rio entregando aplica√ß√µes que agregam valor.\nE para fechar a primeira etapa antes do almo√ßo, tivemos 4 lightning talks bem bacanas:\nNey Sim√µes ‚Äì Adicione PostCSS na sua stack Danielle Soldera ‚Äì Como melhorar seu Front-end Unit Test Marco Bruno ‚Äì Organize as UX Tool Boxes Cristina Luz ‚Äì Como as APIs podem lhe ajudar a criar um MLP\nCom a pausa do almo√ßo a oportunidade de conhecer grandes pessoas e compartilhar ideias e conhecimento.\nLogo ap√≥s o almo√ßo novamente o retorno com uma palestra fant√°stica da mestre em UX Talita Pagani com o tema ‚Äú10 Dicas de Acessibilidade Web para voc√™ nunca mais esquecer‚Äù, e v√°rios pontos muito bacanas que passam batidos no processo de desenvolvimento do projeto, onde a acessibilidade n√£o √© s√≥ para deficientes visuais, mas tamb√©m para portadores de alguma dificuldade motora ou com dificuldades tempor√°rias como por exemplo um bra√ßo engessado.\nA pr√≥xima palestra me fez refletir bastante, e foi realizada por Zeh Fernandes com o tema ‚ÄúA web est√° morrendo e voc√™ √© o culpado‚Äù onde me fez refletir (at√© agora) bastante sobre liberdade na web, armazenamento de dados e como as grandes corpora√ß√µes est√£o tratando seus usu√°rios e sua massa de dados.\nNa pausa para o caf√©, mais uma oportunidade fant√°stica de network, e trocar figurinha.\nUm ponto bem interessante ocorreu durante a palestra do Zeh Fernandes, eu estava focado quando uma pessoa ao meu lado esquerdo abre o notebook e por reflexo eu dou uma espiada, e do nada leio o nome do dono do notebook na tela de login¬†‚ÄúDr. Mauro Pichiliani‚Äù, na hora j√° pensei ‚ÄúN√£o pode ser‚Äù e¬†twittei.\nAcompanho seus trabalhos e seu projeto DatabaseCast a anos e agora ele est√° ao meu lado, e logo em seguida que escrevi ele abre o Twitter e viu meu texto e pudemos bater um papo super bacana, foi como voltar aos 16 anos üôÇ\nOutro fato bem legal √© que quem tirou a foto foi nigu√©m menos que Eduardo Matos üôÇ\nLogo ap√≥s tivemos a segunda leva de Lightning Talks com os temas:\nCynthia Zanoni ‚Äì Desenvolvendo APIs com AngularJS no Azure\nAryel Tupinamb√° ‚Äì A evolu√ß√£o do asset pipeline: Webpack Module Bundler\nFernanda Bernardo ‚Äì Jogos, indo al√©m do simples css!\nWilliam Grasel ‚Äì Programa√ß√£o Reativa com Angular 2\nA pr√≥xima palestra foi da Andr√©a Zambrana com o tema ‚ÄúViajando no front‚Äù, uma palestra muito bacana sobre comunidade e como podemos trilhar um caminho feliz em nossas carreiras e como a comunidade pode contribuir muito para isso.\nE para fechar o dia, tivemos a palestra onde dei mais risadas com um projeto que ao longo da apresenta√ß√£o eu ficava cada vez mais impressionado e de boca aberta, o palestrante Afonso Pacifer com o tema ‚ÄúAs entrelinhas do CSS‚Äù foi fant√°stico e apresentou seu projeto BananaCSS e caracoles que projeto fant√°stico, que iniciativa bacana e inspiradora, realmente foi para fechar com chave de ouro o dia e nos deixar focado em nossos objetivos e¬†metas.\nPode parecer loucura para as pessoas que n√£o trabalham com desenvolvimento ou no mercado de TI a ideia de ficar um s√°bado inteiro trancado em uma sal√£o ouvindo palestras, mas para mim foi muito mais que assistir palestras, √© uma oportunidade de conhecer pessoas novas, fazer amigos, conhecer hist√≥rias inspiradoras e de trocar ideias com pessoas que normalmente n√£o temos acesso em nosso dia a dia. E valeu cada minuto do dia, pois a cada evento que participo, eu adquiro mais conhecimento mas acima disso me sinto um degrau acima como pessoa e me sinto muito feliz pelas experi√™ncias que vivencio.\nPode parecer piegas para muitos, o fato de ficar mencionando pessoas, porem ao longo de nossas carreiras temos pessoas que seguimos e admiramos seus trabalhos e suas contribui√ß√µes para a comunidade, s√£o essas pessoas que dedicam seu tempo para trazer novas ideias, que compartilham conhecimento e que contribuem para melhorar a comunidade como um todo. Ningu√©m me pediu para ser mencionado, ou que eu falasse bem de alguma coisa, simplesmente s√£o pessoas fant√°sticas fazendo coisas fant√°sticas e isso √© muito bacana e tem que ser valorizado.\nCaso voc√™ que esteja lendo est√° entrando para o mercado de TI, ou que pretende ou deseje ou at√© mesmo voc√™ que j√° atua a anos porem que nunca participou de eventos, ou tem a impress√£o que s√£o chatos e s√£o perda de tempo, eu lhes garanto que vale muito a pena ir a um evento, que vale muito a pena se engajar na comunidade e participar desta galera que s√£o simplesmente fant√°sticas, participe, palestre, contribua e com isso voc√™ ver√° o qu√£o gratificante isto √©.\nDeixo aqui um super agradecimento a galera do Front In Vale, pelo super evento que eles trouxeram e que continuem nesta pegada pois est√£o fazendo a diferen√ßa.\nEspero que tenham apreciado, e este foi o meu s√°babo um dia bem bacana com pessoas e conhecimentos fant√°sticos‚Ä¶ at√© a pr√≥xima pessoal!\n","permalink":"https://diegobrocanelli.com.br/eventos/um-sabado-fantastico-evento-front-in-vale-2016/","summary":"S√°bado dia 10/09/2016 foi um dia muito top, ocorreu o Front In Vale 2016. Um evento fant√°stico com uma galera muito bacana e que fazem a internet dia a dia com projetos pra l√° de excelentes, e tamb√©m uma oportunidade de encontrar amigos.\nO evento j√° come√ßa com dois p√©s no peito com uma super palestra da Alda Rocha com o tema ‚ÄúEmpoderei, e agora?‚Äù, v√°rios pontos bem interessantes e que nos faz refletir sobre nossas carreiras e nossas atitudes do dia a dia, e como motivar novas pessoas a engessarem no mercado de TI.","title":"Um s√°bado fant√°stico, evento Front In Vale 2016!!!"},{"content":"Ol√° pessoal, tudo bem?!\nNeste final de semana estive criando um pet project para praticar TDD, e foi direcionado a manipula√ß√£o de diret√≥rios.\nE com isso resolvi criar este post para mostrar um recurso muito bom do PHP, sendo a classe nativa RecursiveDirectoryIterator, onde disp√µem de um leque de ferramentas bacanas que podem facilitar sua vida.\nPara realizarmos este post vamos criar um diret√≥rio ‚Äòpost_manipulando_diretorios_com_php‚Äô e dentro dele vamos criar o arquivo index.php (onde iremos implementar nossos c√≥digos) e mais 04 arquivos teste_01.txt, teste_02.txt, teste_03.txt e teste_04.txt. Ap√≥s a cria√ß√£o da nossa estrutura b√°sica vamos explorar o recurso.\nShow me the code!!!\nPara iniciar devemos instanciar nosso objeto.\n1 2 3 $path = __DIR__ . \u0026#39;/\u0026#39;; $directory = new RecursiveDirectoryIterator( $path ); Como vimos √© necess√°rio passar o path onde iremos manipular. E temos como retorno um objeto do tipo RecursiveDirectoryIterator.\nAp√≥s instanciarmos nosso objeto, podemos percorr√™-lo em um la√ßo de repeti√ß√£o para termos acesso aos arquivos e diret√≥rios.\n1 2 3 foreach ($directory as $file) { var_dump($file); } Como retorno teremos:\n1 2 3 4 5 object(RecursiveDirectoryIterator)[1] private \u0026#39;pathName\u0026#39; (SplFileInfo) =\u0026gt; string \u0026#39;{FULL_PATH_PC}/teste_02.txt\u0026#39; (length=27) private \u0026#39;fileName\u0026#39; (SplFileInfo) =\u0026gt; string \u0026#39;teste_02.txt\u0026#39; (length=12) private \u0026#39;glob\u0026#39; (DirectoryIterator) =\u0026gt; boolean false private \u0026#39;subPathName\u0026#39; =\u0026gt; string \u0026#39;\u0026#39; (length=0) Dentro do la√ßo temos acesso a uma grande quantidade de m√©todos que podemos fazer uso para coletar diversas informa√ß√µes, vamos ver algumas dessas op√ß√µes:\nGet Base Name 1 2 3 foreach ($directory as $file) { var_dump($file-\u0026gt;getBaseName()); } Retorno 1 2 3 4 5 6 7 \u0026#39;teste_02.txt\u0026#39; (length=12) \u0026#39;index.php\u0026#39; (length=9) \u0026#39;..\u0026#39; (length=2) \u0026#39;.\u0026#39; (length=1) \u0026#39;teste_01.txt\u0026#39; (length=12) \u0026#39;teste_04.txt\u0026#39; (length=12) \u0026#39;teste_03.txt\u0026#39; (length=12) Com este recurso podemos obter o nome de todos os arquivos dentro do nosso diret√≥rio, podemos fazer isso em sub diret√≥rios, para realizarmos acesso aos sub diret√≥rios devemos realizar um la√ßo recursivo üôÇ\nGet C Time 1 2 3 foreach ($directory as $file) { var_dump($file-\u0026gt;getCTime()); } Retorno 1 2 3 4 5 6 7 8 9 10 11 12 13 473002325 1473003048 1472078760 1473002338 1473002319 1473002338 1473002333 Get File Name 1 2 3 foreach ($directory as $file) { var_dump($file-\u0026gt;getFileName()); } Retorno 1 2 3 4 5 6 7 \u0026#39;teste_02.txt\u0026#39; (length=12) \u0026#39;index.php\u0026#39; (length=9) \u0026#39;..\u0026#39; (length=2) \u0026#39;.\u0026#39; (length=1) \u0026#39;teste_01.txt\u0026#39; (length=12) \u0026#39;teste_04.txt\u0026#39; (length=12) \u0026#39;teste_03.txt\u0026#39; (length=12) Get Group 1 2 3 foreach ($directory as $file) { var_dump($file-\u0026gt;getGroup()); } Retorno 1 2 3 4 5 6 7 8 9 10 11 12 13 1001 1001 1001 1001 1001 1001 1001 Temos uma lista bem extensa de fun√ß√µes que podemos utilizar para manipular diret√≥rios e seus arquivos, podemos utilizar o getPat() onde ir√° retornar o caminho onde se encontra os arquivos, getPathname retornando o caminho completo contendo o nome do arquivo. Podemos verificar se √© leg√≠vel com isReadable() onde retorna true ou false e o m√©todo isWritable onde retorna se o arquivo √© poss√≠vel de ser gravado ou n√£o.\nComo vimos nos exemplos acima, as possibilidades s√£o enormes e podemos manipular com facilidade diret√≥rios e arquivos. Recomendo que acessem a documenta√ß√£o e analisem os outros recursos, que podem lhe poupar muitas linhas e horas de c√≥digo quando o desafio √© manipular diret√≥rios e arquivos.\nPodemos utilizar este recurso para criar arquivos do tipo zip¬†por exemplo (no blog tenho um post que demonstra a cria√ß√£o de zip com PHP), ou qualquer outro formato, ficando restrito a nossa imagina√ß√£o para implementar os recursos.\nEspero que tenham gostado do post, curto por√™m demonstra um recurso muito bacana que o PHP nos traz de forma nativa.\nAt√© a pr√≥xima pessoal! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/manipulando-diretorios-com-php/","summary":"Ol√° pessoal, tudo bem?!\nNeste final de semana estive criando um pet project para praticar TDD, e foi direcionado a manipula√ß√£o de diret√≥rios.\nE com isso resolvi criar este post para mostrar um recurso muito bom do PHP, sendo a classe nativa RecursiveDirectoryIterator, onde disp√µem de um leque de ferramentas bacanas que podem facilitar sua vida.\nPara realizarmos este post vamos criar um diret√≥rio ‚Äòpost_manipulando_diretorios_com_php‚Äô e dentro dele vamos criar o arquivo index.","title":"Manipulando  diret√≥rios com PHP"},{"content":"Ol√° pessoal tudo bem?!\nOntem foi realizado o primeiro webinar do canal hhbr, com o tema ‚ÄúDocker para iniciantes‚Äù. Caso voc√™ n√£o tenha acompanhado, a grava√ß√£o encontra-se dispon√≠vel para a comunidade, espero que apreciem üôÇ\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Palestrante: Wellington F. Silva Site pessoal: http://wfsilva.com LinkedIn: https://linkedin.com/in/wfsilva Facebook: https://facebook.com/silva.tom Twitter: https://twitter.com/_wsilva Slides: https://speakerdeck.com/wsilva/comecando-com-o-docker-hackerhousebr At√© a pr√≥xima pessoal üôÇ\n","permalink":"https://diegobrocanelli.com.br/docker/docker-para-iniciantes/","summary":"Ol√° pessoal tudo bem?!\nOntem foi realizado o primeiro webinar do canal hhbr, com o tema ‚ÄúDocker para iniciantes‚Äù. Caso voc√™ n√£o tenha acompanhado, a grava√ß√£o encontra-se dispon√≠vel para a comunidade, espero que apreciem üôÇ\nAcesse o v√≠deo da palestra e espero que aprecie o conte√∫do!\nDados da palestra Palestrante: Wellington F. Silva Site pessoal: http://wfsilva.com LinkedIn: https://linkedin.com/in/wfsilva Facebook: https://facebook.com/silva.tom Twitter: https://twitter.com/_wsilva Slides: https://speakerdeck.com/wsilva/comecando-com-o-docker-hackerhousebr At√© a pr√≥xima pessoal üôÇ","title":"Docker para iniciantes (v√≠deo)"},{"content":"O PHP √© uma linguagem fant√°stica e repleta de recursos que nos surpreende todos os dias.\nN√£o √© a primeira (e n√£o ser√° a √∫ltima) vez que me pedem para implementar um recurso para compactar arquivos de um diret√≥rio e fazer o seu download para o usu√°rio.\nCom isso resolvi escrever um post para tentar auxiliar quem esteja necessitando de implementar um recurso similar.\nA estrutura do projeto de exemplo ser√°:\ndiretorio_raiz index.php files imagem_01.jpg imagem_02.jpg imagem_03.jpg imagem_04.jpg O arquivo index.php ir√° conter nossa l√≥gica de programa√ß√£o.\nO diret√≥rio files cont√©m as imagens que iremos compactar e fazer o download.\nVamos implementar nosso arquivo index.php\nUtilizarei uma classe nativa do PHP chamada ZipArchive uma poderosa classe que nos auxiliar√° e facilitar√° muito nossa manipula√ß√£o de arquivos zip.\nVale observar que para usar esta classe √© requerido a extens√£o Zip do PHP caso n√£o esteja dispon√≠vel basta executar o comando abaixo (ambiente linux) para instalar.\n1 sudo apt-get install php7.0-zip Com o comando acima eu instalo a extens√£o na vers√£o 7.0 do PHP, caso deseja em outra vers√£o basta substituir o n√∫mero.\nAntes de iniciar a codifica√ß√£o, nosso objetivo ser√°:\nLer os arquivos contido no diret√≥rio files. Criar o arquivo zip, contento as imagens do diret√≥rio. Baixar o arquivo zip. Remover o arquivo zip do servidor. Ap√≥s a instala√ß√£o vamos iniciar nossa implementa√ß√£o da nossa l√≥gica.\nPrimeiramente definimos nossa vari√°veis base;\n1 2 3 $fileName = \u0026#39;zipFile.zip\u0026#39;; $path = __DIR__ . \u0026#39;/files\u0026#39;; $fullPath = $path.\u0026#39;/\u0026#39;.$fileName; Definimos o nome do arquivo, seu caminho e o caminho completo.\nAgora necessitamos percorrer o diret√≥rio para varrer em busca de arquivos, e utilizaremos uma fun√ß√£o nativa do PHP chamada scandir() esta fun√ß√£o tem como responsabilidade listar arquivos e diret√≥rios contidos do diret√≥rio que for passado.\n1 2 // Executo a leitura no diret√≥rio para coletar os nomes dos arquivos. $scanDir = scandir($path); Como podemos ver, passamos nosso path que foi declarado no in√≠cio do nosso arquivo, ele ir√° percorrer e nos retornar um array com os nomes dos arquivos encontrados.\n1 2 3 4 5 6 7 8 // Retorno da busca pela fun√ß√£o scandir array (size=6) 0 =\u0026gt; string \u0026#39;.\u0026#39; (length=1) 1 =\u0026gt; string \u0026#39;..\u0026#39; (length=2) 2 =\u0026gt; string \u0026#39;imagem_01.jpg\u0026#39; (length=13) 3 =\u0026gt; string \u0026#39;imagem_02.jpg\u0026#39; (length=13) 4 =\u0026gt; string \u0026#39;imagem_03.jpg\u0026#39; (length=13) 5 =\u0026gt; string \u0026#39;imagem_04.jpg\u0026#39; (length=13) Como podemos ver ele retorna nos 02 primeiros incides do array os pontos de retorno do diret√≥rio, porem n√£o iremos utilizar, ent√£o devemos remover.\n1 2 3 // A fun√ß√£o array_shift remove o primeiro √≠ndice do array array_shift($scanDir); array_shift($scanDir); Ap√≥s a remo√ß√£o o array ficar√° como o demonstrado abaixo.\n1 2 3 4 5 array (size=4) 0 =\u0026gt; string \u0026#39;imagem_01.jpg\u0026#39; (length=13) 1 =\u0026gt; string \u0026#39;imagem_02.jpg\u0026#39; (length=13) 2 =\u0026gt; string \u0026#39;imagem_03.jpg\u0026#39; (length=13) 3 =\u0026gt; string \u0026#39;imagem_04.jpg\u0026#39; (length=13) Agora que dispomos dos arquivos que desejamos compactar, vamos iniciar o processo de cria√ß√£o do arquivo zip.\n1 $zip = new \\ZipArchive(); Ap√≥s instanciarmos nossa classe, vamos verificar a cria√ß√£o do arquivo e percorrer o array que disp√µem o nome dos arquivos para adiciona-los em nosso zip.\n1 2 3 4 5 6 7 8 9 10 // Criamos o arquivo e verificamos se ocorreu tudo certo if ($zip-\u0026gt;open($fullPath, \\ZipArchive::CREATE) ) { // adiciona ao zip todos os arquivos contidos no diret√≥rio. foreach($scanDir as $file){ $zip-\u0026gt;addFile($path.\u0026#39;/\u0026#39;.$file, $file); } // fechar o arquivo zip ap√≥s a inclus√£o dos arquivos desejados $zip-\u0026gt;close(); } Agora se voc√™ rodar nosso arquivo index.php ele ir√° criar nosso arquivo zipFile.zip dentro do diret√≥rio files.\nComo nossa √∫ltima meta √© baixar o arquivo para o usu√°rio, vamos implementar nosso c√≥digo para executar esta a√ß√£o.\n1 2 3 4 5 6 7 8 9 // Primeiro nos certificamos de que o arquivo zip foi criado. if (file_exists($fullPath)) { // For√ßamos o donwload do arquivo. header(\u0026#39;Content-Type: application/zip\u0026#39;); header(\u0026#39;Content-Disposition: attachment; filename=\u0026#34;\u0026#39;.$fileName.\u0026#39;\u0026#34;\u0026#39;); readfile($fullPath); //removemos o arquivo zip ap√≥s download unlink($fullPath); } Agora basta executarmos novamente nosso arquivo index.php, e pronto √© executado o download do nosso arquivo zip automaticamente.\nCabe uma observa√ß√£o, neste post eu adicionei ao arquivo zip apenas imagens jpg, por√©m podemos adicionar qualquer arquivo que desejarmos, png, xml, sql entre outros.\nVale lembrar tamb√©m que esta √© uma pequena demonstra√ß√£o, por√©m pode facilmente ser implementada e ampliada de acordo com sua necessidade üòâ\nCaso deseja, foi criado um reposit√≥rio no GitHub¬†zip_php para¬†acessar os arquivos mencionados neste post.\nEspero que tenham gostado, at√© a pr√≥xima pessoal\n","permalink":"https://diegobrocanelli.com.br/php/criando-e-baixando-arquivos-zip-com-php/","summary":"O PHP √© uma linguagem fant√°stica e repleta de recursos que nos surpreende todos os dias.\nN√£o √© a primeira (e n√£o ser√° a √∫ltima) vez que me pedem para implementar um recurso para compactar arquivos de um diret√≥rio e fazer o seu download para o usu√°rio.\nCom isso resolvi escrever um post para tentar auxiliar quem esteja necessitando de implementar um recurso similar.\nA estrutura do projeto de exemplo ser√°:","title":"Criando e baixando arquivos ZIP com PHP"},{"content":"Ol√° pessoal tudo bem?! Eu sou um grande consumidor de Podcast e a um tempo ouvi o epis√≥dio do Mateada Podcast sobre leis na internet e fiquei curioso at√© mesmo sobre licen√ßas de softwares, e recentemente o pessoal da Lambda3 lan√ßou um epis√≥dio do podcast excelente sobre open source, e reacendeu a chama da curiosidade sobre o mundo do software livre, suas vertentes, os tipos de licen√ßas e tudo o mais.\nCom isso resolvi pesquisar mais sobre o assunto e toda a pesquisa resumi neste post para compartilhar o conhecimento que adquiri ao longo das pesquisas realizadas.\nQuero deixar claro que N√ÉO TENHO CONHECIMENTOS JUR√çDICOS que me qualificam para lhe afirmar sobre licen√ßas e nada sobre o √¢mbito legal, e apenas trago o resumo da pesquisa realizada, caso voc√™ tenha que decidir sobre uma licen√ßa para seu software, cabe a um advogado ou ao departamento jur√≠dico da empresa atuar neste cen√°rio. Porem √© de extrema valia que o desenvolvedor conhe√ßa este ecossistema, at√© mesmo utilizar de forma mais clara o que cada conceito se aplica.\nBreve hist√≥rico do software livre Em 1970 a gigante IBM come√ßa a comercializar softwares separados do hardware o que abriria as portas para um novo mercado a ser explorado onde o software seria um produto de prateleira, onde poderia ser adquirido e consumido. Obviamente devo salientar que nos anos 70, o comercio era baseado em vendas de hardwares que traziam embutidos softwares para seu uso.\nEm 1976 temos a t√£o famigerada ‚ÄúCarta aberta aos hobistas‚Äù escrita por ningu√©m menos que Bill Gates aos 21 anos onde ele prega fervorosamente que o softwares open source s√£o danosos para o mercado. Neste mesmo per√≠odo temos iniciativas de softwares livres que se encontram em atividade nos dias de hoje, como por exemplo SPICE, TeX e Unix.\nDaremos um salto no tempo e em 1980 foram criados os primeiros projetos conscientes para serem software livre, sendo estabelecido os fundamentos √©ticos, legais e financeiros do movimento, e em 1984 Richard Stallman, deixa seu emprego na AI Lab no MIT e come√ßa a trabalhar no Projeto GNU, ap√≥s seu ingresso no projeto ele contribuiu com a cria√ß√£o da Licen√ßa GPL, publicou o Manifesto GNU e fundou a Free Software Foundation. Sendo esses feitos que o tornam referencia no movimento do software livre.\nEm mar√ßo de 1994 foi lan√ßado a primeira vers√£o do Linux por ningu√©m menos que Linus Torvalds, onde o Linux seria integrado ao Projeto GNU, tornando-se o primeiro sistema operacional de software livre.\nEm 1995 Bob Young funda a Red Hat Software ao comprar a distribui√ß√£o Red Hat Linux.\nEm 1996 o projeto KDE √© anunciado tendo como objetivo resolver os problemas de usabilidade para os usu√°rios finais de ambientes similares ao Unix.\nEm 1998 Eric Raymond em conjunto com Linus Torvalds apresent√£o o Open Source Initiative (OSI).\nEm 1999 as empresas Dell, HP e SGI anunciam que dar√£o suporte ao GNU/Linux em seus computadores.\nEm 2001 a IBM anuncia o investimento de 1 bilh√£o de d√≥lares no Linux.\nEm 2004 foi lan√ßado a primeira vers√£o do Ubuntu, umas das distribui√ß√µes linux mais utilizadas atualmente.\nEm 2007 a Sun libera o JDK sob GLPv2.\nEm 2009 a Oracle compra a Sun Microsystem por US$ 7,4 bilh√µes e entra definitivamente no mercado de software livre.\nEm 2011 Linus Torvalds disponibiliza a vers√£o 2.6.38 do kernel Linux.\nNo Brasil o movimento de software livre pode ser tra√ßada a partir de 1990 com a chegada e implementa√ß√£o do GNU/Linux em departamentos de ci√™ncia da computa√ß√£o de universidades. Destaca-se a funda√ß√£o da Conectiva, a funda√ß√£o do Projeto de Software Livre do Rio Grande do Sul e a ONG Associa√ß√£o Software Livre. Em 2003 foi publicado o decreto p√∫blico que institui comit√©s t√©cnicos para a ado√ß√£o e uso de software livres em √≥rg√£os e institui√ß√µes do governo Brasileiro.\nComo pode ser observado, o trajeto do software livre √© longo com diversos acontecimentos que foram marcantes para seu fortalecimento, infelizmente n√£o abordei com maiores detalhes essa hist√≥ria pois com certeza √© material para um livro, para que possa ser analisado e consumido com maior riqueza de detalhes.\nUm dos pontos que mais chamou minha inten√ß√£o nas pesquisas para a produ√ß√£o deste post foram as defini√ß√µes das 4 liberdades que todo software livre deve conter, sendo elas:\nLiberdade 0: A liberdade de executar o programa como voc√™ desejar, para qualquer prop√≥sito; Liberdade 1: A liberdade de estudar como o programa funciona, e adapt√°-lo √†s suas necessidades. Para tanto, acesso ao c√≥digo-fonte √© um pr√©-requisito; Liberdade 2: A liberdade de redistribuir c√≥pias de modo que voc√™ possa ajudar ao pr√≥ximo; Liberdade 3: A liberdade de distribuir c√≥pias de suas vers√µes modificadas a outros. Desta forma, voc√™ pode dar a toda comunidade a chance de beneficiar de suas mudan√ßas. Para tanto, acesso ao c√≥digo-fonte √© um pr√©-requisito. Fonte (https://www.gnu.org/philosophy/free-sw.pt-br.html)\nBem agora que pudemos observar uma breve hist√≥ria do software livre, qual a diferen√ßa entre software livre, de c√≥digo aberto e software gratuito, pois tudo isso n√£o √© a mesma coisa?\nSoftware livre, de c√≥digo aberto e software gratuito, quais s√£o suas diferen√ßas? Software livre (free software) √© o conceito onde o software deve estar atrelado a liberdade, portanto sendo um movimento social e para que todo software seja denominado livre deve contemplar as 4 liberdades (descritas anteriormente) sendo esses os fundamentos base.\nSoftware gratuito (freeware), s√£o softwares que podemos fazer uso de forma gratuita. Podemos notar que nem todo software gratuito √© livre! Pois nesta categoria o software n√£o tem seu c√≥digo fonte liberado para a comunidade sendo de posse da empresa ao qual disponibilizou no mercado, portanto n√£o pode ser alterado seu c√≥digo fonte ou at√© mesmo estud√°-lo e sim somente fazer uso do mesmo, √© uma pr√°tica muito comum no mercado de desenvolvimento de software onde h√° uma vers√£o gratuita para uso, porem existe uma vers√£o paga que contempla mais recursos para o seu usu√°rio.\n√â permitido vender software livre? A resposta √© SIM, por exemplo, o desenvolvedor criar um App mobile, disponibiliza o c√≥digo fonte no GitHub e vende o App em seu site. Desde que as a√ß√µes n√£o quebrem nenhuma das 4 liberdades do movimento do software livre, o desenvolvedor ou empresa pode fazer uso comercial do App.\nC√≥digo aberto (Open Source), √© uma pr√°tica muito comum tratar software livre e c√≥digo aberto (Open Source) sendo a mesma coisa, porem h√° diferen√ßas entre as duas.\nA Open Source traz outros pontos que s√£o diferentes das 4 liberdades j√° mencionadas, tentando tornar mais flex√≠vel a iniciativa. A organiza√ß√£o definiu 10 quesitos para que um software seja considerado Open Source, sendo eles:\nDistribui√ß√£o livre; Acesso ao c√≥digo-fonte; Permiss√£o para cria√ß√£o de trabalhos derivados; Integridade do autor do c√≥digo-fonte; N√£o discrimina√ß√£o contra pessoas ou grupos; N√£o discrimina√ß√£o contra √°reas de atua√ß√£o; Distribui√ß√£o da licen√ßa; Licen√ßa n√£o espec√≠fica a um produto; Licen√ßa n√£o restritiva a outros programas; Licen√ßa neutra em rela√ß√£o √† tecnologia. Fonte (http://softwarelivre.org/open-source-codigo-aberto)\nLicen√ßa no mundo do desenvolvimento de software Uma licen√ßa nada mais √© do que uma defini√ß√£o de a√ß√µes autorizadas ou proibidas no √¢mbito do direito de autor de um software, onde s√£o concedidas ou impostas ao usu√°rio deste software.\nE devemos ter claramente definido que usu√°rio √© qualquer utilizador sendo empresas, entidades, usu√°rios finais ou programadores.\nQuais s√£o as licen√ßas mais conhecidas? Temos listados abaixo as principais tipos de licen√ßas utilizadas no mundo de desenvolvimento de software, n√£o conseguirei aprofundar em todas pois esse post (que j√° est√° bem extenso) ficaria ainda maior. Recomendo fortemente que leiam as defini√ß√µes de cada licen√ßa, para que assim possa ter a devida compreens√£o do que pode ou n√£o ser feito quando o c√≥digo que deseja utilizar esta regido por alguma das licen√ßas citadas abaixo.\nApache License 2.0 GNU General Public License v3.0 MIT License Artistic License 2.0 BSD 2-clause ‚ÄúSimplified‚Äù License BSD 3-clause ‚ÄúNew‚Äù or ‚ÄúRevised‚Äù License Creative Commons Zero v1.0 Universal Eclipse Public License 1.0 GNU Affero General Public License v3.0 GNU General Public License v2.0 GNU Lesser General Public License v2.1 GNU Lesser General Public License v3.0 ISC License Mozilla Public License 2.0 The Unlicense Copyleft O que isso afeta em nosso dia a dia? Posso citar um caso de uso que passei, j√° presenciei um programador que incluiu em seu App mobile Java uma library coletado na internet (Ctrl+C Crtl+V) e n√£o analisou os c√≥digo e principalmente deixou de lado a licen√ßa no qual os c√≥digos estavam sendo regidos, a primeira rea√ß√£o do programador ao ser questionado do processo de an√°lise que ele deveria ter feito foi, ‚Äúh√° mas eu peguei do GitHub‚Äù e vale salientar que mesmo que o c√≥dio esteja na internet principalmente no GitHub N√ÉO D√Å O DIREITO DE USO LIVRE, sendo assim o programador foi orientado a remover toda a biblioteca do projeto pois este ato poderia ter fortes implica√ß√µes legais. Infelizmente n√£o me recordo ao certo qual era a licen√ßa que estava sendo utilizada, porem lembro que um dos pontos era N√ÉO PODE TER USO COMERCIAL. Isso parece √≥bvio agora, porem um dos pontos que deixamos de lado ao consumir c√≥digos de terceiros, √© analisar a licen√ßa inclusa.\nN√£o estou nem mencionando o quanto √© perigoso utilizar c√≥digo de terceiro sem o devido processo de an√°lise, estou refor√ßando o problema que seria caso seja pego em um software empresarial, isso traria grandes problemas a empresa.\nImagino que possa haver pessoas pensando ‚Äúh√° mas isso s√≥ se for pego, denunciado‚Äù, e aproveito o momento para refor√ßar que este tipo de pensamento √© errado, pois ciente ou n√£o a quebra de uma lei pequena ou n√£o n√£o deixa de ser algo errado, ent√£o por favor cumprir as leis nada mais √© do que o dever de cada um. Eu sou desenvolvedor de software e sim crio softwares propriet√°rios, porem tamb√©m construo softwares e c√≥digos livres. Apenas refor√ßo que o mesmo grande esfor√ßo que voc√™ teve para construir o seu sistema, foi tamb√©m grandioso para quem escreveu os c√≥digos ou sistema que voc√™ possa estar consumindo de forma pirata.\nComo escolher a melhor licen√ßa para o meu software? Infelizmente neste t√≥pico n√£o disponho de maior conhecimento, pois √© muito inerente ao tipo de software que queira construir ou para quem voc√™ ir√° construir. Pois Cada empresa, grupo ou institui√ß√£o tem suas pr√≥prias normas e isso vai implicar nos tipos de licen√ßas que podem ser usados no softwares a serem constru√≠dos.\nCanais, blogs e a comunidade de software livre. Youtube Diolinux Fl√°vio Dicas LinuxTips Blogs http://www.diolinux.com.br/ http://sejalivre.org/ Sites http://softwarelivre.org/ Eventos http://softwarelivre.org/fisl17 www.ftsl.org.br/2016 http://latinoware.org/ Considera√ß√µes finais Este post n√£o tem a menor inten√ß√£o de ser extremista, tanto para o lado open source quanto para softwares propriet√°rios. Minha inten√ß√£o √© deixar mais claro o que √© essa sopa de letrinhas e o que cada uma delas representam. Mas um fato ineg√°vel √© que o ‚Äúmundo‚Äù open source trouxeram grandes avan√ßos para a tecnologia, revolucionando o mercado de TI.\nDeixo aqui registrado que devemos colaborar com projetos open sources, e todos os projetos necessitam de apoio, n√£o deixando de lado apoio financeiro, ent√£o por favor n√£o fique chamando empresas de mercen√°rias, somente pelo fato de que elas necessitam de doa√ß√µes para manter o projeto open source, pois como o velho ditado diz ‚Äúningu√©m almo√ßa de gra√ßa‚Äù em outras palavras precisamos de dinheiro para se manter, seja o programador pagar suas contas, quanto a pr√≥pria empresa que mant√©m o projeto open source tem de pagar programadores, servidores dentre diversas outras coisas.\nHoje grandes empresas como a Microsoft est√£o mudando fortemente seus conceitos e aderindo ao mundo open source, claro voc√™ n√£o acredita que a Gooogle vai inserir no GitHub todo seu c√≥digo respons√°vel pelo seu algoritmo de busca, pois isso n√£o ir√° acontecer, porem ela contribuiu com v√°rios outros projetos que o mundo todo utiliza, como por exemplo AngularJS.\nE por √∫ltimo caso voc√™ n√£o concorde com o rumo que o projeto open source que voc√™ goste esteja tomando, ao inv√©s de apenas criticar ou ficar hateando no twitter, procure ajudar, mande propostas de melhorias, colabore, essa atitude sim acrescenta e todos ganham no final.\nEspero que tenham apreciado o post, caso tenha algum ponto que discordem vamos fazer um debate nos coment√°rios, vamos fomentar mais conte√∫do, deixe tamb√©m suas criticas ou sugest√µes.\nUm grande abra√ßo a todos.\n","permalink":"https://diegobrocanelli.com.br/open-source/software-livre-de-codigo-aberto-e-software-gratuito-quais-sao-suas-diferencas/","summary":"Ol√° pessoal tudo bem?! Eu sou um grande consumidor de Podcast e a um tempo ouvi o epis√≥dio do Mateada Podcast sobre leis na internet e fiquei curioso at√© mesmo sobre licen√ßas de softwares, e recentemente o pessoal da Lambda3 lan√ßou um epis√≥dio do podcast excelente sobre open source, e reacendeu a chama da curiosidade sobre o mundo do software livre, suas vertentes, os tipos de licen√ßas e tudo o mais.","title":"Software livre de c√≥digo aberto e software gratuito, quais s√£o suas diferen√ßas?"},{"content":"Ol√° pessoal tudo tranquilo?!\nFoi lan√ßado o Zend Framework 3, estava bem ansioso em rela√ß√£o a esta nova vers√£o que prometida muitas melhorias para o framework.\nForam cerca de 17 meses de produ√ß√£o, teve um grande aumento de performance, suporte ao PHP 7 e foco em pacotes. Pegando o gancho dos pacotes, algo que realmente √© muito interessante, pois agora temos cada componente do framework em um reposit√≥rio individual no GitHub.\nPorem as mudan√ßas n√£o ficaram somente no escopo do framework, pois houveram grandes reformula√ß√µes no site do¬†https://framework.zend.com¬†a documenta√ß√£o teve um upgrade bem legal¬†https://framework.zend.com/learn¬†na minha opini√£o ainda poderia ficar com uma usabilidade melhor, porem em compara√ß√£o com a documenta√ß√£o das vers√µes anteriores do framework as mudan√ßas foram bem grandes.\nDispomos tamb√©m de um site contendo tutorarias, guia de migra√ß√£o e acesso a documenta√ß√£o https://docs.zendframework.com/tutorials/ o que d√° ainda mais animo para se aventurar na nova onda que a Zend est√° lan√ßando.\nComo mencionado a pouco, agora cada componente est√° individualizado e pode ter seu uso sem nenhum problema em outros projetos fora da arquitetura do ZF3, abaixo vemos a lista de componentes:\nzend-authentication zend-barcode zend-cache zend-captcha zend-code zend-component-installer zend-config zend-console zend-crypt zend-db zend-debug zend-di zend-diactoros zend-dom zend-escaper zend-eventmanager zend-expressive zend-feed zend-file zend-filter zend-form zend-http zend-hydrator zend-inputfilter zend-i18n zend-json zend-json-server zend-ldap zend-loader zend-log zend-mail zend-math zend-memory zend-mime zend-modulemanager zend-mvc zend-mvc-console zend-mvc-i18n zend-mvc-plugin-fileprg zend-mvc-plugin-flashmessenger zend-mvc-plugin-identity zend-mvc-plugin-prg zend-navigation zend-paginator zend-permissions-acl zend-permissions-rbac zend-progressbar zend-psr7bridge zend-router zend-serializer zend-server zend-servicemanager zend-servicemanager-di zend-session zend-soap zend-stdlib zend-stratigility zend-tag zend-test zend-text zend-uri zend-validator zend-view zend-xmlrpc zend-xml2json J√° h√° algum tempo foi lan√ßado o Zend Expressive¬†micro framework da Zend que implementa a PSR-7 e Middleware o que √© excelente e novamente a Zend refor√ßa o lan√ßamento. O micro framework vem para cobrir a necessidade de que em determinados momentos voc√™ n√£o precisa de uma estrutura t√£o robusta como o Zend Framework para solucionar seu problema, voc√™ deseja algo menor que lhe atenda mais rapidamente, particularmente gostei bastante do micro framework e estou me aventurando com ele em projetos particulares/estudos.\nOk tudo muito bonito estou convencido do grande Avan√ßo do frameowrok, mas quero usar o que eu fa√ßo?\nEm primeiro lugar devo lhe informar que para usar o Zend Framework 3 voc√™ precisa dispor do PHP \u0026gt;= 5.6, sim somente nas mais recentes vers√µes do PHP ser√° poss√≠vel utilizar. Sei que em ambientes corporativos isso pode ser uma grande barreira, pois nem todas as empresas atualizam a vers√£o assim que ela se encontra dispon√≠vel, porem voc√™ DEV¬†PHP n√£o tem desculpa para n√£o ter dispon√≠vel em seu computador pessoal a mais recente vers√£o do PHP, ent√£o arregace as mangas e corra para a divers√£o.\nPara iniciar √© muito simples, podemos utilizar o Skeleton Application, basta acessar o terminal e executar o comando abaixo onde deseja instalar.\n1 composer create-project -n -sdev zendframework/skeleton-application path/to/install Como podemos reparar com apenas um comando do composer ser√° instalado toda a estrutura necess√°ria para a utiliza√ß√£o do Zend Framework 3. Caso voc√™ tenha vindo de marte hoje e n√£o tenha composer ou n√£o faz a menor ideia do que seja, CORRA e instale agora o gerenciador de pacote, ele √© umas das oitavas maravilhas do mundo PHP e indispens√°vel em seu dia a dia.\nAp√≥s a instala√ß√£o voc√™ deve acessar o diret√≥rio raiz do projeto e execute o seguinte comando para executar o sistema.\n1 composer serve Ou\n1 php -S 0.0.0.0:8080 -t public/ public/index.php O primeiro comando nada mais √© do que o pr√≥prio composer executar o segundo comando, e o segundo comando √© o servidor embutido do PHP, que se mostra excelente para testes r√°pidos.\nAp√≥s a execu√ß√£o do comando, acesse o navegador de sua preferencia e digite a seguinte URL:\n1 http://localhost:8080/ O resultado final deve ser similar o da imagem abaixo.\nComo podemos ver, √© bem simples de se iniciar uma aplica√ß√£o com o Zend Framework, caso voc√™ esteja habituado com o ZF2 notara algumas mudan√ßas nos arquivos de configura√ß√£o, porem na minha vis√£o ficou mais intuitivo e mais detalhado as configura√ß√µes que o usu√°rio pode realizar em sua aplica√ß√£o.\nBom √© isso pessoal espero que estejam t√£o empolgados quanto eu para usar esta nova ferramenta, e assim que eu dispor de mais materiais eu vou postando aqui no blog.\nAbra√ßo a todos e at√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/php/um-grande-passo-zend-framework-3-released/","summary":"Ol√° pessoal tudo tranquilo?!\nFoi lan√ßado o Zend Framework 3, estava bem ansioso em rela√ß√£o a esta nova vers√£o que prometida muitas melhorias para o framework.\nForam cerca de 17 meses de produ√ß√£o, teve um grande aumento de performance, suporte ao PHP 7 e foco em pacotes. Pegando o gancho dos pacotes, algo que realmente √© muito interessante, pois agora temos cada componente do framework em um reposit√≥rio individual no GitHub.","title":"Um grande passo, Zend Framework 3 released!!!"},{"content":"Ol√° pessoal tudo bem?\nAnteriormente fiz um post para demonstrar o uso do PHPCodeSniffer, uma ferramenta muito √∫til para verificar poss√≠veis erros em nossos c√≥digos, e com isso nos auxiliar a melhora-los. Pois bem hoje vou lhes mostrar outra ferramenta PHP Coding Standards Fixer ou mais conhecido como PHP-CS-Fixer (reposit√≥rio Github).\nCom esta ferramenta poderemos realizar o processo de corre√ß√£o autom√°tica para as viola√ß√µes por exemplo da PSR-2, isso mesmo de forma autom√°tica!!!\nE como isso funciona? Pois bem, Show Me The Code!!!\nInstala√ß√£o Dispomos de diversas formas para realizar sua instala√ß√£o, e para este post irei utilizar seu arquivo .phar.\nPara obtermos, podemos baixar diretamente do link.\nOu podemos instalar de forma Global:\nManual ‚Äì wget 1 $ wget http://get.sensiolabs.org/php-cs-fixer.phar -O php-cs-fixer Manual ‚Äì CURL 1 $ curl http://get.sensiolabs.org/php-cs-fixer.phar -o php-cs-fixer Depois devemos conceder as seguintes permiss√µes:\n1 2 $ sudo chmod a+x php-cs-fixer $ sudo mv php-cs-fixer /usr/local/bin/php-cs-fixer Para executar basta realizar o seguinte comando:\n1 php-cs-fixer Global ‚Äì composer 1 $ ./composer.phar global require fabpot/php-cs-fixer Em seguida, verifique se voc√™ executar ~/.composer/fornecedor/bin no seu PATH, e voc√™ est√° pronto para ir:\n1 exporta√ß√£o PATH = \u0026#34; $ PATH : $ HOME /.composer/vendor/bin \u0026#34; Global ‚Äì homebrew 1 brew install homebrew/php/php-cs-fixer Execu√ß√£o do php-cs.fixer.phar Tomemos como base o seguinte c√≥digo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 \u0026lt;?php namespace Diego\\Generator; class PDF { /** * Title for document PDF. * @var string */ protected $title; /** * Paper Orientation * @example portrait * @var string */ protected $paperOrientation; /** * Content text of document PDF * @var string */ protected $text; /** * Set data document * @param array $data array for data of document PDF */ public function setData($data) { foreach ($data as $key =\u0026gt; $value) { $this-\u0026gt;$key = $value; } } /** * Get data document * @param string $key Referentes the properties of document. * @return mixed */ public function getData($key) { return $this-\u0026gt;$key; } /** * The document PDF * @return Diego\\Generator\\PDF\\PDF; */ public function createPDF() { // code for generate pdf... } } N√£o preciso nem descrever as graves agre√ß√µes que o c√≥digo acima inflige nas recomenda√ß√µes das PSR‚Äôs, m√©todos descritos sem formata√ß√£o, excesso de espa√ßos e total negligencia a endenta√ß√£o de c√≥digo.\nAgora devemos acessar o diret√≥rio raiz do projeto, que em nosso caso √© onde encontra-se nossa classe que gostar√≠amos de corrigi-la.\nDevemos executar o seguinte comando no terminal:\n1 php php-cs-fixer fix pdf.php Vamos agora acessar novamente nossa classe para podemor avaliar as mudan√ßas ocorridas.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \u0026lt;?php namespace Diego\\Generator; class PDF { /** * Title for document PDF. * @var string */ protected $title; /** * Paper Orientation * @example portrait * @var string */ protected $paperOrientation; /** * Content text of document PDF * @var string */ protected $text; /** * Set data document * @param array $data array for data of document PDF */ public function setData($data) { foreach ($data as $key =\u0026gt; $value) { $this-\u0026gt;$key = $value; } } /** * Get data document * @param string $key Referentes the properties of document. * @return mixed */ public function getData($key) { return $this-\u0026gt;$key; } /** * The document PDF * @return Diego\\Generator\\PDF\\PDF; */ public function createPDF() { // code for generate pdf... } } E¬†pronto, temos nossa classe corrigida conforme desejamos, f√°cil n√£o?!\nO que gostaria de refor√ßar aqui √© o seguinte, para quem estiver come√ßando a usar o PHP recomento que use o PHPCodeSnifer, para que assim possa analisar o que est√° em desacordo em seu c√≥digo e posteriormente utilizar o PHP-CS-Fixer. E refor√ßo a import√¢ncia de que esta ferramenta nos auxilia no processo e nunca deve ser usada para corrigir de forma descontrolada o c√≥digo, em outras palavras, n√£o √© desculpa para escrever c√≥digo de m√° qualidade!!!\nO PHP-CS-FIXER tem uma gama de op√ß√µes bem extensa, onde vale muito a pena que deem uma olhada para poder desfrutar de maior capacidade da ferramenta.\nAlguns Editores e IDE‚Äôs disp√µem de ferramentas para auxiliar o uso do PPHCS.\nAtom NetBeans PHP Storm Sublime Text Vim Bom por hoje √© s√≥ pessoal, espero que tenham gostado e que o post tenha acrescentado algo em seu dia, at√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/php/php-coding-standards-fixer/","summary":"Ol√° pessoal tudo bem?\nAnteriormente fiz um post para demonstrar o uso do PHPCodeSniffer, uma ferramenta muito √∫til para verificar poss√≠veis erros em nossos c√≥digos, e com isso nos auxiliar a melhora-los. Pois bem hoje vou lhes mostrar outra ferramenta PHP Coding Standards Fixer ou mais conhecido como PHP-CS-Fixer (reposit√≥rio Github).\nCom esta ferramenta poderemos realizar o processo de corre√ß√£o autom√°tica para as viola√ß√µes por exemplo da PSR-2, isso mesmo de forma autom√°tica!","title":"PHP Coding Standards Fixer"},{"content":"Desde sua vers√£o 5.5 encontra-se dispon√≠vel o recurso de generators no PHP\u0026lt;, esse recurso nos permite realizar itera√ß√µes tendo ganho de performance, pois realiza a entrega dos dados sobe demanda, diferentemente do iterador padr√£o do PHP, onde processa o conjunto de dados na mem√≥ria.\nPara criar um generator √© muito simples, pois s√£o somente fun√ß√µes PHP que fazem uso da palavra chave yield. Diferente do retorno convencional de uma fun√ß√£o PHP, ao utilizar um generator ele apenas gera valores por demanda, como podemos analisar no exemplo abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php function myGenerator() { $i = 0; $limit = 50; for( $i; $i \u0026lt;= $limit; $i++ ){ yield $i; } } foreach (myGenerator() as $value) { echo $value .\u0026#39;, \u0026#39;; } Ap√≥s criarmos nosso¬†generator, √© realizado um foreach para percorrer os dados e imprimir os valores.\nComo resultados obtivemos:\n1 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, O exemplo acima √© uma amostra b√°sica do uso de generator, porem imagine o caso de uso que voc√™ tenha que processar um arquivo TXT de 5GB, com disponibilidade de apenas 1GB de mem√≥ria dispon√≠vel para o PHP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;?php function getRows($file) { $fileHandle = fopen($file, \u0026#39;rb\u0026#39;); if($file === false){ throw new Exception(\u0026#39;Error Processing File\u0026#39;); } // feof = Testa pelo fim-de-arquivo (eof) em um ponteiro de arquivo while( !feof($fileHandle) ){ yield fgetcsv($fileHandle); } fclose($fileHandle); } foreach (getRows(\u0026#39;myDataBase.csv\u0026#39;) as $row) { echo $row; } Neste exemplo o PHP vai alocar mem√≥ria apenas para cada linha processada, porem o processo realizado por um generator s√£o sempre para frente, onde n√£o podemos retroceder, avan√ßar ou realizar buscas.\nA SPL (Standard PHP Library) disp√µem de diversos iterators padr√µes, vale a pena dar uma olhada na documenta√ß√£o.\nBom pessoal espero que tenham gostado, e que este recurso seja √∫til em seu dia a dia.\nAt√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/generators-no-php/","summary":"Desde sua vers√£o 5.5 encontra-se dispon√≠vel o recurso de generators no PHP\u0026lt;, esse recurso nos permite realizar itera√ß√µes tendo ganho de performance, pois realiza a entrega dos dados sobe demanda, diferentemente do iterador padr√£o do PHP, onde processa o conjunto de dados na mem√≥ria.\nPara criar um generator √© muito simples, pois s√£o somente fun√ß√µes PHP que fazem uso da palavra chave yield. Diferente do retorno convencional de uma fun√ß√£o PHP, ao utilizar um generator ele apenas gera valores por demanda, como podemos analisar no exemplo abaixo.","title":"Generators no PHP"},{"content":"Ol√° pessoal tudo bem?\nIrei construir um skeleton application utilizando o micro framework Silex. Este micro framework √© irm√£o do Symfony framework full stack e ambos os projetos s√£o mantidos pela comunidade PHP e a empresa SensioLabs empresa fundada pelo Fabien Potencier e criador de ambos frameworks citados acima.\nO Silex tem como base o Symfony e Pimple e foi¬†inspirado pelo Sinatra¬†um framework Ruby. Tendo como foco a simplicidade no desenvolvimento de aplica√ß√µes.\nE qual √© a finalidade do skeleton? Voc√™ ir√° aprender a utilizar o micro framework, seguindo boas pr√°ticas e como resultado final ter√° em m√£os, uma base que facilitar√° a constru√ß√£o de aplica√ß√µes utilizando o Silex.\nNosso projeto ter√° a seguinte estrutura de diret√≥rios:\nconfig src/App/Controller public templates Sendo:\nconfig: Local que armazenara as configura√ß√µes globais do projeto e as rotas da aplica√ß√£o. public: Respons√°vel por manter as informa√ß√µes publicas que o usu√°rio ter√° acesso pelo navegador, sendo eles: index.php css js images src/App/Controller: Respons√°vel por manter o nosso cotroller da aplica√ß√£o. Ap√≥s termos criados nossa estrutuda de diret√≥rios, vamos criar nosso arquivo composer.json. Pois iremos controlar todas as depend√™ncias do nosso projeto pelo Composer.\nPara criar o arquivo vamos acessar pelo terminal o diret√≥rio raiz do projeto, devemos executar o seguinte comando:\n1 composer init Este comando √© auto explicativo, e no terminal ele ir√° lhe guiar passo a passo em sua constru√ß√£o.\nNo momento em que for solicitado a lista das depend√™ncias, devemos informar¬†as seguintes depend√™ncias.\n1 2 3 \u0026#34;php\u0026#34;: \u0026#34;\u0026gt;=5.3.3\u0026#34;, \u0026#34;silex/silex\u0026#34;: \u0026#34;~1.0\u0026#34;, \u0026#34;symfony/twig-bridge\u0026#34;: \u0026#34;~2.3\u0026#34; Ap√≥s a cria√ß√£o devemos configurar o autoload para nosso m√≥dulo.\n1 2 3 4 5 \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;: { \u0026#34;App\\\\\u0026#34;: \u0026#34;src/App/\u0026#34; } } O seu composer deve ficar similar ao demonstrado abaixo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \u0026#34;name\u0026#34;: \u0026#34;Diego-Brocanelli/silex_skeleton_application\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;A Silex Skeleton application, for references in blog post.\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;MIT\u0026#34;, \u0026#34;authors\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Diego Brocanelli\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;contato@diegobrocanelli.com.br\u0026#34; } ], \u0026#34;minimum-stability\u0026#34;: \u0026#34;dev\u0026#34;, \u0026#34;require\u0026#34;: { \u0026#34;php\u0026#34;: \u0026#34;\u0026gt;=5.3.3\u0026#34;, \u0026#34;silex/silex\u0026#34;: \u0026#34;~1.0\u0026#34;, \u0026#34;symfony/twig-bridge\u0026#34;: \u0026#34;~2.3\u0026#34; }, \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;: { \u0026#34;App\\\\\u0026#34;: \u0026#34;src/App/\u0026#34; } } } Ap√≥s as configura√ß√µes serem inseridas no composer, vamos instalar nossas depend√™ncias, para isso devemos executar o seguinte comando.\n1 composer install Agora¬†que j√° configuramos o nosso projeto, Show me the code!!!!\nImplementa√ß√£o do bootstrap.php Inicialmente devemos criar o arquivo bootstrap.php, dentro do diret√≥rio config.\nAp√≥s a cria√ß√£o do arquivo¬†devemos importar o autoloader do composer, pois √© ele que ir√° gerenciar nossas depend√™ncias.\n1 2 3 \u0026lt;?php require_once __DIR__.‚Äô/../vendor/autoload.php Devo salientar que utilizei o require_once, tendo em vista que o autoload.php √© fundamental para o devido funcionamento da aplica√ß√£o. Em seguida eu apontei para o diret√≥rio e o arquivo que desejo, a instru√ß√£o ‚Äò/../‚Äô √© para voltar um diret√≥rio, pois o diret√≥rio vendor est√° na raiz do nosso projeto.\nAgora devemos importar o componente Silex\\Application respons√°vel pela execu√ß√£o do framework.\n1 2 3 4 5 \u0026lt;?php require_once __DIR__.‚Äô/../vendor/autoload.php use Silex\\Application; Ap√≥s importa√ß√£o vamos instanciar nosso objeto para podermos utiliza-lo.\n1 2 3 4 5 6 7 \u0026lt;?php require_once __DIR__.‚Äô/../vendor/autoload.php use Silex\\Application; $app = new Application(); Como estamos desenvolvendo um skeleton como estudo, o Silex fornece¬†a seguinte funcionalidade:\n1 $app[‚Äòdebug‚Äô] = true; Onde habilita o modo de debug da aplica√ß√£o, nossa implementa√ß√£o ficar√° da seguinte maneira:\n1 2 3 4 5 6 7 8 9 \u0026lt;?php require_once __DIR__.‚Äô/../vendor/autoload.php use Silex\\Application; $app = new Application(); $app[‚Äòdebug‚Äô] = true; Com isso finalizamos a implementa√ß√£o inicial do nosso arquivo de configura√ß√£o.\nImplementa√ß√£o do routes.php Este arquivo deve ser criado dentro do diret√≥rio config, junto ao arquivo bootstrap.php.\nLogo no in√≠cio importaremos o nosso arquivo de configura√ß√£o, que acabamos de cirar.\n1 2 3 \u0026lt;?php require_once __DIR__.‚Äô/bootstrap.php‚Äô; Ap√≥s a importa√ß√£o vamos desde j√° registrar nossa primeira rota.\n1 2 3 4 5 \u0026lt;?php require_once __DIR__.‚Äô/bootstrap.php‚Äô; $app-\u0026gt;get(\u0026#39;/\u0026#39;, \u0026#39;App\\Controller\\AppController::welcomeAction\u0026#39;)-\u0026gt;bind(\u0026#39;home\u0026#39;); Vou descrever o que acabamos de codigicar.\nO primeiro par√¢metro, identifica a rota desejada, em nosso caso / (root).\nO segundo par√¢metro, estou apontando diretamente para o controller e a action que desejo que retorno os dados para esta rota.\nPor √∫ltimo defino que o nome desta rota ser√° ‚Äúhome‚Äù.\nNo Silex podemos tratar cada tipo de request de forma isolada, por exemplo:\nGET $app-\u0026gt;get(); POST $app-\u0026gt;post(); PUT *$app-\u0026gt;put(); DELETE $app-\u0026gt;delete(); Viram como √© f√°cil trabalhar com as request solicitadas pelo usu√°rio. üôÇ\nImplementa√ß√£o do AppController.php\nN√£o √© segredo nenhum que podemos utilizar o padr√£o MVC para desenvolvimento com PHP, e o Silex n√£o seria diferente, ainda melhor pois sendo ele um micro framework ele deixa a cargo do desenvolvedor essa tomada de decis√£o.\nVamos acessar o diret√≥rio src/App/Controller e em seguida criar o arqivo AppController.php\nAp√≥s a cria√ß√£o do nosso controller, vamos implementar sua estrutura b√°sica.`\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php namespace App\\Controller; use Silex\\Application; /** * @author Diego Brocanelli \u0026lt;contato@diegobrocanelli.com.br\u0026gt; */ class AppController { } Primeiro definimos nossa namespace, e caso esteja com d√∫vida, n√≥s configuramos o autoloder do composer para gerenciar nosso m√≥dulo App, por isso podemos definir tranquilamente nossa namespace.\nEu importei o componente Silex\\Application, pois ele ser√° consumido pelo m√©todo de boas vindas.\nImplementa√ß√£o do m√©todo welcomeAction\nDevemos implementar o m√©todo respons√°vel por retornar as boas vindas quando o usu√°rio acessar nosso skeleton.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;?php namespace App\\Controller; use Silex\\Application; /** * @author Diego Brocanelli \u0026lt;contato@diegobrocanelli.com.br\u0026gt; */ class AppController { /** * Render welcome view. * * @param \u0026amp;nbsp;Application $app Silex\\Application * @return Twig_Environment */ public function welcomeAction(Application $app) { return \u0026#39;Hello World!\u0026#39;; } } Como podemos analisar, o m√©todo apenas retorno a string ‚ÄòHello World!‚Äô, e de fato por enquanto √© o que desejamos.\nImplementa√ß√£o do index.php\nOk, implementamos nossas configura√ß√µes, a rota e nosso controller o que devemos fazer agora?\nDevemos¬†implementar o arquivo index.php, onde todo ‚Äúmambo jambo‚Äù do Silex ir√° ocorrer.\nDevemos criar o arquivo index.php dentro do diret√≥rio public, contendo a seguinte estrutura.\n1 2 3 4 5 \u0026lt;?php require_once __DIR__.‚Äô/../config/routes.php‚Äô; $app-\u0026gt;run(); Aqui foi realizado a importa√ß√£o das configura√ß√µes, no caso importamos as rotas que por sua vez consome o bootstrap.php\nE o m√©todo run() √© o respons√°vel por iniciar nossa aplica√ß√£o, ele ‚Äúliga o motor‚Äù para que o silex entre em a√ß√£o.\nApresenta√ß√£o do resultado\nVamos fazer uso do servidor embutido do PHP, para isso devemos acessar o diret√≥rio raiz do nosso projeto e executar o seguinte comando.\n1 php -S localhost:8080 -t public public/index.php Como podemos notar, toda a parte de rotas da nossa aplica√ß√£o foi facilmente implementada utilizando o silex, o que com certeza √© um alivio de carga de desenvolvimento monstruoso, O Silex √© muito extens√≠vel e tamb√©m podemos utilizar componentes de outros frameworks para assim montar a estrutura ideal do seu projeto. Como por exemplo a engine de templates Twig sendo uma excelente escolha para trabalharmos com nossas estruturas HTML.\nUtilizando o¬†Twig\nComo dito anteriormente o Twiw √© um motor de renderiza√ß√£o de templates r√°pido, seguro e flex√≠vel. Eu particularmente acho a melhor engine para ser utilizada.\nPara podermos utilizar esse componente antes devemos alterar nosso arquivo composer.json, para isso devemos incluir no require as depend√™ncias:\n1 \u0026#34;symfony/twig-bridge\u0026#34;: \u0026#34;~2.3\u0026#34; Este componente √© um provider, e o que seria um provider?\nDe acordo com a pr√≥pria documenta√ß√£o do Silex:\n‚ÄúProviders allow the developer to reuse parts of an application into another one. Silex provides two types of providers defined by two interfaces: ServiceProviderInterface for services and ControllerProviderInterface for controllers.‚Äù\nTradu√ß√£o livre\n‚ÄúProviders permitem que o desenvolvedor reutilizar partes de uma aplica√ß√£o para outra. Silex fornece dois tipos de providers definidos por duas interfaces: ServiceProviderInterface para camada de servi√ßos e ControllerProviderInterface para camada dos controladores.‚Äù\nAp√≥s altera√ß√£o do composer.json o mesmo ficar√° da seguinte maneira\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 { \u0026#34;name\u0026#34;: \u0026#34;Diego-Brocanelli/silex_skeleton_application\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;A Silex Skeleton application, for references in blog post.\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;MIT\u0026#34;, \u0026#34;authors\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Diego Brocanelli\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;contato@diegobrocanelli.com.br\u0026#34; } ], \u0026#34;minimum-stability\u0026#34;: \u0026#34;dev\u0026#34;, \u0026#34;require\u0026#34;: { \u0026#34;php\u0026#34;: \u0026#34;\u0026gt;=5.3.3\u0026#34;, \u0026#34;silex/silex\u0026#34;: \u0026#34;~1.0\u0026#34;, \u0026#34;symfony/twig-bridge\u0026#34;: \u0026#34;~2.3\u0026#34; }, \u0026#34;autoload\u0026#34;: { \u0026#34;psr-4\u0026#34;: { \u0026#34;App\\\\\u0026#34;: \u0026#34;src/App/\u0026#34; } } } Agora bata acessarmos novamente o diret√≥rio do nosso projeto e executarmos o seguinte comando.\n1 composer update Cria√ß√£o da estrutura de diret√≥rios para utilizar o twig.\nDevemos criar o diret√≥rio templates na raiz do projeto, para que possamos armazenar nossos arquivos das nossa view.\nCria√ß√£o do layout.html\nDentro do diret√≥rio templates devemos criar o arquivo layout.html e inserir a seguinte estrutura interna.\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;pt_BR\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Silex Skeleton\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; {% block content %} {% endblock %} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Note que estou utilizando comandos do Twig dentro do c√≥digo HTML onde definimos o bloco content, para a exibi√ß√£o do nosso conte√∫do para o usu√°rio.\nCria√ß√£o da view welcome.html\nDentro do diret√≥rio templates devemos criar o arquivo welcome.html e inserir a seguinte estrutura interna.\n1 2 3 4 5 {% extends \u0026#34;layout.html\u0026#34; %} {% block content %} \u0026lt;h1\u0026gt;{{content}}\u0026lt;/h1\u0026gt; {% endblock %} Uma breve explica√ß√£o, logo no in√≠cio do arquivos n√≥s estendemos o layout desejado e em seguida inclu√≠mos o bloco content, onde far√° liga√ß√£o com sua referencia no layout. Em resumo o texto do controller ser√° exibido nesta view que utiliza nosso layout.\nMas apenas isso n√£o √© suficiente para que nosso projeto funcione como desejamos, devemos configurar nosso twig service provider, e como √© uma configura√ß√£o global vamos implementar no arquivo bootstrap.php¬†Inclu√≠mos nossa depend√™ncia em nosso arquivo.\n1 use Silex\\Provider\\TwigServiceProvider; Em seguida registramos nosso provider\n1 2 3 4 //Configuration TwigServiceProvider $app-\u0026gt;register(new TwigServiceProvider(), array( \u0026#39;twig.path\u0026#39; =\u0026gt; __DIR__.\u0026#39;/../templates\u0026#39;, )); Note que passamos como segundo par√¢metro o local onde nossos templates se encontram.\nAgora devemos incluir o Twig em nosso app.\n1 2 3 $app[\u0026#39;twig\u0026#39;] = $app-\u0026gt;share($app-\u0026gt;extend(\u0026#39;twig\u0026#39;, function ($twig, $app) { return $twig; })); Ap√≥s nossas altera√ß√µes o arquivo bootstrap.php deve ficar semelhante ao demonstrado abaixo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;?php require_once __DIR__.\u0026#39;/../vendor/autoload.php\u0026#39;; use Silex\\Application; use Silex\\Provider\\TwigServiceProvider; $app = new Application(); //Configuration TwigServiceProvider $app-\u0026gt;register(new TwigServiceProvider(), array( \u0026#39;twig.path\u0026#39; =\u0026gt; __DIR__.\u0026#39;/../templates\u0026#39;, )); $app[\u0026#39;twig\u0026#39;] = $app-\u0026gt;share($app-\u0026gt;extend(\u0026#39;twig\u0026#39;, function ($twig, $app) { return $twig; })); $app[\u0026#39;debug\u0026#39;] = true; Apresenta√ß√£o dos resultados\nAp√≥s a realiza√ß√£o das etapas acima estamos prontos para visualizar nosso skeleton em pleno funcionamento, vamos executar o servidor embutido novamente para analisarmos o resultado.\n1 php -S localhost:8080 -t public public/index.php E pronto, temos um skeleton application para construirmos nossas aplica√ß√µes utilizando o micro framework Silex, viram como √© muito simples o seu uso. Claro que o framework disp√µem de uma vasta gama de recursos e que cabe an√°lise do que √© necess√°rio para sua aplica√ß√£o, porem o b√°sico para o start est√° pronto üôÇ\nPr√≥ximos passos\nAbaixo est√£o listados os pr√≥ximos passos que iremos executar para aprimorar nosso skeleton, deixando ele ainda mais fortalecido.\nTeste Unit√°rios Em um pr√≥ximo post irei implementar toda a estrutura que permitira nosso skeleton suportar e executar testes unit√°rios com PHPUnit. Log do sistema Em um pr√≥ximo post irei implementar toda a estrutura que permitira nosso skeleton suportar e executar logs no sistema com o Monolog. Caso tenham duvidas ou sugest√µes deixem nos coment√°rios ou acessem o reposit√≥rio no GitHub silex_skeleton_application.\nEspero que tenham gostado e que tenha ajudado a iniciar ou compreender melhor o fascinante framework Silex.\nAt√© a pr√≥xima pessoal!\n","permalink":"https://diegobrocanelli.com.br/php/construindo-um-silex-skeleton-application/","summary":"Ol√° pessoal tudo bem?\nIrei construir um skeleton application utilizando o micro framework Silex. Este micro framework √© irm√£o do Symfony framework full stack e ambos os projetos s√£o mantidos pela comunidade PHP e a empresa SensioLabs empresa fundada pelo Fabien Potencier e criador de ambos frameworks citados acima.\nO Silex tem como base o Symfony e Pimple e foi¬†inspirado pelo Sinatra¬†um framework Ruby. Tendo como foco a simplicidade no desenvolvimento de aplica√ß√µes.","title":"Construindo um Silex Skeleton Application"},{"content":"Ol√° pessoal tudo bem?\nHoje temos diversas ferramentas que nos auxiliam em nosso dia a dia, para que tarefas repetitivas sejam realizadas de formas mais pr√°ticas e eficientes. Dito isso¬†trago uma ferramenta (que n√£o √© nova) porem que ir√° ajudar com certeza, poupando muito tempo no seu dia.\nO nome desta ferramenta √© PHP CodeSniffer, e sua finalidade √© analisar os padr√µes em seu c√≥digo, auxiliando na qualidade do c√≥digo produzido.\nPodemos acessar a ferramenta em seu site, ou seu reposit√≥rio no GitHub.\nInstala√ß√£o Requerido PHP 5.1.2 ou superior (Pelo amor de Deus, se voc√™ usa uma vers√£o inferior, corra e atualize o seu PHP AGORA!!!).\nPodemos obter o PHP CodeSniffer de diversas maneiras, sendo:\nURL 1 curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar PEAR 1 pear install PHP_CodeSniffer Composer 1 composer global require \u0026#34;squizlabs/php_codesniffer=*\u0026#34; Para essa demonstra√ß√£o irei utilizar o CURL para obter o arquivo .phar. A¬†estrutura de diret√≥rio e arquivo ser√° a seguinte:\nApp MyClass.php phpcs.phar Abaixo vemos a estrutura de nossa classe:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \u0026lt;?php class MyClass { /** * Username. * * @var [type] */ private $name; /** * Set username * * @param string $name username */ public function setName($name) { if ($name) { $name = trim($name); $name = strip_tags($name); } $this-\u0026gt;name = $name; } /** * Get username. * * @return string */ public function getName() { return $this-\u0026gt;name; } } Como podemos notar, estamos infringindo diversas regras da PSR nesta pequena classe, agora imagine analisar 5, 9¬†ou 20¬†classes para verificar se algum programador n√£o deixou escapar nada.\nPara realizar o processo de scan, devemos acessar o diret√≥rio onde est√° contido as classes que deseja analisar.\nAp√≥s acessar o diret√≥rio devemos executar o seguinte comando.\n1 php phpcs.phar --standard=PSR2 MyClass.php Ap√≥s a execu√ß√£o do comando ser√° exibido o resultado da an√°lise:\nNo resultado podemos analisar:\nQuantidade de erros Encontrados. Primeira coluna: A linha onde o erro se encontra. Segunda coluna: Mensagem de ERRO. Terceira coluna: A descri√ß√£o do erro encontrado. E no final, o tempo decorrido da an√°lise e o total de mem√≥ria utilizada. Ok, descobri o erro e agora? Voc√™ deve corrigir os erros!\nSim isso √© √≥bvio de se ler, porem na pr√°tica √© muito comum desenvolvedores jogarem para debaixo do tapete toda a sujeira encontrada (ou produzida). E esta atitude s√≥ gera mais trabalho, siga a lei do escoteiro ‚ÄúDeixe o local melhor do que voc√™ o encontrou‚Äù, sim isso d√° trabalho, porem a recompensa √© certa, pois na pr√≥xima vez o esfor√ßo e as dores de cabe√ßa ser√£o menores.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \u0026lt;?php namespace App\\Test; class MyClass { /** * Username. * @var [type] */ private $name; /** * Set username * @param string $name username */ public function setName($name) { if ($name) { $name = trim($name); $name = strip_tags($name); } $this-\u0026gt;name = $name; } /** * Get username. * @return string */ public function getName() { return $this-\u0026gt;name; } } Ap√≥s corrigirmos o que nos foi sugerido, vamos novamente executar a an√°lise para garantir total corre√ß√£o de erros.\nViram como o processo facilita nossa vida, claro que o que demonstrei para voc√™s √© apenas uma pequena parte do potencial desta ferramenta, caso queiram se aprofundar acessem a documenta√ß√£o.\nVou descrever algumas op√ß√µes de configura√ß√£o bem interessantes para utilizar no processo de an√°lise.\nGerar um relat√≥rio sint√©tico Devemos utilizar o complemento ‚Äìreport=summary\n1 php phpcs.phar --report=summary --standard=PSR2 MyClass.php Acompanhamento do processo Devemos utilizar o comando -p e assim para cada arquivo com erro ser√° exibido o caractere ‚ÄúE‚Äù no terminal.\n1 php phpcs.phar -p --standard=PSR2 MyClass.php Especificar o code standard desejado Sim podemos especificar qual o padr√£o o scan deve analisar, com isso dispomos das seguintes op√ß√µes:\nPEAR (default); PHPCS; PSR1; PSR2; Squiz; Zend. Recomendo a an√°lise utilizando as op√ß√µes PSR1 e PSR2, pois naturalmente seguem os padr√µes do PHP-FIG.\nApesar de sua f√°cil utiliza√ß√£o, e aparentemente quase nenhum requerimento, analise e valide o ganho de produtividade que a ferramenta ir√° lhe proporcionar. Pois podemos realizar analises r√°pidas que nos orientam no processo de codifica√ß√£o, melhorando a qualidade do nosso c√≥digo.\nConvido a todos que testem e deixem nos coment√°rios o que acharam da ferramenta.\nUm grande abra√ßo a todos e at√© a pr√≥xima.\n","permalink":"https://diegobrocanelli.com.br/php/php-codesniffer/","summary":"Ol√° pessoal tudo bem?\nHoje temos diversas ferramentas que nos auxiliam em nosso dia a dia, para que tarefas repetitivas sejam realizadas de formas mais pr√°ticas e eficientes. Dito isso¬†trago uma ferramenta (que n√£o √© nova) porem que ir√° ajudar com certeza, poupando muito tempo no seu dia.\nO nome desta ferramenta √© PHP CodeSniffer, e sua finalidade √© analisar os padr√µes em seu c√≥digo, auxiliando na qualidade do c√≥digo produzido.","title":"PHP CodeSniffer"},{"content":"Fala pessoal tudo tranquilo?\nQuem nunca se deparou com a necessidade de documentar o sistema que est√° desenvolvendo, para que outros programadores consigam realizar novas implementa√ß√µes, corre√ß√µes ou at√© mesmo consumir a API.\nSabemos que a documenta√ß√£o √© algo essencial e indispens√°vel no desenvolvimento de softwares para garantir a longevidade de nossos sistemas. O PHP n√£o fica para tr√°s neste quesito, atualmente no PHP-FIG¬†est√° em processo de ‚ÄúDraft‚Äù a PSR-5¬†visando um padr√£o para PHPDoc para comunidade PHP. Este post n√£o visa analisar nem menos discutir sobre a PSR, e sim demostrar a cria√ß√£o de forma simples a documenta√ß√£o do nosso sistema.\nMencionado isso, Show me the code!!!\nPara darmos in√≠cio com o exemplo,¬†vamos construir a estrutura da nossa aplica√ß√£o, tendo a seguinte estrutura:\ndocs config.php sami.phar src App Controller ProductController.php Model Product.php Service ProductList.php Lembrando que tanto a estrutura, classes e c√≥digos s√£o meramente ilustrativo, para servir de base para nossa documenta√ß√£o. Com isso pe√ßo que n√£o se apegue a nomes e a√ß√µes, pois n√£o √© este o foco do post.\nContinuando com nosso exemplo, devemos acessar o reposit√≥rio do projeto Sami no GitHub.\nInstala√ß√£o Devemos adquirir o arquivo .phar, e para isso temos duas possibilidades, sendo:\nPela linha de comando, utilizando CURL.\n1 curl -O http://get.sensiolabs.org/sami.phar Baixando diretamente pelo link o arquivo sami.phar.\nAp√≥s a realiza√ß√£o do download, vamos implementar o conte√∫do¬†do nosso arquivo de configura√ß√£o config.php, localizado dentro do diret√≥rio docs.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;?php use Sami\\Sami; // Componente desenvolvido pela Sensiolabs, para encontrar arquivos e diret√≥rios http://symfony.com/doc/current/components/finder.html use Symfony\\Component\\Finder\\Finder; $iterator = Finder::create() -\u0026gt;files() -\u0026gt;name(\u0026#39;*.php\u0026#39;)// todos os arquivos .php -\u0026gt;in(__DIR__.\u0026#39;/../src\u0026#39;); // local onde dever√° realizar a verifica√ß√£o. $configuration = [ \u0026#39;theme\u0026#39; =\u0026gt; \u0026#39;default\u0026#39;, \u0026#39;title\u0026#39; =\u0026gt; \u0026#39;Test Sami API\u0026#39;, // T√≠tulo que ser√° exibido na view HTML \u0026#39;build_dir\u0026#39; =\u0026gt; __DIR__.\u0026#39;/build\u0026#39;, \u0026#39;cache_dir\u0026#39; =\u0026gt; __DIR__.\u0026#39;/cache\u0026#39;, ]; return new Sami($iterator, $configuration); // O arquivo DEVE retornar uma instancia de Sami. Ap√≥s as configura√ß√µes serem realizadas, devemos acessar o diret√≥rio do nosso projeto pelo terminal.\nAgora basta utilizar o seguinte comando para gerar a documenta√ß√£o.\n1 php docs/sami.phar update docs/config.php Ap√≥s executar o comando ser√° exibido o seguinte resultado.\nVamos acessar o diret√≥rio dosc/build e abrir o arquivo index.html.\nPronto, foi gerado a documenta√ß√£o do nosso sistema, de forma muito simples.\nAgora cabe alguns apontamentos\nN√≥s utilizamos o comando update e com isso ele gera automaticamente o parse e o render da nossa documenta√ß√£o, porem podemos fazer estes dois processo de forma isolada.\nPara gerar somente o parser, devemos executar o comando parser.\n1 php docs/sami.phar parser docs/config.php E para gerar o render, devemos utilizar o comando render.\n1 php docs/sami.phar render docs/config.php Muito simples e √≥bvio hehehe.\nO que voc√™ pode estar se perguntando √©, ‚ÄúMas Diego, n√≥s geramos a documenta√ß√£o de uma pequenina aplica√ß√£o, ser√° que aquenta gerar a documenta√ß√£o de uma aplica√ß√£o de grande porte?‚Äù.\nMinha resposta √©, SIM!!! E para lhe provar basta voc√™¬†acessar a documenta√ß√£o da API do Symfony.\nEsta demonstra√ß√£o apenas arranhou as possibilidades de uso da ferramenta, podendo por exemplo¬†criar layaut.\nCaso tenham alguma d√∫vida no c√≥digo podem acessar o reposit√≥rio no GitHub deste post.\nEspero que tenham gostado, at√© a pr√≥xima! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/gerando-documentacao-do-seu-sistema-utilizando-a-api-sami/","summary":"Fala pessoal tudo tranquilo?\nQuem nunca se deparou com a necessidade de documentar o sistema que est√° desenvolvendo, para que outros programadores consigam realizar novas implementa√ß√µes, corre√ß√µes ou at√© mesmo consumir a API.\nSabemos que a documenta√ß√£o √© algo essencial e indispens√°vel no desenvolvimento de softwares para garantir a longevidade de nossos sistemas. O PHP n√£o fica para tr√°s neste quesito, atualmente no PHP-FIG¬†est√° em processo de ‚ÄúDraft‚Äù a PSR-5¬†visando um padr√£o para PHPDoc para comunidade PHP.","title":"Gerando documenta√ß√£o do seu sistema utilizando a API SAMI"},{"content":"Uma das tarefas mais rotineiras na vida de um programador √© manter-se atualizado no mundo da tecnologia, e para isso acabo consumindo diversas fontes de informa√ß√µes.\nVou descrever algumas das fontes que acesso com frequ√™ncia para estudar, ou at√© mesmo para relaxar um pouco.\nYoutube A cada dia consumo mais conte√∫do no Youtube do que TV, j√° chegando ao ponto de n√£o ligar a TV durante a semana toda. Streaming de video √© fant√°stico pois est√° dispon√≠vel quando voc√™ disp√µem de tempo, coisa que a TV n√£o oferece, pois temos que ficar amarrados em sua frente para consumir seu conte√∫do.\nAqui v√£o alguns canais que acompanho.\nhttps://www.youtube.com/user/curtinhasdotnet https://www.youtube.com/channel/UCmAspVgtNWkU6UE7gsdTUYw https://www.youtube.com/channel/UCo7EHzKF2zDFWszw7Dg4mPw https://www.youtube.com/channel/UCeQiImT1krk6lUiQmJp3m6Q https://www.youtube.com/channel/UCzGwT9ibxjOlUvYSvI0HoHw https://www.youtube.com/channel/UCDstJJcARfj3g5y_XLa_QpQ https://www.youtube.com/channel/UCrWvhVmt0Qac3HgsjQK62FQ https://www.youtube.com/channel/UCsMR_iixPPlYl6QysW3kkyQ https://www.youtube.com/channel/UCEf5U1dB5a2e2S-XUlnhxS https://www.youtube.com/channel/UCY15JXhn7FtnkpgJPHdmBkw https://www.youtube.com/channel/UCZSl6chVJgpbhxjYbijnd0Q https://www.youtube.com/channel/UC1PUtdA_NktdtmRpF_UGG_w https://www.youtube.com/channel/UCRPBNcEICRhlKb1IdKfiCxw https://www.youtube.com/channel/UCNTX_S7zq9h_MKhPljMIoYw https://www.youtube.com/channel/UCJnKVGmXRXrH49Tvrx5X0Sw https://www.youtube.com/channel/UCqQn92noBhY9VKQy4xCHPsg https://www.youtube.com/channel/UCCbD39MVnMsTLGxsHLnOKlg https://www.youtube.com/channel/UCwnerxkj3a2UmMpE-m3wEv https://www.youtube.com/channel/UCjj5wcw49eACHL0rZwzDJCg https://www.youtube.com/channel/UCepVwe7RrxE7Zv3kytUfcKw https://www.youtube.com/channel/UCX06sx2WWYGny7b3XDUyFCQ https://www.youtube.com/channel/UCUEzH08rDNBfljD9PGVZujg https://www.youtube.com/user/phpnwconference/fee https://www.youtube.com/channel/UCjllj-z2fliBICAUgZTxJm https://www.youtube.com/channel/UCNdrk5t7m7YfejV6K7NBNNw https://www.youtube.com/channel/UCVEa_x1n5FwWrxH00MrDPzQ https://www.youtube.com/channel/UCGjx62365UJ8XTWU_5GZC- https://www.youtube.com/channel/UCkqOofjb7nl6V8vXrIbGtiQ https://www.youtube.com/channel/UCTEAZTTJ69yatuMd70k2Wow https://www.youtube.com/channel/UC9YYs4_5rJt2L9-hnUOWhb https://www.youtube.com/channel/UC4TH5uR_qphbj6l17PruLCQ Twitter Utilizo praticamente como ferramenta de trabalho, onde consigo me atualizar de forma ‚Äúimediata‚Äù, as novidades\nhttps://twitter.com/devspace_ https://twitter.com/planrockr https://twitter.com/EduardoPiresBR https://twitter.com/felipenmoura https://twitter.com/PHPRoundtable https://twitter.com/devnaestrada https://twitter.com/phpestene https://twitter.com/Outrora_ https://twitter.com/blogdiolinux https://twitter.com/SecurityCastBR https://twitter.com/brjavaman https://twitter.com/erichideki https://twitter.com/MateadaPodcast https://twitter.com/FetchPHP https://twitter.com/dianaarnos https://twitter.com/andrebaltieri https://twitter.com/phptodayorg https://twitter.com/pmjones https://twitter.com/rodrigobranas https://twitter.com/mauricioaniche https://twitter.com/pythonbrasil https://twitter.com/carinaas https://twitter.com/agenciamateada https://twitter.com/ramalhoorg https://twitter.com/talitapagani https://twitter.com/SecuringPHP https://twitter.com/casadocodigo https://twitter.com/erikaheidi https://twitter.com/jaydson https://twitter.com/ale_borba https://twitter.com/phparch https://twitter.com/nomadphp https://twitter.com/symfony https://twitter.com/Ocramius https://twitter.com/dev_hell https://twitter.com/lornajane https://twitter.com/ircmaxell https://twitter.com/phpweeklynews https://twitter.com/SensioLabsDE https://twitter.com/wcrivelini https://twitter.com/danielfilho https://twitter.com/zofepod https://twitter.com/AkitaOnRails https://twitter.com/coderockr https://twitter.com/pichiliani https://twitter.com/vedovelli https://twitter.com/PHPTownHall Podcasts Sem d√∫vida uma das m√≠dias que mais consumo hoje em dia, pois a facilidade de consumo √© enorme, pois √© s√≥ jogar os epis√≥dios no smartphone e ouvir. Hoje uso o APP BeyondPod onde facilita muito gerenciar os feeds e os epis√≥dios.\nhttps://www.youtube.com/channel/UC8EUZ3gYTxJi-gr4azFJGYA http://devcommunitycast.com.br/ http://devnaestrada.com.br/ http://hackncast.org/ hipsters.tech https://blog.mateada.com/podcast/ https://jovemnerd.com.br/categoria/nerdcast/ http://www.podebug.com/ http://www.redegeek.com.br/ultrageek/ http://zofe.com.br/ http://foocast.io/ https://phptownhall.com/ http://elephantintheroom.io/ Blogs http://www.sitepoint.com/ http://techcrunch.com/ https://news.ycombinator.com/ Mail List http://asemanaphp.com.br/ http://www.phpweekly.com/ https://braziljs.org/#weekly Livrarias https://www.casadocodigo.com.br http://novatec.com.br/ https://leanpub.com http://www.oreilly.com/ Amigos/Comunidade SIM!!!¬†Sem sombra de d√∫vidas compartilhar conhecimento entre colegas de trabalho ou com a comunidade √© uma excelente forma de se manter atualizado, pois com certeza seu amigo tem algo a compartilhar que voc√™ n√£o sabia. Ent√£o n√£o tenha medo nem vergonha, compartilhe conhecimento e esteja sempre aberto para aprender novos assuntos.\nO que saliento aqui √©, N√ÉO estou ganhando um centavo para mencionar nenhum link aqui, apenas listei alguns links que uso para me atualizar.\nCaso tenha algum link legal compartilhe, deixe um coment√°rio, diga o que achou dos links e vamos bater um papo¬†para assim agregar mais conhecimento.\nEspero que gostem dos links, at√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/php/como-manter-se-atualizado/","summary":"Uma das tarefas mais rotineiras na vida de um programador √© manter-se atualizado no mundo da tecnologia, e para isso acabo consumindo diversas fontes de informa√ß√µes.\nVou descrever algumas das fontes que acesso com frequ√™ncia para estudar, ou at√© mesmo para relaxar um pouco.\nYoutube A cada dia consumo mais conte√∫do no Youtube do que TV, j√° chegando ao ponto de n√£o ligar a TV durante a semana toda. Streaming de video √© fant√°stico pois est√° dispon√≠vel quando voc√™ disp√µem de tempo, coisa que a TV n√£o oferece, pois temos que ficar amarrados em sua frente para consumir seu conte√∫do.","title":"Como manter-se atualizado"},{"content":"Como bem sabemos o PHP tem uma tipagem fraca, e ele continua com esta caracter√≠stica. Porem na nova vers√£o PHP 7 lan√ßada dia 03/12/2015, trazendo novos tipos para o Scalar Type declarations.\nOs novos tipos implementados s√£o:\nint; float; string; bool. Temos dois tipos de declara√ß√£o, a coercive ( sendo default) e a strict (rigorosa), para acessar a strict √© necess√°rio informar no incio do arquivo PHP. Para isso devemos utilizar a fun√ß√£o declare() para definir diretivas de execu√ß√£o para um bloco de c√≥digo.\nExemplo: 1 2 3 \u0026lt;?php declare(strict_types=1); Pois bem, tudo muito bonito porem show me the code!!!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u0026lt;?php declare(strict_types=1); class Calculator { /** * Performs the sum between two values * * @param float $value1 value sum * @param float $value2 value sum * * @return float resulting of sum */ public function sumCurrency(float $value1, float $value2) { $result = $value1 + $value2; return $result; } } $calculator = new calculator(); echo $calculator-\u0026gt;sumCurrency(15.5, 22.1); O resultado ser√° 37.6\nAcesse aqui o reposit√≥rio do GitHub.\nO exemplo visto acima √© uma implementa√ß√£o b√°sica e did√°tica, vamos realizar agora uma implementa√ß√£o um pouco mais elaborada.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 \u0026lt;?php declare(strict_types=1); class Pdf { /** * paper orientation * * @var string */ protected $paper; /** * Font size * * @var int */ protected $fontSize; /** * Paragraph * * @var string */ protected $paragraph; /** * Configuration document PDF. * * @param string $paper paper orientation * @param int $fontSize document font size * @param string $paragraph text of document */ public function __construct(string $paper, int $fontSize, string $paragraph) { $this-\u0026gt;paper = $paper; $this-\u0026gt;fontSize = $fontSize; $this-\u0026gt;paragraph = $paragraph; } /** * Return document configuration. * * @return array */ public function getDocumentConfiguration() { return [ \u0026#39;paper\u0026#39; =\u0026gt; $this-\u0026gt;paper, \u0026#39;fontSize\u0026#39; =\u0026gt; $this-\u0026gt;fontSize, \u0026#39;paragraph\u0026#39; =\u0026gt; $this-\u0026gt;paragraph, ]; } //other implementations... } $documentData = \u0026#39;Lorem ipsum dolor sit amet\u0026#39;; $pdf = new Pdf(\u0026#39;a4\u0026#39;, 12, $documentData); var_dump($pdf-\u0026gt;getDocumentConfiguration()); /** * Output: * * array(3) { * [\u0026#34;paper\u0026#34;] =\u0026gt; string(2) \u0026#34;a4\u0026#34; * [\u0026#34;fontSize\u0026#34;] =\u0026gt; int(12) * [\u0026#34;paragraph\u0026#34;] =\u0026gt; string(26) \u0026#34;Lorem ipsum dolor sit amet\u0026#34; * } */ Como resultado, teremos um array contendo as configura√ß√µes do documento.\nCaso seja passado algum par√¢metro que n√£o corresponda ao desejado, como por exemplo $fontSize = ‚Äô12‚Äô, o PHP retornar√° um erro fatal.\n1 // Output: PHP Fatal error: Uncaught TypeError: Argument 2 passed to Pdf::__construct() must be of the type integer, string given. O que nos garante que sejam passados os tipos desejados para o m√©todo.\nOk, mas quais s√£o as vantagens de usar este novo recurso?\nSimples, dentre as vantagens temos:\nMaior qualidade de c√≥digo; Melhor estrutura para implementa√ß√£o de testes; Melhor legibilidade; Melhor defini√ß√£o de atributos de m√©todos; Eliminamos qualquer estrutura de valida√ß√£o e tipo de par√¢metro recebido. Acesse aqui o reposit√≥rio do GitHub\nBom, √© isso pessoal espero que voc√™s estejam t√£o empolgados quanto eu para utilizar os novos recursos do PHP 7. Dentre em breve vou lan√ßar mais 3 posts para abordarmos mais novas features.\nUm grande abra√ßo e at√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/php/php-7-scalar-type/","summary":"Como bem sabemos o PHP tem uma tipagem fraca, e ele continua com esta caracter√≠stica. Porem na nova vers√£o PHP 7 lan√ßada dia 03/12/2015, trazendo novos tipos para o Scalar Type declarations.\nOs novos tipos implementados s√£o:\nint; float; string; bool. Temos dois tipos de declara√ß√£o, a coercive ( sendo default) e a strict (rigorosa), para acessar a strict √© necess√°rio informar no incio do arquivo PHP. Para isso devemos utilizar a fun√ß√£o declare() para definir diretivas de execu√ß√£o para um bloco de c√≥digo.","title":"PHP 7 ‚Äì Scalar Type"},{"content":"Um dos maiores estigmas do PHP √© afirmar que ele √© bagun√ßado e cheios de gambiarras, onde os projetos desenvolvidos com ele s√£o ruins por n√£o seguirem padr√µes. Pois bem, hoje sinto informar para quem ainda tem essa mentalidade atrasada, que o PHP disp√µem do PHP-FIG (PHP Framework Interop Group), grupo mantido pela comunidade PHP.\nDe acordo com o pr√≥prio site eles se definem como, ‚ÄúUm grupo de projetos PHP estabelecidos, cujo objetivo √© falar sobre as semelhan√ßas entre os projetos encontrando maneiras comuns para trabalhar em conjunto‚Äù\nSua funda√ß√£o ocorreu em 2009 inicialmente com 5 membros e hoje disp√µem de cerca de 44 membros. Dentre os membros temos Guilherme Blanco (@guilhermeblanco) representante do projeto Doctrine, excelente profissional que traz grande credibilidade para a comunidade PHP do Brasil.\nCom esta iniciativa podemos afirmar que o PHP disp√µe de uma lista de padr√µes j√° estabelecidas onde os frameworks mais utilizados do mercado como Zend Framework 2, Symfony 2, Slim Framework, Laravel, Zend Expressive entre outros adotam estes padr√µes em suas arquiteturas. Trazendo com isso uma gama de benef√≠cios enorme para a comunidade PHP.\nTodo este trabalho do PHP FIG deu origem as PSR‚Äôs (PHP Standards Recommendation) onde s√£o as recomenda√ß√µes de padr√µes estabelecidas e seguidas pelos frameworks. Visando melhorar os aspectos comuns no processo de desenvolvimento.\nPSR‚Äôs ‚Äì ACCEPTED PSR ‚Äì 1 : Basic Coding Standard PSR ‚Äì 3 : Logger Interface PSR ‚Äì 4 : Autoloading Standard PSR ‚Äì 6 : Caching Interface PSR ‚Äì 7 : HTTP Message Interface PSR ‚Äì 11 : Container Interface PSR ‚Äì 12 : Extended Coding Style Guide PSR ‚Äì 13 : Hypermedia Links PSR ‚Äì 14 : Event Dispatcher PSR ‚Äì 15 : HTTP Handlers PSR ‚Äì 16 : Simple Cache PSR ‚Äì 17 : HTTP Factories PSR ‚Äì 18 : HTTP Client PSR ‚Äì 20 : Clock PSR‚Äôs ‚Äì DRAFT PSR ‚Äì 5 : PHPDoc Standard PSR ‚Äì 19 : PHPDoc tags PSR ‚Äì 21 : Internationalization PSR ‚Äì 22 : Application Tracing PSR‚Äôs ‚Äì DEPRECATED PSR ‚Äì 0 : Autoloading Standard PSR ‚Äì 2 : Coding Style Guide N√£o √© meu objetivo descrever em detalhes cada PSR, pois o site do PHP FIG tem uma excelente documenta√ß√£o. E como podemos notar temos a nossa disposi√ß√£o uma lista de padr√µes que devemos utilizar em nosso dia a dia nos projetos em que estamos envolvidos.\nO que toda essas informa√ß√µes ir√£o me ajudar em meu dia a dia?\nSer√£o constru√≠dos aplica√ß√µes com maior qualidade de c√≥digo e de f√°cil manuten√ß√£o, pois como seguimos padr√µes de conhecimento geral, qualquer outro desenvolvedor PHP que realizar√° manuten√ß√µes ou novas implementa√ß√µes no projeto, onde ter√° maior facilidade em sua jornada.\nN√£o ir√° mais ocorrer aquelas discuss√µes sem sentido de ‚Äúa chave do if come√ßa na mesma linha‚Äù, ‚Äún√£o a chave do if come√ßa em uma nova linha‚Äù. Para tal eventualidade basta implementar o padr√£o e est√° tudo resolvido üôÇ sem maiores dores de cabe√ßa ou eventualidades.\nComo √© criado uma PSR? Workflow Roles: Editor O editor √© um membro altamente envolvido na gest√£o e acompanhamento de uma PSR, uma proposta n√£o ter√° mais do que 2 editores de uma vez. O editor √© respons√°vel por gerenciar o desenvolvimento da PSR, e acompanhar a lista de discuss√µes, deve coordenar os colaboradores e trabalhar em conjunto com o coordenador ao longo do processo de revis√£o. Caso o editor esteja ausente por mais de 60 dias sem nenhum tipo de comunicado pr√©vio, em seguida √© escolhido um novo editor para substitui-lo. Sponsor Qualquer PSR deve dispor de 2 membros votantes como sponsors (patrocinadores) para dar sequencia no andamento do desenvolvimento da PSR. Um sponsor n√£o necessariamente deve ser um editor, porem pode contribuir de forma normal ao desenvolvimento da PSR. Para que um sponsor torne-se um editor ele deve abdicar do cargo de sponsor da PSR enviando um e-mail a Maling List, onde ser√° encontrado um novo sponsor para substitui-lo, e somente ap√≥s este processo ele poder√° sair do projeto. Caso este processo ocorra em quanto uma vota√ß√£o estiver em curso, o mesmo √© invalidada at√© que um substituto tenha sido escolhido. Esta manobra √© adotada para que um √∫nico sponsor n√£o tome as decis√µes sozinho. Coordinator Um dos dois sponsors √© o coordenador, decis√£o tomada entre os coordenadores. Respons√°vel pelo processo de vota√ß√£o, acompanhando as datas de in√≠cio e t√©rminos de cada vota√ß√£o, os membros votantes e a contagem de votos necess√°rios. Enviam lembretes, conduzindo a vota√ß√£o, ao final do per√≠odo de vota√ß√£o eles contabilizam os votos e analisam se o qorum foi estabelecido, e se o pedido foi ou n√£o aceito. Note: C√≥pia e-mail de Paul M. Jones. Contributor: Qualquer membro que tenha contribu√≠do significativamente para a PSR, pode ser enviado uma solicita√ß√£o para adi√ß√£o de novo membro ao projeto, durante o per√≠odo de pre-draft ou draft. Em caso de disputa o editor ou coordenador s√£o respons√°veis para determinar se um membro √© qualificado para torna-se um colaborador. Stages Pre-draft √â neste est√°gio que se analisa o interesse da maioria do PHP FIG em prosseguir com a publica√ß√£o da PSR. Ocorrendo discuss√µes e an√°lises em cima do tema, podendo ser por meio de Mailing List ou IRC. Uma vez que foi determinado em seguir em frente, √© selecionado um editor e preparado um documento de proposta, que deve ser pulicado em um fork no reposit√≥rio oficial do PHP FIG. O conte√∫do deve ser inserido dentro do diret√≥rio /proposed contendo um nome simples. O editor deve ent√£o localizar os 2 sponsors que ser√£o respons√°veis pela PSR. Neste momento a proposta n√£o √© obrigatoriamente necess√°ria ser totalmente desenvolvida, contendo no m√≠nimo uma declara√ß√£o do problema a ser resolvido. √â realizado um processo de vota√ß√£o, seguindo o protocolo de vota√ß√£o. Em caso da vota√ß√£o ser positiva, a proposta passa para a etapa de draft, onde receber√° um n√∫mero PSR a partir do √∫ltimo PSR que j√° passou pelo voto de entrada. Draft Tem como objetivo, discutir e aprimorar a proposta at√© que esteja adequado para o processo de review. Nesta etapa o editor ou qualquer contribuinte pode realizar altera√ß√µes a qualquer momento por meio de pull request. Caso um editor ou coordenador estejam convencidos de que uma proposta alternativa seja superiro a original, o editor e da proposta original √© listado como contribuinte da proposta. Todo o processo deve ser documentado. Quando o editor e sponsors decidem que a proposta est√° pronta e toda a documenta√ß√£o est√° completa, √© realizado pelo coordenador a submiss√£o da proposta de review. Review Esta etapa tem como objetivo envolver a maior quantidade de membros do PHP ‚Äì FIG para se familiarizarem com a proposta e decidirem se est√° pronta para realizar uma vota√ß√£o de aceita√ß√£o, porem nenhum membro individual pode vetar uma proposta. Nesta etapa as altera√ß√µes se restringem somente a documenta√ß√£o, onde os sponsors devem realizar controle, estando proibido a interven√ß√£o dos sponsors no desenvolvimento da proposta. Caso alguma abordagem alternativa seja descoberta que ainda n√£o tenha sido listado, o coordenador deve abortar o review, a menos que o processo de vota√ß√£o para aceita√ß√£o tenha iniciado. Uma proposta deve permanecer no m√≠nimo 2 semanas em review, antes de realizar um voto ce aceita√ß√£o. Quando os editores concordam que a proposta est√° pronta para se tornar uma PSR, √© realizado um processo de voto de aceita√ß√£o. Accepted Quando a proposta √© aceita ela torna-se oficialmente uma PSR, onde √© movida de /proposed para /accepted por um membro com acesso ao GitHub e prefixado com seu n√∫mero de identifica√ß√£o. Meta Document Est√° etapa tem como objetivo fornecer uma vis√£o de alto n√≠vel de uma proposta para os eleitores.\nExecutive summary Contempla o resumo da proposta, com alguns exemplos simples. Why bother? Uma lista contendo os pontos positivos e negativos de se criar a PSR. O objetivo desta etapa √© convencer de que a proposta trar√° benef√≠cios se for criada. Scope Uma lista de objetivos e n√£o-objetivos que a PSR deve alcan√ßar. Approaches Descreve as decis√µes de design realizadas, onde deve ser listadas as implica√ß√µes positivas e negativas dessas decis√µes. Caso seja poss√≠vel inserir link para posts individuais relevantes da lista de discuss√µes. People Cont√©m os nomes dos membros envolvidos. Errata Usada para adicionar esclarecimentos sobre pontos controversos. Template Modelo de exemplo que podem ser utilizados para a constru√ß√£o da documenta√ß√£o. Politicas de licenciamento C√≥digo Todo c√≥digo PHP-FIG deve ser licenciado sob a licen√ßa MIT. Inclui qualquer arquivo PHP (incluindo classes, fun√ß√µes, interfaces e c√≥digo de procedimento), assim como exemplos, tutoriais, documentos e os pr√≥prios PSR‚Äôs. 2 .Documenta√ß√£o\nTodos os arquivos que n√£o sejam c√≥digos, devem ser licenciados como Creative Commons BY 3.0. Protocolo de vota√ß√£o A se√ß√£o de protocolo de vota√ß√£o, √© onde se encontra todas as regras para os processos de vota√ß√µes.\nConven√ß√µes de nomes da PSR Interfaces\nDeve conter o sufixo: por exemplo Psr\\Foo\\BarInterface. Classes abstratas\nDeve ser prefixado pelo Abstract: por exemplo Psr\\Foo\\AbstractBar; Traits\nDeve conter o sufixo Trait: por exemplo Psr\\Foo\\BarTrait; PSR-1, 4 e 12 devem ser seguidas.\nNamespace\nA namespace de vendor deve ser Psr. Deve conter um package em segundo n√≠vel a namespace Psr que abrange o c√≥digo. Composer package devem seguir o nome psr/package: exemplo psr/log. Meios de contatos PHP-FIG https://twitter.com/phpfi http://www.php-fig.org/irc/ https://github.com/php-fig https://groups.google.com/forum/?fromgroups#!forum/php-fig S√≥ o PHP disp√µem de padr√µes? De maneira alguma, cada linguagem segue seu guia de estilo, por exemplo Python¬†segue a PEP8. O Java disp√µem do code conventions.\nO que saliento aqui √© que um n√£o √© melhor que o outro. Onde o objetivo dos style guides √© fornecer base solida para padr√µes seja ela em qual linguagem for abordar para que desenvolvedores possam criar projetos onde outros desenvolvedores poder√£o realizar manuten√ß√µes e implementa√ß√µes sem ter que desvendar ‚Äúo padr√£o‚Äù criado pelo desenvolvedor no momento da cria√ß√£o da aplica√ß√£o.\nO estigma do sobrinho Desde sua cria√ß√£o o PHP tem seu objetivo bem claro, ser um recurso valioso no desenvolvimento web. Porem como √© uma linguagem de f√°cil aprendizagem, tornou-se comum que qualquer um que tenha acesso a um computador possa se aventurar no mundo do desenvolvimento com PHP.\nCom isso surgiram v√°rios ‚Äúcopiadores de c√≥digo‚Äù que se intitulavam desenvolvedores, e isso n√£o √© exclusividade do PHP, pois v√°rias outras linguagens sofrem deste mau, como por exemplo o javascript.\nPorem com o avan√ßo da linguagem hoje este cen√°rio est√° mudando, Elencar o PHP ‚Äì FIG e suas contribui√ß√µes para isso, pois o PHP √© uma linguagem altamente robusta sendo utilizados em projetos de grande porte como ecommerces, como exemplo posso listar o v√≠deo da palestra do Guilherme Blanco no Intercon PHP 2014 onde ele menciona os n√∫meros referente a uma aplica√ß√£o da empresa onde trabalha, tudo isso tendo como base PHP, os n√∫meros s√£o, 67 milh√µes de usu√°rios cadastrados no sistema e 12 mil requisi√ß√µes por segundo. N√£o √© utilizado Hack, HHVM ou qualquer outra sopa de letrinhas, √© utilizado PHP puro e simples. E saliento que isso foi a 2 anos onde n√£o t√≠nhamos a nossa disposi√ß√£o o \u0026lt;PHP 7 a sua mais nova vers√£o, onde temos demonstra√ß√µes do grande ganho de performance em rela√ß√£o a √∫ltima vers√£o (PHP 5.6), entre v√°rias outras melhorias.\nO que quero dizer com isso √©, que infelizmente o mercado de desenvolvimento de software sofre de um grande mau na minha opini√£o, que s√£o desenvolvedores que ficam exaltando sua linguagem de programa√ß√£o favorita e denegrindo a imagem de outras, fazendo piadinhas ou gritando afirma√ß√µes que s√£o obsoletas a anos.\nNenhuma linguagem de programa√ß√£o √© bala de prata, para cada cen√°rio devemos analisar o problema e escolher a ferramenta mais adequada para a solu√ß√£o.\nEspero ter ajudado com este post, onde meu objetivo de abrir os olhos para o que a comunidade PHP tem a sua disposi√ß√£o, que com certeza lhe ajudar√° muito. E que possamos a partir disso parar de ver o mercado de desenvolvimento como um campo de guerra entre linguagens de programa√ß√£o, pois hoje em dia √© extremamente comum encontrarmos desenvolvedores que domina mais de uma linguagem.\nEspero que tenham gostado e at√© a pr√≥xima pessoal! üôÇ\n","permalink":"https://diegobrocanelli.com.br/php/php-segue-padroes-sim/","summary":"Um dos maiores estigmas do PHP √© afirmar que ele √© bagun√ßado e cheios de gambiarras, onde os projetos desenvolvidos com ele s√£o ruins por n√£o seguirem padr√µes. Pois bem, hoje sinto informar para quem ainda tem essa mentalidade atrasada, que o PHP disp√µem do PHP-FIG (PHP Framework Interop Group), grupo mantido pela comunidade PHP.\nDe acordo com o pr√≥prio site eles se definem como, ‚ÄúUm grupo de projetos PHP estabelecidos, cujo objetivo √© falar sobre as semelhan√ßas entre os projetos encontrando maneiras comuns para trabalhar em conjunto‚Äù","title":"PHP segue padr√µes SIM!!!"},{"content":"Fala pessoal tudo certinho.\nTodos sabemos da grande capacidade e poder que o PHP disp√µem para o desenvolvimento web, porem o que muitos deixam escapar √© sua vasta lista de fun√ß√µes nativas que ele fornece.\nCom isso segue abaixo uma pequena demonstra√ß√£o de fun√ß√µes que podem auxiliar e muito no dia a dia.\nfilter_input Esta fun√ß√£o ir√° lhe ajudar pra abolir da sua vida as chamadas diretas as vari√°veis $_POST e $_GET e seus derivados, pois com esta fun√ß√£o podemos¬†obter uma vari√°vel espec√≠fica e realizar um tratamento automaticamente.\nExemplo:\n1 2 3 4 5 $dataGet =filter_input(INPUT_GET, \u0026#39;data\u0026#39;); echo¬†$dataGet; //output: 123456789 Obtemos o retorno passado por GET.\nDesta maneira¬†eliminamos¬†os ‚Äúissets‚Äù da vida utilizados para verificar a exist√™ncia da vari√°vel, auxiliando e agilizando no desenvolvimento üôÇ .\nFun√ß√µes para string addslashes Esta fun√ß√£o insere de forma autom√°tica o caractere de contra barra¬†‚Äú\u0026amp;#8221; antes dos seguintes caracteres contidos em uma string:\n‚Äò (aspas simples) ‚Äù (aspas duplas) \\ (contra barra) NULL (o byte NULL) Exemplo:\n1 2 3 4 5 $string = \u0026#34;Editora O\u0026#39;reilly\u0026#34;; echo¬†addslashes($string); //output: Editora O\\\u0026#39;reilly nl12br Sua fun√ß√£o √© inserir quebra de linha HTML antes de cada nova linha ‚Äú\\n‚Äù.\nExemplo:\n1 2 3 4 5 6 7 8 9 $string = \u0026#39;Texto demonstrativo para \\n quebra de linha.\u0026#39;; echo¬†nl2br($string); //output //¬†Texto demonstrativo para // quebra de linha. wordwrap Realiza a quebra de linha a partir de um determinado n√∫mero¬†de caractere.\nExemplo:\n1 2 3 4 5 6 7 8 9 10 11 $string = \u0026#34;Hello world\u0026#34;; $break = wordwrap( $string, 6, \u0026#34;\u0026#34;); echo $break; //output //Hello //World O PHP disp√µes de uma lista de 98 fun√ß√µes nativas para string, por isso antes de sair reinventando a roda de uma olhada nesta lista, as chances do PHP j√° dispor de uma fun√ß√£o para a sua necessidade s√£o consider√°veis.\nFun√ß√µes para array array_flip Inverte a rela√ß√£o entre chave e valor de um array.\nExemplo:\n1 2 3 4 5 6 7 8 9 $array = array(\u0026#34;foo\u0026#34; =\u0026gt; 0, \u0026#34;bar\u0026#34; =\u0026gt; 1); $flip = array_flip($array); var_dump($flip); //output //array(2) { [0] =\u0026gt; string(3) \u0026#34;foo\u0026#34; [1] =\u0026gt; string(3) \u0026#34;bar\u0026#34; } array_push Com esta fun√ß√£o podemos adicionar 1 ou mais elementos no final de um array.\nExemplo:\n1 2 3 4 5 6 7 8 9 10 11 $array = array(\u0026#34;foo\u0026#34;); print_r($array); //output: Array ( [0] =\u0026gt; foo ) array_push($array, \u0026#34;bar\u0026#34;); print_r($array); //output:¬†Array ( [0] =\u0026gt; foo [1] =\u0026gt; bar ) Como para string o PHP tamb√©m disp√µem de uma lista de 79 fun√ß√µes para array.\nN√£o somente isso, pois esta √© uma pequena amostra do vasto e poderosos recursos que dispomos ao nosso favor, e que por muitas vezes por falta de conhecimento n√£o fazemos uso de fun√ß√µes que pouparia um bom tempo e dor de cabe√ßa em nosso dia a dia.\nCom isso finalizo o post refor√ßando o conceito de ‚Äún√£o reinventar a roda‚Äù. Pois como podemos ver, h√° grandes chances do PHP dispor de uma fun√ß√£o nativa para algo que voc√™ acaba implementando de forma manual para solucionar um problema.\nPor isso fa√ßa uma pesquisa na documenta√ß√£o do php¬†antes de sair implementando solu√ß√µes b√°sicas,¬†esta abordagem vai agilizar o seu desenvolvimento aumentando tamb√©m em alguns casos¬†a performance do seu c√≥digo, pois estamos falando de fun√ß√µes nativas, onde j√° foram testadas e validadas pela comunidade.\nEspero ter colaborado¬†trazendo um post relevante ao seu dia, at√© a pr√≥xima!\n","permalink":"https://diegobrocanelli.com.br/php/php-e-seu-vasto-arsenal-de-funcoes-nativas/","summary":"Fala pessoal tudo certinho.\nTodos sabemos da grande capacidade e poder que o PHP disp√µem para o desenvolvimento web, porem o que muitos deixam escapar √© sua vasta lista de fun√ß√µes nativas que ele fornece.\nCom isso segue abaixo uma pequena demonstra√ß√£o de fun√ß√µes que podem auxiliar e muito no dia a dia.\nfilter_input Esta fun√ß√£o ir√° lhe ajudar pra abolir da sua vida as chamadas diretas as vari√°veis $_POST e $_GET e seus derivados, pois com esta fun√ß√£o podemos¬†obter uma vari√°vel espec√≠fica e realizar um tratamento automaticamente.","title":"PHP e seu vasto arsenal de fun√ß√µes nativas"},{"content":"√â poss√≠vel nos depararmos com a necessidade de implementar c√≥digo de barra numa aplica√ß√£o, podendo ser por diversos motivos, por exemplo na cria√ß√£o de boletos, para produtos ou identificadores.\nO Zend Framework 2 disp√µem de um poderoso componente Zenb\\Barcode\\Barcode¬†que nos auxilia na execu√ß√£o desta tarefa, de forma simples e r√°pida. Vale lembrar que existem diversos tipos de c√≥digos de barras e cada um tem sua regra a ser seguida para compor de forma correta o barcode. Sendo assim deve-se levar em considera√ß√£o o tipo de c√≥digo de barra que deseja criar em sua aplica√ß√£o.\nPara implementarmos um exemplo pr√°tico vou utilizar o skeleton appliation¬†default do Zf2. Vou subentender que voc√™ j√° conhece o processo de clone do skeleton e instala√ß√£o.\nCaso n√£o conhe√ßa:\nClonar reposit√≥rio do gihhub Instala√ß√£o de pacotes pelo composer Para utilizar o componente Zend\\Barcode\\Barcode a extens√£o GD deve estar habilitado\nPrimeiro passo vamos limpar a view padr√£o index, para renderizarmos nosso barcode.\nVamos implementar nossa estrutura no arquivo Application\\Controller\\IndexController.\nAo abrir o arquivo IndexController ele estar√° desta maneira.\nPrimeiro passo vamos importar o componente para o nosso controller¬†controlle.\nO componente Zend\\Barcode\\Barcode, √© uma classe abstrata ou seja n√£o pode ser instanciada, com isso vamos fazer uso direto em nosso m√©todo.\nO componente Barcode √© composto por 5 par√¢metros sendo eles:\nPrimeiro par√¢metro (required) nome do tipo do c√≥digo de barras, estando dispon√≠vel:\ncodabar codabar code128 code25 code25interleaved code39 ean13 ean2 ean5 ean8 error identcode itf14 leitcode planet postnet royalmail upca upce Segundo par√¢metro (required) nome do render, estando dispon√≠veis\nimage PDF (necessita do ZendPDF) svg Terceiro par√¢metro (optional) par√¢metros do barcode.\nQuarto par√¢metro (optional) par√¢metros do render.\nQuinto par√¢metro (optional) render Errors, default TRUE para exibir.\nVamos criar uma vari√°vel com para armazenar as op√ß·∫Ωos do barcode.\nO texto que estamos passando como par√¢metro, ser√° o mesmo impresso no c√≥digo de barras. Ou seja o valor desejado para compor o c√≥dido de barras deve ser informado conforme o tipo de barcode que ser√° implementado.\nVamos criar uma vari√°vel para passar os par√¢metros do render, podemos passar um array vazio, pois como vimos anteriormente ele √© um par√¢metro opcional, ou podemos por exempl definir o tipo de imagem que desejamos que o barcode seja criado.\nVamos criar uma vari√°vel chamada $barcodeImg, e armazenarmos a estrutura que ir√° criar o nosso barcode. Como primeiro par√¢mtro eu defini que ser√° utilizado o tipo de barcode chamado ‚Äúcodabar‚Äù__, e o segundo par√¢metro eu determino que dever ser criado no formato _‚Äúimage‚Äù\nAgora basta passar a vari√°vel $barcodeImg para nossa ViewModel.\nVamos incluir a estrutura pra exibir o nosso c√≥digo de barras na view index.phtml.\nCom isso teremos como retorno uma imagem no formato ‚Äújpeg‚Äù do nosso barcode.\nViram como √© extremamente f√°cil criar um barcode com o componente Zend\\Barcode\\Barcode. Claro que nossa implementa√ß√£o foi grosseira e constru√≠mos tudo no nosso controller, porem agora que sabemos como implementar basta construir toda sua regra de neg√≥cio e somente consumir o resultado no controller.\nAbaixo temos alguns outros exemplos de barcode.\nCode25\nCode25interleaved\ncode128\nFoi criado um reposit√≥rio no Github contendo os c√≥digos implementados neste post.\nBom √© isso ai pessoal espero que tenham gostado deste tutorial de como construir barcodes com o Zend Framework 2, at√© breve!\n","permalink":"https://diegobrocanelli.com.br/php/codigos-de-barra-com-zend-framework-2/","summary":"√â poss√≠vel nos depararmos com a necessidade de implementar c√≥digo de barra numa aplica√ß√£o, podendo ser por diversos motivos, por exemplo na cria√ß√£o de boletos, para produtos ou identificadores.\nO Zend Framework 2 disp√µem de um poderoso componente Zenb\\Barcode\\Barcode¬†que nos auxilia na execu√ß√£o desta tarefa, de forma simples e r√°pida. Vale lembrar que existem diversos tipos de c√≥digos de barras e cada um tem sua regra a ser seguida para compor de forma correta o barcode.","title":"C√≥digos de barra com Zend Framework 2"},{"content":" Ol√°, meu nome √© Diego Brocanelli! Engenheiro de Software | Arquiteto de Solu√ß√µes | Mentor Tenho mais de 10 anos de experi√™ncia em desenvolvimento de software, sou apaixonado por transformar desafios complexos em solu√ß√µes inovadoras. Sou desenvolvedor fullstack, com especialidade em back-end, onde projeto a arquitetura e modelagem de software, utilizando boas pr√°ticas e padr√µes de projeto para garantir sistemas robustos e escal√°veis. Atuo em sistemas cr√≠ticos/legados de alta import√¢ncia para o cliente, analisando, estruturando e implementando melhorias, evolu√ß√µes e ajustes. Sempre me dedicado a aprimorar a qualidade de c√≥digo e a implementar melhorias em sistemas cr√≠ticos, buscando acelerar processos e potencializar resultados. Adoro colaborar em equipe, compartilhando conhecimentos e inspirando outros a explorar novas possibilidades. Habilidades Arquitetura de Software; Engenharia de Requisitos; Desenvolvimento com PHP, JavaScript, Laravel, C# e Android; Testes de software; Pr√°ticas √Ågeis e Melhoria Cont√≠nua. Desde 2016, mantenho este blog e sou fundador canal no Youtube hhbr, onde compartilhamos palestras sobre tecnologia. Vamos nos conectar! Confira meus projetos no GitHub, Twitter, BlueSky e Linkedin para ver mais sobre como posso contribuir para o seu time. ","permalink":"https://diegobrocanelli.com.br/about/","summary":"about","title":"Sobre mim"}]