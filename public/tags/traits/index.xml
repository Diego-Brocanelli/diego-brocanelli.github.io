<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>traits on Diego Brocanelli</title>
    <link>https://diegobrocanelli.com.br/tags/traits/</link>
    <description>Recent content in traits on Diego Brocanelli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Tue, 08 Aug 2017 23:10:42 +0000</lastBuildDate><atom:link href="https://diegobrocanelli.com.br/tags/traits/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Como usar Traits no PHP com namespace</title>
      <link>https://diegobrocanelli.com.br/php/como-usar-traits-no-php-com-namespace/</link>
      <pubDate>Tue, 08 Aug 2017 23:10:42 +0000</pubDate>
      
      <guid>https://diegobrocanelli.com.br/php/como-usar-traits-no-php-com-namespace/</guid>
      <description>Recentemente lancei um post Como usar Traits no PHP, com isso surgiu uma duvida nos comentários realizado pelo Paulo Dias, onde questionou como poderia utilizar a mesma implementação porem fazendo uso de namespace.
Neste post vou implementar o mesmo conceito do post anterior demonstrando o uso de namespace.
Para nossa implementação devemos criar o diretório com o nome ‘traits_com_namespace’, após sua criação devemos acessar a raiz do diretório pelo terminal e executar o seguinte comando:</description>
    </item>
    
    <item>
      <title>Como usar Traits no PHP</title>
      <link>https://diegobrocanelli.com.br/php/como-usar-traits-no-php/</link>
      <pubDate>Mon, 07 Aug 2017 14:58:50 +0000</pubDate>
      
      <guid>https://diegobrocanelli.com.br/php/como-usar-traits-no-php/</guid>
      <description>Traits no PHP é um recurso que pode nos auxiliar e muito em nossos projetos, melhorando o reuso de código.
Antes de iniciarmos esse aprendizado, é interessante ressaltar que Traits é um recurso disponibilizado no PHP desde sua versão 5.4 lançada em 01/03/2012, com o intuito de melhorar o reuso de códigos.
Basicamente Traits são pequenos trechos de códigos, muito similar a classes abstratas onde não podemos instanciar uma trait, porém, com a diferença que podemos utiliza-lo em diversas classes ao mesmo tempo de forma independente.</description>
    </item>
    
  </channel>
</rss>
