<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>refactoring on Diego Brocanelli</title>
    <link>http://example.org/categories/refactoring/</link>
    <description>Recent content in refactoring on Diego Brocanelli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Mon, 17 Sep 2018 12:37:37 +0000</lastBuildDate><atom:link href="http://example.org/categories/refactoring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Refactoring – Replace temp with query</title>
      <link>http://example.org/php/refactoring-replace-temp-with-query/</link>
      <pubDate>Mon, 17 Sep 2018 12:37:37 +0000</pubDate>
      
      <guid>http://example.org/php/refactoring-replace-temp-with-query/</guid>
      <description>Olá, tubo bem?!
Frequentemente vemos o uso de variáveis locais realizarem operações e/ou ações.
1 2 3 4 5 6 7 8 9 10 &amp;lt;?php $basePrice = $this-&amp;gt;quantity * $this-&amp;gt;itemPrice; if ($basePrice &amp;gt; 1000){ return $basePrice * 0.95; } else{ return $basePrice * 0.98; } Por que devemos refatorar? Abrirá portas para utilizarmos o Extract Methods. Podemos reutilizar a mesma expressão em outras partes do sistema. Facilitamos as modificações/implementações de regras de negócio.</description>
    </item>
    
    <item>
      <title>Refactoring – Extract Method</title>
      <link>http://example.org/php/refactoring-extract-method/</link>
      <pubDate>Mon, 27 Aug 2018 16:17:28 +0000</pubDate>
      
      <guid>http://example.org/php/refactoring-extract-method/</guid>
      <description>Olá, tudo bem?!
Você já deve ter esbarrado ou feito manutenção em códigos que o método tem muitas ações, como bem sabemos isso é muito ruim, pois aumenta a complexidade da leitura, manutenção, acoplamento e dificulta seu reuso. Abaixo podemos observar um exemplo:
1 2 3 4 5 6 7 8 9 &amp;lt;?php public function printOwing() { $this-&amp;gt;printBanner(); //print details print(&amp;#34;name: &amp;#34; . $this-&amp;gt;name); print(&amp;#34;amount &amp;#34; . $this-&amp;gt;getOutstanding()); Por que refatorar?</description>
    </item>
    
    <item>
      <title>Refactoring – Extract Variable</title>
      <link>http://example.org/engenharia-de-software/refactoring-extract-variable/</link>
      <pubDate>Mon, 20 Aug 2018 17:21:01 +0000</pubDate>
      
      <guid>http://example.org/engenharia-de-software/refactoring-extract-variable/</guid>
      <description>Olá, tubo bem?!
Refatorar é um processo que faz parte do dia a dia do desenvolvedor, existem diversos motivos e técnicas para isso.
Um problema comum que deparamos são condicionais complexas, dificultando sua legibilidade e a manutenção, abaixo podemos observar um exemplo.
1 2 3 4 5 6 7 8 9 &amp;lt;?php if ( ($platform-&amp;gt;toUpperCase()-&amp;gt;indexOf(&amp;#34;MAC&amp;#34;) &amp;gt; -1) &amp;amp;&amp;amp; ($browser-&amp;gt;toUpperCase()-&amp;gt;indexOf(&amp;#34;IE&amp;#34;) &amp;gt; -1) &amp;amp;&amp;amp; $this-&amp;gt;wasInitialized() &amp;amp;&amp;amp; $this-&amp;gt;resize &amp;gt; 0 ) { // implementação da regra de negócio } Por que devemos refatorar?</description>
    </item>
    
  </channel>
</rss>
